[
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes #2054, fixes #2053, which occur when a user mixes \"fast\" and \"slow\" modes of the record / field builders. The string pointers that are used to implement the fast mechanism are assumed to come from an intern pool, i.e. the same string has the same pointer. This fails when Python strings are used, as they come from different pools, and aren't guaranteed to be stable.\r\n\r\nTo correct this, we can ensure that the slow-mode invalidates any pointers, and that the fast-mode treats `nullptr` as a cue to rebuild the pointer.",
  "closed_at":"2023-01-01T20:50:39Z",
  "comments":1,
  "created_at":"2023-01-01T12:59:33Z",
  "draft":false,
  "id":1515548131,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GcX1L",
  "number":2055,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-01T20:50:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: rebuild invalid `check` pointers in `ArrayBuilder`",
  "updated_at":"2023-01-01T20:50:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjE4NTI0NDc=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"I could do this one pretty quickly, since I'm at my laptop for the moment!",
  "closed_at":"2023-01-01T20:51:06Z",
  "comments":2,
  "created_at":"2023-01-01T20:02:13Z",
  "draft":false,
  "id":1515799695,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GdQ0b",
  "number":2056,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-01T20:51:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: increase awkward-cpp version for #2055.",
  "updated_at":"2023-01-01T20:51:07Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.5\n\n### Description and code to reproduce\n\nI'm getting a TypeError when calling `ak.to_packed` on a UnionType of two RegularTypes with different dimensions. \r\n\r\nContext: this is a unit test case from https://github.com/scverse/anndata/pull/647 that failed after upgrading to v2.x. \r\n\r\n```python\r\narr = ak.concatenate([ak.Array(np.ones((2, 2))), ak.Array(np.ones((2, 3)))])\r\nak.to_packed(arr)\r\n```\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/home/sturm/anaconda3/envs/anndata_dev/lib/python3.9/site-packages/awkward/operations/ak_to_packed.py\", line 70, in to_packed\r\n    return _impl(array, highlevel, behavior)\r\n  File \"/home/sturm/anaconda3/envs/anndata_dev/lib/python3.9/site-packages/awkward/operations/ak_to_packed.py\", line 75, in _impl\r\n    out = layout.to_packed()\r\n  File \"/home/sturm/anaconda3/envs/anndata_dev/lib/python3.9/site-packages/awkward/contents/unionarray.py\", line 1550, in to_packed\r\n    return UnionArray(\r\n  File \"/home/sturm/anaconda3/envs/anndata_dev/lib/python3.9/site-packages/awkward/contents/unionarray.py\", line 81, in __init__\r\n    raise ak._errors.wrap_error(\r\nTypeError: while calling\r\n\r\n    ak.to_packed(\r\n        array = <Array [[1, 1], [...], ..., [1, 1, 1]] type='4 * union[2 * ...'>\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: UnionArray cannot contain mergeable 'contents' (RegularArray of '2 * float64' and RegularArray of '3 * float64'); try UnionArray.simplified instead\r\n```\r\n\r\n\r\n",
  "closed_at":"2023-01-06T14:04:58Z",
  "comments":10,
  "created_at":"2023-01-02T19:48:40Z",
  "id":1516674237,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5aZpy9",
  "number":2058,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"TypeError in ak.to_packed with UnionType",
  "updated_at":"2023-01-06T14:04:58Z",
  "user":"MDQ6VXNlcjcwNTE0Nzk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nGiven an N-dimensional array for which `ak.unflatten(array, counts, axis=-1)` succeeds, passing `axis>N` does not inform the user that the axis is out of bounds, but rather:\r\n```\r\nError details: structure imposed by 'counts' does not fit in the array or partition at axis=N\r\n```",
  "closed_at":"2023-01-10T08:08:12Z",
  "comments":0,
  "created_at":"2023-01-03T14:47:34Z",
  "id":1517492681,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5acxnJ",
  "number":2059,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.unflatten` error message doesn't indicate axis out of boudns",
  "updated_at":"2023-01-10T08:08:12Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Update pyodide-build for QoL improvements in pyodide.",
  "closed_at":"2023-01-03T18:39:42Z",
  "comments":1,
  "created_at":"2023-01-03T16:42:57Z",
  "draft":false,
  "id":1517651305,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GjfWW",
  "number":2060,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-03T18:39:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pyodide-build",
  "updated_at":"2023-01-03T18:39:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Description of new feature\n\nPresently if you pass a typetracer to `awkward.backend` it presents an exception as follows:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/lgray/coffea-dev/coffea/tests/test_jetmet_tools.py\", line 74, in test_factorized_jet_corrector\r\n    corrs_jag = corrector.getCorrection(\r\n  File \"/Users/lgray/coffea-dev/coffea/coffea/jetmet_tools/FactorizedJetCorrector.py\", line 176, in getCorrection\r\n    corrs = self.getSubCorrections(**kwargs)\r\n  File \"/Users/lgray/coffea-dev/coffea/coffea/jetmet_tools/FactorizedJetCorrector.py\", line 230, in getSubCorrections\r\n    corrections.append(func(*fargs))  # raw awkward is eager\r\n  File \"/Users/lgray/coffea-dev/coffea/coffea/lookup_tools/lookup_base.py\", line 42, in __call__\r\n    print([awkward.backend(dak.typetracer_from_form(arg.layout.form)) for arg in args])\r\n  File \"/Users/lgray/coffea-dev/coffea/coffea/lookup_tools/lookup_base.py\", line 42, in <listcomp>\r\n    print([awkward.backend(dak.typetracer_from_form(arg.layout.form)) for arg in args])\r\n  File \"/Users/lgray/miniforge3/lib/python3.9/site-packages/awkward/operations/ak_backend.py\", line 25, in backend\r\n    return _impl(arrays)\r\n  File \"/Users/lgray/miniforge3/lib/python3.9/site-packages/awkward/operations/ak_backend.py\", line 31, in _impl\r\n    raise ak._errors.wrap_error(\r\nValueError: while calling\r\n\r\n    ak.backend(\r\n        *arrays = (<Array-typetracer type='?? * var * float64'>,)\r\n    )\r\n\r\nError details: at least one of the given arrays was a typetracer array. This is an internal backend that you should not have encountered. Please file a bug report at https://github.com/scikit-hep/awkward/issues/\r\n```\r\n\r\nAfter discussing with @jpivarski he recommends that this instead return `\"tt\"` as the backend type for typetracers since notionally that is a type of processing \"backend\" it's just purely metadata.",
  "closed_at":"2023-01-12T23:06:03Z",
  "comments":1,
  "created_at":"2023-01-03T21:11:10Z",
  "id":1517922010,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5aeaba",
  "number":2061,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`awkward.backend` should handle typetracers instead of throwing exception",
  "updated_at":"2023-01-12T23:06:03Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjQ2MTY5MDY=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Our existing CI requires several pieces of information to remain in sync in order to setup WASM building. With the new pyodide release, we can compute this (e.g. EMSDK version) at build time. This PR creates an additional `requirements-wasm.txt` that contains only the `pyodide-build` dependency meaning that all dependencies are contained in requirements files. \r\n\r\nThis PR will fail whilst https://github.com/pyodide/pyodide/issues/3415 is being fixed, modulo other bugs in the latest release.",
  "closed_at":"2023-06-22T17:24:46Z",
  "comments":14,
  "created_at":"2023-01-04T11:41:09Z",
  "draft":false,
  "id":1518826563,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GnigB",
  "number":2062,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-22T17:24:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: move to newest pyodide toolchain",
  "updated_at":"2023-06-22T17:24:55Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This is a PoC to fix #2058. Jim and I also discussed doing this properly at the form level, which I might even explore in another draft PR.\r\n\r\n- [ ] Restore `main` casting semantics",
  "closed_at":"2023-01-06T14:04:57Z",
  "comments":9,
  "created_at":"2023-01-04T23:36:23Z",
  "draft":false,
  "id":1519736299,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Gqpav",
  "number":2063,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-06T14:04:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support merging of `RegularArray` and `NumpyArray`",
  "updated_at":"2023-01-06T14:04:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nThe following example is left unchanged by `ak.fill_none`:\r\n```python\r\nimport awkward as ak\r\n\r\nrecord = ak.zip({\r\n    'x': [1, None],\r\n    'y': [2, 3]\r\n})\r\n\r\nresult = ak.fill_none(record, 0, axis=-1)\r\nresult.show()\r\n```\r\n\r\nI'm fairly sure that this is a bug, because `ak.is_none` walks successfully through records. My understanding of records is that it's only reducers that cannot peer through them. \r\n\r\nOf course, this example would imply\r\n```python\r\nrecord = ak.zip({\r\n    \"x\": [1, 4], \r\n\t\"y\": [2, 3]\r\n}).mask[[True, False]]\r\nassert ak.fill_none(record, 0, axis=-1).to_list() == [\r\n    {\"x\": 1, \"y\": 2},\r\n    0\r\n]\r\n```\r\n\r\nI think this is reasonable; again, `is_none` behaves identically to this. Maybe we _do_ want a parameter in future, e.g. `visit_records` or some such.",
  "closed_at":"2023-01-05T22:06:07Z",
  "comments":0,
  "created_at":"2023-01-05T01:48:46Z",
  "id":1519878580,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5al4G0",
  "number":2064,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.fill_none` doesn't support option-in-record",
  "updated_at":"2023-01-05T22:06:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2064 (see issue for details). I feel like we *might* have touched upon this before, so keen for comments.",
  "closed_at":"2023-01-05T22:06:06Z",
  "comments":3,
  "created_at":"2023-01-05T02:00:31Z",
  "draft":false,
  "id":1519891137,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GrLsP",
  "number":2065,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-05T22:06:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support option-in-record for `fill_none`",
  "updated_at":"2023-01-05T22:06:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR exposes typetracer in `ak.backend` and `ak.to_backend`. It does not yet expose any callable typetracer APIs.",
  "closed_at":"2023-01-05T18:08:57Z",
  "comments":2,
  "created_at":"2023-01-05T07:54:09Z",
  "draft":false,
  "id":1520266800,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Gsf3r",
  "number":2066,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-05T18:08:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: expose typetracer in public backend API",
  "updated_at":"2023-01-12T23:05:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\n1. We should return the endianness\r\n2. Should we use a namedtuple for safer API for users?\r\n3. We should expect additional parameters in unpickling in future, and add a version number for breaking changes",
  "closed_at":"2023-01-10T10:17:16Z",
  "comments":6,
  "created_at":"2023-01-05T16:58:05Z",
  "id":1521064038,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5aqZhm",
  "number":2067,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.to_buffers` doesn't declare endianness",
  "updated_at":"2023-01-10T10:17:16Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\n'2.0.5'\r\n\r\n### Description and code to reproduce\r\n\r\n`python -m pytest tests-cuda/test_1276-cuda-num.py`\r\n- [x] ListArray `ak.num` test fails in `axis=1` with `TypeError: slice indices must be integers or None or have an __index__ method`\r\nCuPy returns 0-D arrays instead of scalars.\r\n\r\n- [x] RecordArray ak.num test fails in `axis=0 `with `AttributeError: 'int' object has no attribute 'tolist'`\r\n\r\n```\r\n$ python\r\nPython 3.10.8 (main, Nov 24 2022, 14:13:03) [GCC 11.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import cupy as cp\r\n>>> cp.__version__\r\n'11.4.0'\r\n>>> import numpy as np\r\n>>> np.__version__\r\n'1.23.4'\r\n>>> \r\n\r\n```",
  "closed_at":"2023-01-09T18:24:04Z",
  "comments":0,
  "created_at":"2023-01-05T17:24:55Z",
  "id":1521103889,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5aqjQR",
  "number":2068,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"cuda ak.num tests fail",
  "updated_at":"2023-01-09T18:24:04Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"fixes issue #2068 ",
  "closed_at":"2023-01-09T18:24:03Z",
  "comments":7,
  "created_at":"2023-01-05T17:32:23Z",
  "draft":false,
  "id":1521113492,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GvbFw",
  "number":2069,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-09T18:24:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: listarray - slicing expects scalars",
  "updated_at":"2023-01-09T18:24:04Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nIf `string` is a primitive type, then `to_layout` should not succeed; we don't support `to_layout(10)`, but `to_layout(\"10\")` returns a length-one array of strings. This is seen in `ak.type(\"string\")`, which returns `1 * string` instead of erroring, whilst `ak.type(10)` returns `int64`. \r\n\r\nIt's not immediately obvious what we should do here. I am leaning towards suggesting that `ak.type()` should not support the leaf types (int64, string, etc), because it should operate on arrays.",
  "closed_at":"2023-01-13T00:33:25Z",
  "comments":7,
  "created_at":"2023-01-05T18:49:06Z",
  "id":1521221703,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5arABH",
  "number":2070,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.to_layout(str)` does not throw exception",
  "updated_at":"2023-01-13T00:33:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.0.5\n\n### Description and code to reproduce\n\nI'm trying to transition from awkward 1.x -> 2.x, and ran into an issue with `ak.unflatten` where the call in 1.x works, but fails in 2.x. In my code, I call:\r\n\r\n```python\r\n    num_constituents = ak.num(jets.constituents, axis=2)\r\n    # Convert to offsets\r\n    offsets_constituents = np.cumsum(np.asarray(ak.flatten(num_constituents, axis=1)))\r\n    offsets_constituents = np.insert(offsets_constituents, 0, 0)\r\n    # Then into starts and stops\r\n    starts_constituents = ak.unflatten(offsets_constituents[:-1], ak.num(num_constituents, axis=1))\r\n    stops_constituents = ak.unflatten(offsets_constituents[1:], ak.num(num_constituents, axis=1))\r\n```\r\n\r\nFor a bit of context, I'm trying to convert some info out from c++ back to python, and have found it convenient to return flattened np arrays and then unflatten on return. In any case, `ak.num(num_constituents, axis=1)` is 1D, as far as I can tell / recall, but in awkward 2.x, I get the following ValueError:\r\n\r\n```python\r\nE               ValueError: while calling\r\nE\r\nE                   ak.unflatten(\r\nE                       array = numpy.ndarray([  0   6  37 ... 397 422 442])\r\nE                       counts = <Array [1, 1, 1, 1, 1, ..., 1, 1, 1, 2, 1] type='17 * int64'>\r\nE                       axis = 0\r\nE                       highlevel = True\r\nE                       behavior = None\r\nE                   )\r\nE\r\nE               Error details: counts must be an integer or a one-dimensional array of integers\r\n```\r\n\r\nWith details on the variables here:\r\n\r\n```\r\narray      = array([  0,   6,  37,  50,  81, 118, 146, 173, 193, 208, 242, 275, 318,\r\n       336, 364, 397, 422, 442])\r\naxis       = 0\r\nbackend    = <awkward._backends.NumpyBackend object at 0x1109822f0>\r\nbehavior   = None\r\ncounts     = <IndexedArray len='17'>\r\n    <index><Index dtype='int64' len='17'>\r\n        [ 0  1  3  4  5  6  7  8  9 10 11 12 13 15 16 18 19]\r\n    </Index></index>\r\n    <content><NumpyArray dtype='int64' len='20'>\r\n        [1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 2 1]\r\n    </NumpyArray></content>\r\n</IndexedArray>\r\nhighlevel  = True\r\nlayout     = <NumpyArray dtype='int64' len='18'>\r\n    [  0   6  37  50  81 118 146 173 193 208 242 275 318 336 364 397 422 442]\r\n</NumpyArray>\r\n```\r\n\r\nIf I wrap the `ak.num(num_constituents, axis=1)` call with `np.asarray`, my integration tests pass, which at least suggests that it works (although the tests definitely aren't comprehensive), so it may be somewhat trivial. If it just needs to be cast, I think it would be a nicer user experience if `unflatten` did this on it's own. Thanks!\r\n",
  "closed_at":"2023-01-10T18:16:48Z",
  "comments":5,
  "created_at":"2023-01-05T19:32:08Z",
  "id":1521275729,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5arNNR",
  "number":2071,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"unflatten raises counts must be an integer or a one-dimensional array of integers on a 1D awkward-array (worked in 1.x)",
  "updated_at":"2023-01-10T18:16:48Z",
  "user":"MDQ6VXNlcjE1NzE5Mjc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Which documentation?\n\nDocumentation website\n\n### What needs to be documented?\n\nBetter fix this!",
  "closed_at":"2023-01-05T21:14:18Z",
  "comments":1,
  "created_at":"2023-01-05T21:04:07Z",
  "id":1521422716,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5arxF8",
  "number":2072,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Docs are not displaying keyword-only arguments",
  "updated_at":"2023-01-05T21:14:18Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"(And if we had any functions with position-only arguments, they would be missing, too.)\r\n\r\nThese three lines:\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/8d7a2c31f1ea24cef8a909fb12bb14eb812477ac/docs/prepare_docstrings.py#L146-L148\r\n\r\nshould become\r\n\r\n```python\r\n        argnames = [x.arg for x in node.args.posonlyargs + node.args.args + node.args.kwonlyargs]\r\n        defaults = [\"=\" + tostr(x) for x in node.args.defaults + node.args.kw_defaults]\r\n        defaults = [\"\"] * (len(argnames) - len(defaults)) + defaults\r\n```\r\n\r\nAs seen in this AST dump, that's where the other arguments are hiding:\r\n\r\n```python\r\n>>> print(ast.dump(ast.parse(\"def f(a, /, b, c=1, *, d=2): pass\"), indent=4))\r\nModule(\r\n    body=[\r\n        FunctionDef(\r\n            name='f',\r\n            args=arguments(\r\n                posonlyargs=[\r\n                    arg(arg='a')],\r\n                args=[\r\n                    arg(arg='b'),\r\n                    arg(arg='c')],\r\n                kwonlyargs=[\r\n                    arg(arg='d')],\r\n                kw_defaults=[\r\n                    Constant(value=2)],\r\n                defaults=[\r\n                    Constant(value=1)]),\r\n            body=[\r\n                Pass()],\r\n            decorator_list=[])],\r\n    type_ignores=[])\r\n```\r\n\r\n----------------------\r\n\r\nIs the above block the _only_ code that needs to be changed? The handling of lambda expressions might get the same treatment:\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/8d7a2c31f1ea24cef8a909fb12bb14eb812477ac/docs/prepare_docstrings.py#L86-L89\r\n\r\nbut there wouldn't be any lambda expressions in our documentation. That's only there for completeness.\r\n\r\nSimilarly, we don't actually have expressions in our documentation, but if we did, call would be missing keywords:\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/8d7a2c31f1ea24cef8a909fb12bb14eb812477ac/docs/prepare_docstrings.py#L61-L64\r\n\r\nFor reference, here is how the `Lambda` and `Call` AST nodes are formatted:\r\n\r\n```python\r\n>>> print(ast.dump(ast.parse(\"lambda a, /, b, c=1, *, d=2: None\"), indent=4))\r\nModule(\r\n    body=[\r\n        Expr(\r\n            value=Lambda(\r\n                args=arguments(\r\n                    posonlyargs=[\r\n                        arg(arg='a')],\r\n                    args=[\r\n                        arg(arg='b'),\r\n                        arg(arg='c')],\r\n                    kwonlyargs=[\r\n                        arg(arg='d')],\r\n                    kw_defaults=[\r\n                        Constant(value=2)],\r\n                    defaults=[\r\n                        Constant(value=1)]),\r\n                body=Constant(value=None)))],\r\n    type_ignores=[])\r\n```\r\n\r\nand\r\n\r\n```python\r\n>>> print(ast.dump(ast.parse(\"f(a, b=1, *args, **kwargs)\"), indent=4))\r\nModule(\r\n    body=[\r\n        Expr(\r\n            value=Call(\r\n                func=Name(id='f', ctx=Load()),\r\n                args=[\r\n                    Name(id='a', ctx=Load()),\r\n                    Starred(\r\n                        value=Name(id='args', ctx=Load()),\r\n                        ctx=Load())],\r\n                keywords=[\r\n                    keyword(\r\n                        arg='b',\r\n                        value=Constant(value=1)),\r\n                    keyword(\r\n                        value=Name(id='kwargs', ctx=Load()))]))],\r\n    type_ignores=[])\r\n```\r\n\r\nBut I think only the function signatures (in the `dosig` function) need to be addressed.\r\n\r\n(This, by the way, is a byproduct of the project starting in Python 2\u2014no position-only or keyword-only arguments\u2014and ReadTheDocs, which couldn't compile the C++ part and therefore couldn't actually `import awkward`, but it could compile the Python and therefore examine its AST. It could be resolved, in the long run, by replacing this now-unnecessary AST pass, but the above is a very quick fix to the current problem.)",
  "closed_at":"2023-01-06T01:17:44Z",
  "comments":0,
  "created_at":"2023-01-05T21:12:23Z",
  "id":1521432481,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5arzeh",
  "number":2073,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Documentation is missing keyword-only arguments",
  "updated_at":"2023-01-06T01:17:44Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2073",
  "closed_at":"2023-01-06T01:17:43Z",
  "comments":2,
  "created_at":"2023-01-05T21:30:15Z",
  "draft":false,
  "id":1521452473,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Gwl96",
  "number":2074,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-06T01:17:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: render keyword and varargs",
  "updated_at":"2023-01-06T01:17:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Discussed with Jim: checking links is useful, but the benefits do not outweigh the drawbacks RE flukiness & build time. In general, links break; we just need to run these tests locally on a schedule to ensure that nothing breaks due to mistyping.",
  "closed_at":"2023-01-05T22:47:10Z",
  "comments":2,
  "created_at":"2023-01-05T21:49:47Z",
  "draft":false,
  "id":1521483476,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Gwsy1",
  "number":2075,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-05T22:47:10Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: remove link checker",
  "updated_at":"2023-01-05T22:47:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\n```python3\r\nrecord = ak.Record({'x': 1, 'y': 2})\r\nprint(ak.unzip(record))\r\n```",
  "closed_at":"2023-01-06T00:42:20Z",
  "comments":0,
  "created_at":"2023-01-05T23:55:33Z",
  "id":1521635447,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5aslB3",
  "number":2076,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.unzip(record)` fails with exception",
  "updated_at":"2023-01-06T00:42:20Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2076 by adding an `allow_other=False` argument to `ak._util.unzip`. Most of the time we want to only be wrapping layouts, but it might occasionally be the case that an operation can legitimately produce a scalar. \r\n\r\n`allow_other=True` is set only for `ak.unzip` with this PR.",
  "closed_at":"2023-01-06T00:42:19Z",
  "comments":1,
  "created_at":"2023-01-06T00:05:11Z",
  "draft":false,
  "id":1521645300,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GxP4N",
  "number":2077,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-06T00:42:19Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support unzipping `ak.Record`",
  "updated_at":"2023-01-06T00:42:20Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nOur generic dispatch for array function always tries to wrap the result as a layout. For overloads that awkward defines, we should trust that the result is already a layout.",
  "closed_at":"2023-01-06T08:03:14Z",
  "comments":0,
  "created_at":"2023-01-06T01:09:21Z",
  "id":1521700786,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5as0-y",
  "number":2078,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`np.broadcast_arrays` array function overload has unknown result type",
  "updated_at":"2023-01-06T08:03:14Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Our integration with NumPy's array function mechanism means that users can in some cases invoke NumPy-only functions on Awkward Arrays (if they're rectilinear). However, our existing support for this mechanism is breaking Awkward overloads such as `ak.broadcast_arrays`, because it assumes that the result should be a layout.\r\n\r\nIn the long run, we could apply an inverse `_to_rectilinear` transform to recover high-level `ak.Array`/`ak.Record`s, but in this instance, I think the solution is even more clear cut.\r\n\r\nIf Awkward has an overload for an array function, then it should already be returning high-level objects. Therefore, we don't need to re-wrap the result. This PR applies such a fix, which means that any NumPy-only overloads that return non-arrays will still need a fix. However, this is a simple first step.\r\n\r\nFixes #2078 ",
  "closed_at":"2023-01-06T08:03:13Z",
  "comments":2,
  "created_at":"2023-01-06T01:15:39Z",
  "draft":false,
  "id":1521705254,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5GxcbT",
  "number":2079,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-06T08:03:13Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't try to re-wrap `array_function` overload results",
  "updated_at":"2023-01-06T08:03:14Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\n## The Problem\r\nSome context:\r\n\r\nHere I'm talking about [NumPy advanced indexing](https://numpy.org/devdocs/user/basics.indexing.html). There are two indexing modes; boolean and integer. \r\n\r\n* boolean: `x[x > 10]`\r\n* integer: `x[i, j, ..., z]` where `i, j, ..., z` are one dimensional integer arrays\r\n\r\nAwkward supports advanced indexing with the `advanced` mechanism and `_getitem_next`. In the first call to `_getitem_next`, Awkward performs a `_carry` with a one dimensional array. This recurses, and the carryd layout is sliced with a second one-dimensional array, (and so on for > 2D masks, or > 2 advanced integer ndices).\r\n\r\nThis first slice is the slowest, because we are carrying the outer dimension of the array, which, for an array of shape `(N, M)`, performs a copy of `M` elements for each index that we pull out. \r\n\r\nFor an array of `4096 * 512` elements, a coin-flip mask would produce a result with ~1048576 elements. This corresponds to a copy of size `1048576 * 512` elements for this first slice, which is 4,294,967,296 bytes for 64-bit dtypes!\r\n\r\n## Fix\r\n### Boolean Indexing\r\nIt does not make sense to support boolean indexing for truly ragged arrays \u2014 the positional correspondence is lost. As such, it is trivial to fix this case; simply recurse to the leaf 1D NumpyArray node, and apply the travelled boolean mask (`index, = np.where(mask.ravel())`), after first ensuring that the indexed array is a regular type.\r\n\r\n### Integer Indexing\r\n\r\nWe currently support advanced integer indexing for truly ragged arrays. I'd like to advocate for dropping this in the name of simplicity and performance, but the rest of us might have a sense of whether people are actually using this feature on ragged arrays. It would certainly a breaking change.\r\n\r\nIf we did remove ragged support, then the solution to integer indexing becomes very similar to that for boolean indexing. We simply use `np.ravel_multi_index()` and then index the leaf as above.\r\n\r\nIf we did not remove ragged support, then either we make the current advanced support a slow-path for ragged arrays, or, we push two lists to the leaf: \r\n- a tuple of layout offsets, mapped onto the leaf (1D) NumpyArray, e.g. \r\n   ```\r\n   00 01 02 03 04 05 06 07 08 09 10 11 12   Leaf\r\n    \\_____/ \\___/ \\_________/ \\_________/   Inner\r\n\r\n    \\_______________________/ \\_________/   Outer\r\n   ```\r\n- a tuple of the layout indices, as passed to `array._getitem`\r\n\r\nA kernel / NumPy function can be used to perform a ragged equivalent of `ravel_multi_index` here.\r\n\r\n\r\nThere's probably more to this, but these are my first thoughts.",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-01-06T12:48:00Z",
  "id":1522533783,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5awAWX",
  "number":2080,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"NumPy advanced indexing is very slow for multidimensional arrays",
  "updated_at":"2023-01-06T21:45:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nThis bug is caused by two separate things:\r\n1. We're not reading the correct variable into the `VERSION_INFO` compile definition\r\n2. We don't generate a tag that corresponds to the `awkward-cpp` version\r\n\r\nI know that we have discussed this previously, but I think this provides a good-enough reason to tag the repository upon release of awkward-cpp; it is helpful to be able to look at the repo as-it-was for a particular C++ release. In order to keep the C++ package and Python package decoupled, it would be better to also tag the C++ releases rather than use the Python version (which we know is also released at the same time as a C++ release, or near enough).",
  "closed_at":"2023-01-09T20:23:26Z",
  "comments":0,
  "created_at":"2023-01-06T13:57:16Z",
  "id":1522633842,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5awYxy",
  "number":2081,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`awkward-cpp` debug URLs are broken",
  "updated_at":"2023-01-09T20:23:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\n`np.broadcast_shapes((4, 0, 3), (1, 1, 3))` produces the shape `(4, 0, 3)`. The equivalent operation with `ak.broadcast_arrays` does not succeed.\r\n\r\nWe don't have to make this work for broadcasting ragged arrays against regular arrays, in my view.",
  "closed_at":"2023-01-06T23:08:23Z",
  "comments":0,
  "created_at":"2023-01-06T14:17:49Z",
  "id":1522661392,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5awfgQ",
  "number":2082,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Broadcasting a zero-length dimensions differs from NumPy",
  "updated_at":"2023-01-06T23:08:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2082, i.e. zero-size broadcasting:\r\n```python\r\nimport numpy as np\r\nimport awkward as ak\r\n\r\n\r\nx = np.arange(4 * 5 * 9).reshape(4, 5, 9)\r\nresult = np.broadcast_arrays(x[:, :0, ...], x[:, :1, ...])\r\n\r\ny = ak.from_numpy(x)\r\nresult_ak = ak.broadcast_arrays(y[:, :0, ...], y[:, :1, ...])\r\n\r\nassert ak._util.arrays_approx_equal(\r\n    result, result_ak\r\n)\r\n```",
  "closed_at":"2023-01-06T23:08:22Z",
  "comments":1,
  "created_at":"2023-01-06T14:24:30Z",
  "draft":false,
  "id":1522670001,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5G0xfG",
  "number":2083,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-06T23:08:22Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: correct NumPy zero-size broadcasting",
  "updated_at":"2023-01-06T23:08:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- fixes issue #2032 \r\n- enable boolean type test",
  "closed_at":"2023-01-12T20:47:09Z",
  "comments":5,
  "created_at":"2023-01-06T15:48:39Z",
  "draft":false,
  "id":1522782410,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5G1J37",
  "number":2084,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T20:47:09Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: remove Long64_t from common header-only",
  "updated_at":"2023-01-13T16:11:57Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\r\n\r\nTypetracer is going to become a public API beyond the `ak.backend` and `ak.to_backend` L1 functions. We will need to design an API that caters to all known parties, including dask-awkward and the work in Coffea (with PySpark).\r\n\r\nTypeTracer now serves several purposes:\r\n1. Predicting the forms of complex Awkward operations without requiring real data\r\n2. Tracking usage of data through Awkward operations at the granularity of the individual buffers\r\n\r\nWhilst (1) is already being used by dask-awkward, we would like to make this L2 instead of L3 if we're going to have additional users like coffea.\r\n\r\nCoffea's use case for (2) is similar to dask-awkward, but, crucially, dask-awkward introduces a new API abstraction that does not attempt to behave like the usual `ak.Array` object. Meanwhile, coffea wants to take user-defined functions and support data tracking transparently, which is a much harder proposition.\r\n\r\nIn fact, the mechanism by which typetracer works is \"tracing\" \u2014 evaluating some bytecode and keeping track of what took place. Coffea would require that the traced execution matches the real-data execution, so that it knows precisely which tree branches are required by the program. This is not always possible; any time that the user writes a conditional statement, only a single branch can be taken by the interpreter, and the branch is data dependent. \r\n\r\nThe main scenario that _we_ anticipate for coffea is that users wish to histogram data. `hist` and other histogramming packages expect a concrete array, i.e. something that `np.array(...)` returns a result for. Typetracer deliberately does not support this; typetracers have no data. Our suggestion to resolve this problem is twofold:\r\n\r\n1. Add support for typetracers to the existing scikit-hep tools of interest, e.g. hist.\r\n2. Add a mechanism by which users can explicitly declare data dependencies.\r\n\r\nBoth approaches may likely be solved by the introduction of a function `ak.empty_if_typetracer()`, which does two things:\r\n1. touches typetracer array data to mark usage\r\n2. returns an empty concrete array that can be used in histogramming, calculations etc.\r\n\r\nFor _users_, this function ensures that code expecting concrete arrays will JustWork\u2122 with typetracers, whilst also enabling framework authors to understand that an array is used. For _libraries_, this function can easily be used to add support for typetracer data-tracking. \r\n\r\n@jpivarski suggested the following modification to our existing typetracer-array usage errors:\r\n\r\n> Your code is being used in a preparatory phase without concrete data, but you're trying to access concrete data.\r\n> Wrap this array with `ak.empty_if_typetracer(...)` to get an empty array with the right type and avoid this error.\r\n\r\n```python\r\ndef empty_if_typetracer(array):\r\n    layout = ak.to_layout(array, allow_other=False)\r\n    behavior = ak._util.behavior_of(array)\r\n    if layout.backend is ak._typetracer.TypeTracer.instance():\r\n        layout._touch_data(True)\r\n        return layout.form.length_zero_array(behavior=behavior)\r\n    else:\r\n        return ak._util.wrap(layout, behavior=behavior)\r\n```",
  "closed_at":"2023-01-25T09:34:51Z",
  "comments":0,
  "created_at":"2023-01-06T18:07:52Z",
  "id":1522955943,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5axnan",
  "number":2085,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Expose typetracer to public API L1 and L2",
  "updated_at":"2023-01-25T09:34:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nThis will enable framework authors to identify problems with typetracer usage leading to loss of important fields.",
  "closed_at":"2023-01-13T18:40:09Z",
  "comments":0,
  "created_at":"2023-01-06T18:08:46Z",
  "id":1522956937,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5axnqJ",
  "number":2086,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Add a \"field does not exist\" `IndexError` subclass",
  "updated_at":"2023-01-13T18:40:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2081 \r\n\r\nWe will also need to update our Git workflow such that C++ releases are assigned tags.",
  "closed_at":"2023-01-09T20:23:25Z",
  "comments":2,
  "created_at":"2023-01-07T21:17:53Z",
  "draft":false,
  "id":1524157877,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5G5vby",
  "number":2087,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-09T20:23:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: broken links due to cpp split",
  "updated_at":"2023-01-09T20:23:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nOur `ak.*` NEP-18 overloaded functions do not directly copy the NumPy function signatures, e.g.:\r\n\r\n```python\r\n@ak._connect.numpy.implements(\"std\")\r\ndef std(\r\n    x,\r\n    weight=None,\r\n    ddof=0,\r\n    axis=None,\r\n    *,\r\n    keepdims=False,\r\n    mask_identity=False,\r\n    flatten_records=unset,\r\n):\r\n```\r\nvs NumPy's\r\n```python\r\n@array_function_dispatch(_std_dispatcher)\r\ndef std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=np._NoValue, *,\r\n        where=np._NoValue):\r\n```\r\n\r\nUnderstandably, we don't want to have NumPy-only parameters in our signatures, e.g. `out=`. However, this means that positional arguments are not guaranteed to match-up with Awkward. For example in this case, passing `axis` by position to `np.std` would not work, i.e.\r\n```pycon\r\n>>> np.std(ak.to_numpy(x), -1)\r\n0.816496580927726\r\n>>> np.std(x, -1)\r\nTraceback (most recent call last):\r\n  File \"/home/angus/.mambaforge/envs/awkward/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3442, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-9-0b53e1f1071f>\", line 1, in <module>\r\n    np.std(x, -1)\r\n  File \"<__array_function__ internals>\", line 200, in std\r\n  File \"/home/angus/Git/awkward/src/awkward/highlevel.py\", line 1411, in __array_function__\r\n    return ak._connect.numpy.array_function(\r\n  File \"/home/angus/Git/awkward/src/awkward/_connect/numpy.py\", line 59, in array_function\r\n    return function(*args, **kwargs)\r\n  File \"/home/angus/Git/awkward/src/awkward/operations/ak_std.py\", line 84, in std\r\n    return _impl(x, weight, ddof, axis, keepdims, mask_identity)\r\n  File \"/home/angus/Git/awkward/src/awkward/operations/ak_std.py\", line 168, in _impl\r\n    ak.operations.to_layout(weight, allow_record=False, allow_other=False),\r\n  File \"/home/angus/Git/awkward/src/awkward/operations/ak_to_layout.py\", line 39, in to_layout\r\n    return _impl(array, allow_record, allow_other)\r\n  File \"/home/angus/Git/awkward/src/awkward/operations/ak_to_layout.py\", line 124, in _impl\r\n    raise _errors.wrap_error(\r\nTypeError: while calling\r\n    ak.std(\r\n        x = <Array [[1, 2, 3]] type='1 * var * int64'>\r\n        weight = -1\r\n        ddof = 0\r\n        axis = None\r\n        keepdims = False\r\n        mask_identity = False\r\n    )\r\nError details: -1 cannot be converted into an Awkward Array\r\n```\r\n\r\nMost of the time this isn't a problem; in practice, the NumPy `out` parameter appears early in the argument list, which immediately breaks any subsequent positional correspondence.\r\n\r\nI think, in general, we can improve this. If we bind the parameters to the signature of the _NumPy_ function, we can then pass them into the appropriate Awkward order. If we assert that the Awkward function has no position-only parameters, then this would be trivial; pass in the bound parameters as keyword arguments.",
  "closed_at":"2023-01-09T09:38:41Z",
  "comments":2,
  "created_at":"2023-01-07T22:33:49Z",
  "id":1524194453,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5a2VyV",
  "number":2088,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"NEP 18 overloaded functions don't have same function signature",
  "updated_at":"2023-01-09T09:38:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR closes #2088 by defining explicit NEP-18 translations (\"implementations\"). These map the NumPy argument spec onto the Awkward function, and translate incompatible arguments (e.g. NumPy's `kind` vs Awkward's `stable` for `ak.sort`).\r\n\r\nThe TLDR of the motivation for this PR is that some NumPy functions like `np.std` have incompatible differences with our implementations e.g. `ak.std`. By explicitly defining a translation, we can decouple the two APIs.\r\n\r\nThis adds a slight runtime cost; now a call to `np.sort()` jumps through two additional functions. However, this is not an area of performance that we should care about (and CPython 3.11 speeds function calls up slightly, so it's a solved problem /s).\r\n\r\nWe could also use this mechanism to define the translations for non-Awkward overloaded NumPy functions, which just need better translations that our default heuristic-based approach takes.",
  "closed_at":"2023-01-09T09:38:40Z",
  "comments":3,
  "created_at":"2023-01-08T00:30:10Z",
  "draft":false,
  "id":1524244974,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5G6AWz",
  "number":2089,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-09T09:38:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: implement explicit translation for NEP-18",
  "updated_at":"2023-01-09T15:47:00Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The `sort` and `argsort` internal Content protocols don't actually use the `kind` or `order` arguments. Awkward instead uses `stable` to determine the sorting algorithm used. This PR removes those unused arguments.",
  "closed_at":"2023-01-12T19:46:30Z",
  "comments":3,
  "created_at":"2023-01-08T00:57:33Z",
  "draft":false,
  "id":1524254806,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5G6Caw",
  "number":2090,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T19:46:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor:  remove `kind` and `order` args to sorting protocols",
  "updated_at":"2023-01-12T19:46:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\r\n\r\n2.0.5\r\n\r\n### Description and code to reproduce\r\n\r\nThe following was run on Ubuntu 20 on a `e2-highcpu-32` GCP VM with 32 GB of RAM and 32 vCPUs.\r\n\r\nI downloaded the California dataset from https://github.com/microsoft/USBuildingFootprints and converted it from JSONL into Parquet with pyarrow and I attempted to do the same with fastparquet.\r\n\r\n```bash\r\n$ ogr2ogr -f GeoJSONSeq /vsistdout/ California.geojson \\\r\n    | jq -c '.properties * {geom: .geometry|tostring}' \\\r\n    > California.jsonl\r\n$ head -n1 California.jsonl | jq .\r\n```\r\n\r\n```json\r\n{\r\n  \"release\": 1,\r\n  \"capture_dates_range\": \"\",\r\n  \"geom\": \"{\\\"type\\\":\\\"Polygon\\\",\\\"coordinates\\\":[[[-114.127454,34.265674],[-114.127476,34.265839],[-114.127588,34.265829],[-114.127565,34.265663],[-114.127454,34.265674]]]}\"\r\n}\r\n```\r\n\r\nAwkward is able to produce a 947 MB Parquet file in 64.60 seconds.\r\n\r\n```bash\r\n/usr/bin/time -v \\\r\n    python3 -c \"import awkward as ak; f = open('California.jsonl', 'rb'); arr = ak.from_json(f, line_delimited=True); narr = arr.geom.layout.content.to_numpy(); arr2 = ak.from_json(narr.tobytes(), line_delimited=True); ak.to_parquet(arr2, 'awkward.snappy.pq', compression='snappy', row_group_size=37738); f.close()\"\r\n```\r\n\r\nWith ClickHouse I'm able to complete the same task in 18.26 seconds. Its resulting file size is 794 MB.\r\n\r\n```\r\n$ /usr/bin/time -v \\\r\n    clickhouse local \\\r\n          --input-format JSONEachRow \\\r\n          -q \"SELECT *\r\n              FROM table\r\n              FORMAT Parquet\" \\\r\n    < California.jsonl \\\r\n    > ch.snappy.pq\r\n```\r\n\r\nThe resulting Awkward Parquet almost matches ClickHouse in terms of row groups and using snappy compression.\r\n\r\n```\r\n<pyarrow._parquet.FileMetaData object at 0x7fb89c696d10>\r\n  created_by: parquet-cpp-arrow version 10.0.1\r\n  num_columns: 2\r\n  num_rows: 11542912\r\n  num_row_groups: 306\r\n  format_version: 2.6\r\n  serialized_size: 73744\r\n```\r\n\r\n```\r\n<pyarrow._parquet.FileMetaData object at 0x7f0926d54860>\r\n  created_by: parquet-cpp version 1.5.1-SNAPSHOT\r\n  num_columns: 3\r\n  num_rows: 11542912\r\n  num_row_groups: 306\r\n  format_version: 1.0\r\n  serialized_size: 228389\r\n```\r\n\r\nBelow is a flame graph from Awkward's execution.\r\n\r\n![parquet awkward snappy](https://user-images.githubusercontent.com/359316/211261513-06328c05-3769-4185-a1a7-9540200cfa37.svg)\r\n\r\nI ran a 10-line version of the above file through both PyArrow and ClickHouse. This is what `strace` and `perf` reported.\r\n\r\n```bash\r\n$ sudo su\r\n$ source .pq/bin/activate\r\n$ strace -wc \\\r\n    python3 -c \"import awkward as ak; f = open('cali10.jsonl', 'rb'); arr = ak.from_json(f, line_delimited=True); narr = arr.geom.layout.content.to_numpy(); arr2 = ak.from_json(narr.tobytes(), line_delimited=True); ak.to_parquet(arr2, 'awkward.snappy.pq', compression='snappy', row_group_size=37738); f.close()\"\r\n```\r\n\r\n```\r\n% time     seconds  usecs/call     calls    errors syscall\r\n------ ----------- ----------- --------- --------- ----------------\r\n 61.01    0.158111         261       604        50 openat\r\n 10.15    0.026304          14      1760       146 stat\r\n  6.44    0.016697          17       937           read\r\n  4.57    0.011833          11       992           fstat\r\n  3.98    0.010303          11       876         5 lseek\r\n  2.84    0.007351          13       563           close\r\n  2.61    0.006760          16       411           mmap\r\n  2.17    0.005612          12       455       438 ioctl\r\n  1.26    0.003253          27       117           munmap\r\n  1.15    0.002983          90        33           clone\r\n  0.81    0.002101          19       110           mprotect\r\n  0.80    0.002083          22        92           getdents64\r\n  0.60    0.001552          19        80           futex\r\n  0.56    0.001448          14       102           getcwd\r\n  0.35    0.000901          16        56           brk\r\n  0.26    0.000671           9        68           rt_sigaction\r\n  0.09    0.000224         224         1           execve\r\n  0.08    0.000213          11        18           pread64\r\n  0.06    0.000159          15        10           write\r\n  0.03    0.000069          13         5         2 readlink\r\n  0.03    0.000067          11         6           getpid\r\n  0.02    0.000051          12         4           getrandom\r\n  0.02    0.000044          14         3           uname\r\n  0.02    0.000042          21         2           open\r\n  0.01    0.000037          18         2           pipe2\r\n  0.01    0.000034          16         2           madvise\r\n  0.01    0.000032          10         3           sigaltstack\r\n  0.01    0.000031          10         3           rt_sigprocmask\r\n  0.01    0.000030          10         3           dup\r\n  0.01    0.000028          28         1           wait4\r\n  0.01    0.000023          11         2           sched_getaffinity\r\n  0.01    0.000022          11         2         1 arch_prctl\r\n  0.01    0.000014          14         1           sysinfo\r\n  0.01    0.000014          13         1         1 access\r\n  0.00    0.000011          11         1           fcntl\r\n  0.00    0.000011          11         1           prlimit64\r\n  0.00    0.000011          11         1           gettid\r\n  0.00    0.000009           9         1           set_tid_address\r\n  0.00    0.000009           8         1           set_robust_list\r\n------ ----------- ----------- --------- --------- ----------------\r\n100.00    0.259150                  7330       643 total\r\n```\r\n\r\n```bash\r\n$ perf stat -dd \\\r\n    ython3 -c \"import awkward as ak; f = open('cali10.jsonl', 'rb'); arr = ak.from_json(f, line_delimited=True); narr = arr.geom.layout.content.to_numpy(); arr2 = ak.from_json(narr.tobytes(), line_delimited=True); ak.to_parquet(arr2, 'awkward.snappy.pq', compression='snappy', row_group_size=37738); f.close()\"\r\n```\r\n\r\n```\r\n  4,150.43 msec task-clock                #   11.326 CPUs utilized\r\n       105      context-switches          #   25.299 /sec\r\n         2      cpu-migrations            #    0.482 /sec\r\n    12,034      page-faults               #    2.899 K/sec                  \r\n```\r\n\r\nClickHouse's syscall counts were all much lower:\r\n\r\n```\r\n% time     seconds  usecs/call     calls    errors syscall\r\n------ ----------- ----------- --------- --------- ----------------\r\n 29.52    0.019018        1584        12           futex\r\n 21.15    0.013625          63       214           gettid\r\n 11.19    0.007209         514        14           mprotect\r\n 11.06    0.007123         791         9         4 stat\r\n  8.72    0.005617         108        52           close\r\n  5.16    0.003327        1109         3           poll\r\n  2.19    0.001412          23        60           mmap\r\n  2.09    0.001344          39        34         1 openat\r\n  1.27    0.000816          18        44           read\r\n...\r\n  0.15    0.000098          48         2           write\r\n```\r\n\r\nAs were context switch and page fault counts.\r\n\r\n```\r\n  44      context-switches          #  372.955 /sec\r\n4997      page-faults               #   42.356 K/sec\r\n```\r\n\r\nThese are the versions of software involved:\r\n\r\n* awkward-2.0.5-py3-none-any.whl (541 kB)\r\n* awkward_cpp-6-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n* ClickHouse 22.13.1.1361 (official build)",
  "closed_at":"2023-01-09T18:27:02Z",
  "comments":6,
  "created_at":"2023-01-09T07:50:47Z",
  "id":1525093848,
  "labels":null,
  "locked":true,
  "milestone":null,
  "node_id":"I_kwDODBCWws5a5xXY",
  "number":2091,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Speed up JSON reading? (Formerly: Parquet writing)",
  "updated_at":"2023-01-09T18:27:02Z",
  "user":"MDQ6VXNlcjM1OTMxNg=="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.0.5\n\n### Description and code to reproduce\n\n```python3\r\nimport awkward as ak\r\nimport dask_awkward as dak\r\n\r\nx = ak.Array([[1, 2, 3],[4],[5,6]])\r\ntt = dak.typetracer_from_form(x.layout.form)\r\nprint(ak.num(tt))\r\n```\r\nresults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_num.py\", line 71, in num\r\n    return _impl(array, axis, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_num.py\", line 100, in _impl\r\n    out = ak._do.recursively_apply(layout, action, behavior, numpy_to_regular=True)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_do.py\", line 34, in recursively_apply\r\n    return layout._recursively_apply(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/listoffsetarray.py\", line 2051, in _recursively_apply\r\n    result = action(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_num.py\", line 93, in action\r\n    return ak.contents.NumpyArray(layout.stops.data - layout.starts.data)\r\nTypeError: unsupported operand type(s) for -: 'TypeTracerArray' and 'TypeTracerArray'\r\n```",
  "closed_at":"2023-01-12T15:53:49Z",
  "comments":1,
  "created_at":"2023-01-09T16:41:21Z",
  "id":1525940402,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5a9ACy",
  "number":2092,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"TypeTracers do not pass through ak.num",
  "updated_at":"2023-01-12T15:53:49Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak.run_lengths([[3, 3, 3, 3], [3]])` does not correctly consider the inner list boundary. This PR fixes the causative off-by-one error.\r\n\r\nThe cause of this bug is that the logic that forcibly splits runs across list boundaries was ignoring one-length sublists at the end of the list. This off-by-one error meant that runs were incorrectly computed across a boundary in such cases.",
  "closed_at":"2023-01-09T18:54:35Z",
  "comments":3,
  "created_at":"2023-01-09T17:46:30Z",
  "draft":false,
  "id":1526039017,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HABzL",
  "number":2093,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-09T18:54:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: off-by-one error in `run_lengths`",
  "updated_at":"2023-01-09T18:54:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2067 ",
  "closed_at":"2023-01-10T10:17:15Z",
  "comments":3,
  "created_at":"2023-01-09T20:24:06Z",
  "draft":false,
  "id":1526271565,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HA1cs",
  "number":2095,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-10T10:17:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add byteorder argument to `to_buffers`",
  "updated_at":"2023-01-10T10:17:16Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As discussed in #2070, `ak.type` would benefit from accepting a `highlevel` and` behavior` argument to control whether a composable `ak.types.Type` is returned in favour of the outer `ak.types.ArrayType`.\r\n\r\nI also think we should simplify `ak.type` to deal exclusively with array-like objects. #1840 added support for some more scalars, but now that I think about it, we don't have any way of expressing these at the Awkward level; you can't have a bare scalar in an Awkward type, only a length-1 array. I think `ak.type` should just deal with arrays / array-like objects, and conventional `isinstance()` etc can be used for other types. \r\n\r\nWe can make changes to `ak.type` non-breaking using `ak._util.deprecate` and requiring users to explicitly pass `highlevel=True/False`. Or, we can just declare it in the wiki, and write it in the changelog so that users don't need to write `ak.type(..., highlevel=True)`. ",
  "closed_at":"2023-01-13T00:33:24Z",
  "comments":4,
  "created_at":"2023-01-09T22:43:45Z",
  "id":1526449717,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5a-8Y1",
  "number":2096,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Simplify & unify `ak.type()`",
  "updated_at":"2023-01-13T00:33:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- Fixes #2059 \r\n- Replaces use of `np.ma` with our own option handling\r\n- Fixes loss of recursion",
  "closed_at":"2023-01-10T08:08:11Z",
  "comments":1,
  "created_at":"2023-01-09T23:45:47Z",
  "draft":false,
  "id":1526514642,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HBp4n",
  "number":2097,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-10T08:08:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: unflatten should accept non-packed `counts`",
  "updated_at":"2023-01-10T08:08:12Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As per #2070, this PR changes `ak.to_layout(\"string\")` to return the string (if `allow_other=True`). \r\n\r\nTo support the primary use case of the old behaviour, a new `__cast__` behavior has been added for [byte]strings so that ufunc operations can accept Python strings.\r\n\r\n### Changes\r\n- Add new `is_non_string_like_sequence`, rename `is_non_string_like_iterable` helper\r\n- Treat bytes/str as leaf types in `to_layout`\r\n- Add `__cast__` support to string-likes\r\n- Replaces usages of `is_non_string_like_iterable` with `is_non_string_like_sequence` where appropriate",
  "closed_at":"2023-01-10T17:03:30Z",
  "comments":7,
  "created_at":"2023-01-10T13:19:45Z",
  "draft":false,
  "id":1527381164,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HEgYS",
  "number":2098,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-10T17:03:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: remove string casting from `ak.to_layout`",
  "updated_at":"2023-01-12T21:33:20Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fully closes #2071 by generalising support for indexed types to any `indexed` layout type (not just non-categoricals).",
  "closed_at":"2023-01-10T18:16:46Z",
  "comments":1,
  "created_at":"2023-01-10T17:11:40Z",
  "draft":false,
  "id":1527739404,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HFtpw",
  "number":2099,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-10T18:16:46Z"
  },
  "reactions":{
   "hooray":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: support categorical counts in `ak.unflatten`",
  "updated_at":"2023-01-10T18:16:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR supersedes #1849 with a reduced scope. It aims to improve the robustness of our `NumpyLike` abstraction, namely:\r\n- [x] Introduce a `metadata` submodule containing the supported NumPy dtypes\r\n- [x] Take inspiration from the Array API, i.e. arguments and function naming\r\n- [x] Drop distinction between unknown scalars and unknown arrays\r\n- [x] Add `_kernels` submodule for kernel logic\r\n- [ ] Move all contentful operations to the `nplike` such that the array objects are mostly token-like\r\n\r\n### Outstanding Tasks\r\n- [ ] Restore `touch_data` in typetracer\r\n- [ ] Cleanup `byteorder` handling\r\n- [ ] Figure out typing",
  "closed_at":"2023-01-19T14:11:38Z",
  "comments":0,
  "created_at":"2023-01-11T13:12:28Z",
  "draft":true,
  "id":1529014174,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HJ-EP",
  "number":2100,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: deepen-nplike abstraction",
  "updated_at":"2023-03-16T13:33:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThe mixin machinery introduces a closure, which `pickle` can't serialise.",
  "closed_at":"2023-01-12T08:33:29Z",
  "comments":0,
  "created_at":"2023-01-11T14:02:28Z",
  "id":1529105365,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bJEvV",
  "number":2101,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"behaviors with decorated mixin methods cannot be pickled",
  "updated_at":"2023-01-12T08:33:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2101 ",
  "closed_at":"2023-01-12T08:33:28Z",
  "comments":1,
  "created_at":"2023-01-11T17:14:59Z",
  "draft":false,
  "id":1529403782,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HLSt_",
  "number":2102,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T08:33:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use pickleable closure for `ak.mixin_class_method`",
  "updated_at":"2023-01-12T08:33:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description\n\ntest",
  "closed_at":"2023-01-12T08:22:05Z",
  "comments":0,
  "created_at":"2023-01-12T08:21:57Z",
  "id":1530294665,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bNnGJ",
  "number":2103,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"test",
  "updated_at":"2023-01-12T08:22:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nThis was probably caused by #2063\r\n\r\n```python\r\n>>> import awkward as ak\r\n>> ak.concatenate([\r\n...    ak.Array([1,2,3]),\r\n...    ak.Array([1,2,None])\r\n... ])\r\n[1,\r\n 2,\r\n 3,\r\n 1,\r\n 2,\r\n None]\r\n----------------\r\ntype: 6 * union[\r\n    int64,\r\n    ?int64\r\n]",
  "closed_at":"2023-01-12T19:42:56Z",
  "comments":0,
  "created_at":"2023-01-12T12:29:37Z",
  "id":1530632115,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bO5ez",
  "number":2104,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`NumpyArray` merging is broken with option types",
  "updated_at":"2023-01-12T19:42:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This used to work; I broke this in #2063 by removing this code block. I'm not sure how I managed to do so, I must have been tired and confused the ND `NumpyArray` duplicated code with the 1D case (that we still need).\r\n\r\nFixes #2104 ",
  "closed_at":"2023-01-12T19:42:54Z",
  "comments":1,
  "created_at":"2023-01-12T12:37:33Z",
  "draft":false,
  "id":1530641695,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HPgmI",
  "number":2105,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T19:42:54Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: merging 1D `NumpyArray` with option",
  "updated_at":"2023-01-12T19:42:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThis might not be ideal; we'd prefer e.g. that behaviours defined in Awkward aren't included in the pickle explicitly.",
  "closed_at":"2023-01-12T20:37:45Z",
  "comments":3,
  "created_at":"2023-01-12T13:00:35Z",
  "id":1530674945,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bPD8B",
  "number":2106,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Pickle of array includes `array.__class__`",
  "updated_at":"2023-01-12T20:37:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThe failure mode here is where we have a lazy carryd `RecordArray`, which then contains an option. Our existing logic returns early if it doesn't see an option, union, or record.",
  "closed_at":"2023-01-12T19:46:56Z",
  "comments":0,
  "created_at":"2023-01-12T13:25:55Z",
  "id":1530712059,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bPM_7",
  "number":2107,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`fill_none` doesn't move through indexed types",
  "updated_at":"2023-01-12T19:46:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nMany of our `Content` methods are recursions that only have meaningful implementations at the final node. We could eliminate a class of bugs by moving these to `recursively_apply`.\r\n\r\nThere are several variants of this:\r\n1. naive recursion, category dependent (i.e. `is_list` instead of `isinstance(layout, ListOffsetArray)`)\r\n2. naive recursion, layout dependent (i.e. `isinstance(layout, ListOffsetArray)`)\r\n3. complex recursion, layout dependent\r\n\r\nOnly (1) and (2) can be ported to `recursively_apply`. For (2), we likely want a category-protocol e.g. `_fill_none` for all `is_option`. This likely should be implemented by:\r\n1. Moving `ak._do` to `ak.contents._do`.\r\n2. Adding a set of category mixins, and an associated `_do` implementation.\r\n3. Defining \"category protocols\" on these mixins (abstract methods)\r\n4. `recursively_apply` in `ak._do` recurses down to e.g. `is_option`, and then calls `ak.contents.categories.do.fill_none`?\r\n\r\nThis means that the L3 distinction is now \"is there a `do`?",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-01-12T16:08:04Z",
  "id":1530986040,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bQP44",
  "number":2108,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Move existing `Content` recursions into `recursively_apply` implementations",
  "updated_at":"2023-01-12T16:08:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nWe only support \"stable\", so we should just coerce the algorithms into a `stable` flag.",
  "closed_at":"2023-01-12T19:38:36Z",
  "comments":0,
  "created_at":"2023-01-12T17:10:20Z",
  "id":1531083091,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bQnlT",
  "number":2110,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"NEP-18 sort kind translation is incorrect",
  "updated_at":"2023-01-12T19:38:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2107",
  "closed_at":"2023-01-12T19:46:55Z",
  "comments":1,
  "created_at":"2023-01-12T17:18:29Z",
  "draft":false,
  "id":1531094011,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HRDhV",
  "number":2111,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T19:46:55Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support `is_indexed` types in `ak.fill_none`",
  "updated_at":"2023-01-12T19:46:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2110 and removes the `awkward_quick_sort` kernel.\r\n\r\nNumPy is moving away from naming sort algorithms. We're interpreting a specific algorithm here as \"stable\" or \"unstable\", and using that flag instead.",
  "closed_at":"2023-01-12T19:38:35Z",
  "comments":2,
  "created_at":"2023-01-12T17:22:27Z",
  "draft":false,
  "id":1531099695,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HREwc",
  "number":2112,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T19:38:34Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: be more permissive with sort translation",
  "updated_at":"2023-01-12T20:22:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"When pickling an Awkward Array, the use of pickle's `__getstate__` interface means that pickle stores a reference to `type(array)` in the ensuing bytestream. For arrays with a behavior class, this might not be available at unpickle time. e.g. if the author adds their class in `ak.behavior`, it will not be found in a new session during unpickling, unless the same registration is performed. Whilst this is a somewhat sensible constraint, we should not needlessly force this upon the user. \r\n\r\nConventionally, arrays can have `__name__`s that aren't found in their respective behaviours; these aren't currently errors, so we shouldn't fail to unpickle them. We can fix this situation this by removing the reference to the `type(array)` in favour of `object.__new__(ak.Array)`, so that only the `behavior` member references the class.\r\n\r\nNote that arrays with local behaviors (`ak.Array(..., behavior=...)`) will always fail to unpickle in the event that the references inside the behaviour can't be resolved!\r\n\r\nFixes #2106",
  "closed_at":"2023-01-12T20:37:43Z",
  "comments":4,
  "created_at":"2023-01-12T19:43:41Z",
  "draft":false,
  "id":1531260638,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HRnHs",
  "number":2113,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T20:37:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use `object.__new__(ak.Array)` for pickling constructor",
  "updated_at":"2023-01-12T20:42:49Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We don't want users to worry about the specific sorting algorithm being used, so here we hide the implementation details. I'm also fairly sure these are old docs - we use `std::stable_sort` and `std::sort` on CPU as of writing, which is `mergesort` and `introsort` respectively",
  "closed_at":"2023-01-12T21:01:24Z",
  "comments":1,
  "created_at":"2023-01-12T20:34:53Z",
  "draft":false,
  "id":1531331001,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HR2vO",
  "number":2114,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-12T21:01:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: remove reference to sorting implementation",
  "updated_at":"2023-01-12T21:01:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":null,
  "closed_at":"2023-01-13T00:17:38Z",
  "comments":2,
  "created_at":"2023-01-12T22:02:42Z",
  "draft":false,
  "id":1531425224,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HSLIG",
  "number":2115,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-13T00:17:38Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `TypeTracerArray` binary operators, `ak.Array.__str__` with a typetracer, attempts to call `touch_data` on non-typetracers, ...?",
  "updated_at":"2023-01-13T00:17:39Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2096, closes #2070, and adjusts #2098 to treat strings as character arrays.\r\n\r\nThe new `ScalarType` object let's us determine whether we have `ak.Record` or an `ak.Array` of records. It is the natural counterpart to the \"high-level\" `ArrayType`. Importantly, Awkward type objects _lose information_ if they're considered at the low-level, i.e. not wrapped by `ScalarType` or `ArrayType`; it is not possible to determine whether one has an Array or a Record. \r\n\r\n\r\nNote that this PR does not remove the `__cast__` implementation that converts string `ufunc` `*args` arguments to character arrays. This seems desirable in the main, unless there are well-known ufuncs that take string arguments?",
  "closed_at":"2023-01-13T00:33:23Z",
  "comments":7,
  "created_at":"2023-01-12T22:31:01Z",
  "draft":false,
  "id":1531447863,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HSQAE",
  "number":2116,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-13T00:33:22Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add `ScalarType` and treat bare strings as char arrays",
  "updated_at":"2023-01-13T00:33:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"For some reason, this test was failing on Windows 32-bit. I suspect it relates to the integer check of int64 against ULONGLONG, but I can't find any detailed information. It's easier just to try a different test.",
  "closed_at":"2023-01-13T01:09:56Z",
  "comments":4,
  "created_at":"2023-01-13T00:43:35Z",
  "draft":false,
  "id":1531542928,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HSkhq",
  "number":2117,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-13T01:09:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"test: fix on win32",
  "updated_at":"2023-01-13T01:16:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [mymindstorm/setup-emsdk](https://github.com/mymindstorm/setup-emsdk) from 11 to 12.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mymindstorm/setup-emsdk/releases\">mymindstorm/setup-emsdk's releases</a>.</em></p>\n<blockquote>\n<h2>Version 12</h2>\n<ul>\n<li>Updated to Node v16 (<a href=\"https://github-redirect.dependabot.com/mymindstorm/setup-emsdk/issues/28\">#28</a>)</li>\n<li>Resolved an issue that might cause the same cache to be pulled across multiple OSes (<a href=\"https://github-redirect.dependabot.com/mymindstorm/setup-emsdk/issues/30\">#30</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mymindstorm/setup-emsdk/commit/ab889da2abbcbb280f91ec4c215d3bb4f3a8f775\"><code>ab889da</code></a> Add os to default cache key</li>\n<li><a href=\"https://github.com/mymindstorm/setup-emsdk/commit/ed0d39adca709d0c4f7253f52a73759b7694a5f8\"><code>ed0d39a</code></a> Update to node16 and update some node deps</li>\n<li><a href=\"https://github.com/mymindstorm/setup-emsdk/commit/f8b10cde48668a05d65c7d1ad56a038f57756719\"><code>f8b10cd</code></a> Bump node-fetch from 2.6.1 to 2.6.7 (<a href=\"https://github-redirect.dependabot.com/mymindstorm/setup-emsdk/issues/25\">#25</a>)</li>\n<li><a href=\"https://github.com/mymindstorm/setup-emsdk/commit/5b66c2d3aac3b3d1572a96064e91833b68cf65d3\"><code>5b66c2d</code></a> Bump minimist from 1.2.5 to 1.2.6 (<a href=\"https://github-redirect.dependabot.com/mymindstorm/setup-emsdk/issues/24\">#24</a>)</li>\n<li>See full diff in <a href=\"https://github.com/mymindstorm/setup-emsdk/compare/v11...v12\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mymindstorm/setup-emsdk&package-manager=github_actions&previous-version=11&new-version=12)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-01-13T18:30:34Z",
  "comments":1,
  "created_at":"2023-01-13T17:04:10Z",
  "draft":false,
  "id":1532640642,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HWRvc",
  "number":2119,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-13T18:30:34Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump mymindstorm/setup-emsdk from 11 to 12",
  "updated_at":"2023-01-13T18:30:36Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2086 by introducing a new error type.",
  "closed_at":"2023-01-13T18:40:08Z",
  "comments":2,
  "created_at":"2023-01-13T18:14:18Z",
  "draft":false,
  "id":1532724691,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HWj-Y",
  "number":2120,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-13T18:40:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add exception for missing field",
  "updated_at":"2023-01-13T18:40:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"See `form`, `num_row_group` rendering in https://awkward-array.org/doc/main/reference/generated/ak.metadata_from_parquet.html#ak.metadata_from_parquet",
  "closed_at":"2023-01-16T17:05:44Z",
  "comments":1,
  "created_at":"2023-01-14T12:25:00Z",
  "draft":false,
  "id":1533233910,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HYPB5",
  "number":2122,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-16T17:05:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix bold docstring due to indent",
  "updated_at":"2023-01-16T17:05:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.0.6\r\n\r\n### Description and code to reproduce\r\n\r\nRunning `ak.singletons` on a typetracer (in particular this was a `_meta` is dask_awkward) results in:\r\n```\r\nE       AssertionError: bug in Awkward Array: attempt to set values of a TypeTracerArray\r\nE       \r\nE       See if this has been reported at https://github.com/scikit-hep/awkward-1.0/issues\r\n```",
  "closed_at":"2023-02-07T12:45:51Z",
  "comments":2,
  "created_at":"2023-01-14T15:24:16Z",
  "id":1533305758,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bZGOe",
  "number":2123,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Singletons does not complete successfully on a typetracer",
  "updated_at":"2023-02-07T12:45:51Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.0.6\n\n### Description and code to reproduce\n\nIn `awkward/_typetracer.py` line 1173, encountered running a dak meta through this function.\r\n\r\n```python3\r\n    def isclose(self, *args, **kwargs):\r\n        for x in args:\r\n            try_touch_data(x)\r\n        # a, b, rtol=1e-05, atol=1e-08, equal_nan=False                                                                                                                                                                     \r\n        raise ak._errors.wrap_error(NotImplementedError)\r\n```",
  "closed_at":"2023-01-25T09:34:50Z",
  "comments":0,
  "created_at":"2023-01-14T15:40:51Z",
  "id":1533310443,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bZHXr",
  "number":2124,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.isclose raises a NotImplemented error for typetracers",
  "updated_at":"2023-01-25T09:34:50Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"#2096 improved our type-handling, but had a sneaky bug in the ordering of the NumPy scalar type (`np.int16()`) handling: the generic `Integral` test would always catch these cases first, meaning that `ak.type(np.int16)` always produced `ScalarType(NumpyType(\"int64\"))` etc.\r\n\r\nThis PR simplifies this logic by re-ordering the tests.",
  "closed_at":"2023-01-16T21:35:54Z",
  "comments":1,
  "created_at":"2023-01-16T09:44:20Z",
  "draft":false,
  "id":1534615771,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Hcx2H",
  "number":2125,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-16T21:35:54Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: re-order cases to handle NumPy scalar types properly",
  "updated_at":"2023-01-16T21:35:55Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I've noticed intermittent failures in the \"Try It\" demo; sometimes we get a symbol definition error. However, it transpires that re-running the import fixes this. I added an explicit import for `awkward-cpp` that appears to fix the issue.\r\n\r\nThis PR also disables IPyParallel, which is a nuisance.",
  "closed_at":"2023-01-16T19:57:26Z",
  "comments":1,
  "created_at":"2023-01-16T11:58:29Z",
  "draft":false,
  "id":1534807602,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HdbFW",
  "number":2126,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-16T19:57:26Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: disable IPyParallel & load dependencies in reverse order",
  "updated_at":"2023-01-16T19:57:27Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR:\r\n- adds `ak.typetracer.empty_if_typetracer`\r\n- adds `ak.typetracer.typetracer_with_report` that builds a typetracer array and associated report from a `Form`.",
  "closed_at":"2023-05-10T15:50:11Z",
  "comments":15,
  "created_at":"2023-01-16T12:00:59Z",
  "draft":false,
  "id":1534810999,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Hdb0d",
  "number":2127,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-10T15:50:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `empty_if_typetracer` & expose more of typetracer to L2",
  "updated_at":"2023-05-10T17:12:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR\r\n- Removes `ak._util.to_arraylib` and\r\n- Deprecates `NumpyArray.to_numpy(allow_missing)` in favour of\r\n- Adds `NumpyArray.to_backend_array(allow_missing, backend)`\r\n- Deprecates support of `UnionArray` in `to_backend_array()`.\r\n\r\n`to_arraylib()` duplicates much of `to_numpy()`'s logic, and we also don't need to enshrine NumPy as more special than the general backend-agnos",
  "closed_at":"2023-01-16T19:51:50Z",
  "comments":1,
  "created_at":"2023-01-16T12:01:43Z",
  "draft":false,
  "id":1534812397,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HdcIa",
  "number":2128,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-16T19:51:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: remove `to_arraylib`",
  "updated_at":"2023-01-16T19:51:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nIn this example one can see that the memory consumption of the array is linear in the number of items, even though they're repeated\r\n```python\r\n>>> ak.to_categorical([\"thisisaverylongstring!!!!!!!thisisaverylongstring!!!!!!!\"]).nbytes\r\n80\r\n>>> ak.to_categorical([\"thisisaverylongstring!!!!!!!thisisaverylongstring!!!!!!!\", \"thisisaverylongstring!!!!!!!thisisaverylongstring!!!!!!!\"]).nbytes\r\n144\r\n```\r\n\r\nPerhaps caused by this, or just not implemented; merging two categoricals merges the contents naively.",
  "closed_at":"2023-10-30T15:26:19Z",
  "comments":3,
  "created_at":"2023-01-16T12:44:45Z",
  "id":1534875353,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bfFbZ",
  "number":2129,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.to_categorical()` does not actually store unique strings",
  "updated_at":"2023-10-30T15:26:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Recent updates to flake8-bugbear introduced B028 which warns for `f'\"{str}\"'` vs `f\"{str!r}\"`, and B906 which warns for non-exhaustive AST visitors.",
  "closed_at":"2023-01-16T21:14:50Z",
  "comments":2,
  "created_at":"2023-01-16T20:48:45Z",
  "draft":false,
  "id":1535468501,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Hfp-F",
  "number":2130,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-16T21:14:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: apply changes from flake8",
  "updated_at":"2023-01-16T21:14:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This tiny PR is part of the process of solidifying our typetracer / nplike mechanism. A long-term refactoring goal is to make imports more explicit, i.e.\r\n```python\r\nfrom awkward._util import some_func\r\n```\r\ninstead of\r\n```python\r\nimport awkward as ak\r\n\r\ndef use_some_func():\r\n\treturn some_func()\r\n```\r\nso by reducing the number of independent concepts in `_util`, we can avoid the import problems that stem from this.",
  "closed_at":"2023-01-17T14:30:37Z",
  "comments":4,
  "created_at":"2023-01-17T13:20:02Z",
  "draft":false,
  "id":1536370613,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HiqNF",
  "number":2131,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-17T14:30:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move `Singleton` to its own module",
  "updated_at":"2023-01-17T14:52:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This tiny PR  is part of the on-going nplike work. It moves the kernel logic into its own module, as kernels are associated with backends (but are still distinct concepts)",
  "closed_at":"2023-01-17T15:39:49Z",
  "comments":3,
  "created_at":"2023-01-17T13:30:12Z",
  "draft":false,
  "id":1536385066,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HitMg",
  "number":2132,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-17T15:39:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move kernel logic to _kernels",
  "updated_at":"2023-01-17T15:39:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.11.4 to 2.12.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.12.0</h2>\n<ul>\n<li>\u2728 Adds support for PyPy arm64 wheels. This means that you can build PyPy wheels for Apple Silicon machines. Cross-compilation is not supported for these wheels, so you'll have to build on an Apple Silicon machine. (<a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1372\">#1372</a>)</li>\n<li>\ud83d\udee0 Pinned version updates, including PyPy to v7.3.11 and setuptools to 66.0.0.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.12.0</h3>\n<p><em>16 Jan 2023</em></p>\n<ul>\n<li>\u2728 Adds support for PyPy arm64 wheels. This means that you can build PyPy wheels for Apple Silicon machines. Cross-compilation is not supported for these wheels, so you'll have to build on an Apple Silicon machine. (<a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1372\">#1372</a>)</li>\n<li>\ud83d\udee0 Pinned version updates, including PyPy to v7.3.11 and setuptools to 66.0.0.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/a808017c3962f4d678fe685239668aad8c150932\"><code>a808017</code></a> Bump version: v2.12.0</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/4e1fcb8df69a5eef7d82b06b70253846342eb0a0\"><code>4e1fcb8</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1394\">#1394</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/4afa12ed06e8462c24040a41ee170c8983001172\"><code>4afa12e</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/92cb1d8990e2418c0bd24c5e8d74406345216b58\"><code>92cb1d8</code></a> feat: add PyPy macOS arm64 (<a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1372\">#1372</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/06c4927798c6cc67792db86e6e133df4ac0a7139\"><code>06c4927</code></a> [Bot] Update dependencies (<a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1381\">#1381</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9b0d63b2f43d06853cbc7eae711646d93983a4e4\"><code>9b0d63b</code></a> ci: use normal AppVeyor macOS image (<a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1388\">#1388</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/6df156807a9b029ed513c6b5c4f4fbe43f7a2c0c\"><code>6df1568</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://github-redirect.dependabot.com/pypa/cibuildwheel/issues/1382\">#1382</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.11.4...v2.12.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.11.4&new-version=2.12.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-01-30T18:09:12Z",
  "comments":2,
  "created_at":"2023-01-17T17:06:14Z",
  "draft":false,
  "id":1536736504,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Hj4C-",
  "number":2133,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T18:09:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.11.4 to 2.12.0",
  "updated_at":"2023-01-30T18:09:13Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The work to move to an array-API inspired UX requires that we drop `array` and `asarray` distinctions; now `asarray` takes a `copy` parameter, and drops the `order` parameter.\r\n\r\nI'm gradually dropping `nplike` usage in our tests, where appropriate; we should probably focus on testing L1 and L2, not L3.",
  "closed_at":"2023-01-18T18:31:31Z",
  "comments":1,
  "created_at":"2023-01-17T18:28:36Z",
  "draft":false,
  "id":1536844691,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5HkO5X",
  "number":2134,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-18T18:31:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: use `nplike.asarray`",
  "updated_at":"2023-01-18T18:31:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"The new typetracer report optimization PR in dask-awkward (https://github.com/dask-contrib/dask-awkward/pull/141) is surfacing some features that are missing for typetracers. Creating this issue to track some findings from the dask-awkward test suite that have surfaced after implementing an optimization using the new typetracer data-touch feature.\r\n\r\nIt's definitely possible some of these may be issues in dask-awkward itself, so please let us know if you think that's the case.\r\n\r\n- [ ] A slicing error:\r\n\t```\r\n\t  File \"/Users/ddavis/.pyenv/versions/dev/lib/python3.11/site-packages/awkward/contents/recordarray.py\", line 300, in _getitem_at\r\n\t    raise ak._errors.index_error(self, where)\r\n\tIndexError: while attempting to slice\r\n\t\r\n\t    <Array-typetracer [...] type='?? * {run: int64, luminosityBlock: int64,...'>\r\n\t\r\n\twith\r\n\t\r\n\t    0\r\n\t\r\n\tat inner RecordArray of length 0, using sub-slice 0.\r\n\t```\r\n- [x] A truedivide `NotImplementedError`\r\n- [x] `nplikes.Numpy.asarray` not compatible with `UnknownScalar`\r\n\t```\r\n\t    def asarray(self, *args, **kwargs):\r\n\t        # array[, dtype=][, order=]\r\n\t>       return self._module.asarray(*args, **kwargs)\r\n\tE       TypeError: int() argument must be a string, a bytes-like object or a real number, not 'UnknownScalar'\r\n\t```\r\n- [ ] Error with building an array of UnknownScalars. In `ak_from_iter`:\r\n\t```\r\n\t        builder = _ext.ArrayBuilder(initial=initial, resize=resize)\r\n\t>       builder.fromiter(iterable)\r\n\tE       ValueError: cannot convert MaybeNone(UnknownScalar(dtype('int64'))) (type MaybeNone) to an array element\r\n\tE       \r\n\tE       (https://github.com/scikit-hep/awkward/blob/awkward-cpp-7/awkward-cpp/src/python/content.cpp#L191)\r\n\t\r\n\tallow_record = True\r\n\tbehavior   = None\r\n\tbuilder    = <awkward_cpp.lib._ext.ArrayBuilder object at 0x148e4ff30>\r\n\thighlevel  = True\r\n\tinitial    = 1024\r\n\titerable   = [MaybeNone(UnknownScalar(dtype('int64'))), MaybeNone(UnknownScalar(dtype('int64'))), MaybeNone(UnknownScalar(dtype('int64')))]\r\n\tresize     = 1.5\r\n\t```\r\n\r\nTo actually run the test suite one can check out PR https://github.com/dask-contrib/dask-awkward/pull/141 \r\n\r\nCc: @martindurant ",
  "closed_at":"2023-07-02T17:14:31Z",
  "comments":7,
  "created_at":"2023-01-17T19:52:08Z",
  "id":1536954998,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5bnBJ2",
  "number":2135,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Typetracer arrays: support for more operations based on dask-awkward's necessary columns optimization",
  "updated_at":"2023-07-02T17:14:31Z",
  "user":"MDQ6VXNlcjMyMDIwOTA="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I'm not 100% happy with our current monorepo design. I'd like to better isolate the \"monorepo\" parts from the \"Python package\" parts. Right now, that boundary is mainly the `noxfile.py` and `dev/` scripts; nearly everything else remains in the sdist for awkward/awkward-cpp.\r\nFurther to this, I'd like to unify our usage of nox and our CI configuration more closely; right now, they're both somewhat separate. However, both of these bugbears are not big enough to warrant doing anything at the moment. \r\n\r\nThis PR tackles the smallest issue, which is to remove files that are only needed by specific tools. In this case, we don't need `requirements-dev.txt` anywhere except our noxfile, so that's where the contents now live. \r\n\r\nAdditionally, I set `reuse_venv=True`. This only means that the venvs get re-used by default, though without the `-R` flag, the dependencies are re-installed each time, so this is only a small change.",
  "closed_at":"2023-01-19T19:42:09Z",
  "comments":1,
  "created_at":"2023-01-19T09:05:53Z",
  "draft":false,
  "id":1548759524,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IGmzq",
  "number":2136,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-19T19:42:09Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: isolate nox dependencies in `noxfile`",
  "updated_at":"2023-01-19T19:42:10Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This is another PR to slowly move our nplikes over towards the array API, in order to improve the safety & maintainability.",
  "closed_at":"2023-01-20T12:15:25Z",
  "comments":2,
  "created_at":"2023-01-19T09:07:40Z",
  "draft":false,
  "id":1548761895,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IGnUg",
  "number":2137,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-20T12:15:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: make `nplike.zeros` et al. use Array API type signatures",
  "updated_at":"2023-01-20T12:15:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Our nplikes include several functions that are not used or tested. This means that modifications to this code are untested and add to the maintenance budget. This PR removes such functions, and in the process adds some explicit signatures to any touched functions.",
  "closed_at":"2023-01-20T12:12:30Z",
  "comments":7,
  "created_at":"2023-01-19T12:34:45Z",
  "draft":false,
  "id":1549069033,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IHqsO",
  "number":2138,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-20T12:12:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: drop unused nplike functions",
  "updated_at":"2023-01-20T12:12:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This tiny PR is just something I noticed during refactoring. ",
  "closed_at":"2023-01-19T19:35:00Z",
  "comments":1,
  "created_at":"2023-01-19T14:05:22Z",
  "draft":false,
  "id":1549231269,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IIOYb",
  "number":2139,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-19T19:35:00Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: remove dead code",
  "updated_at":"2023-01-19T19:35:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Related to #2136 is the point @ianna raised at our meeting today, that it's easy to miss a `nox -s prepare` call (or to call it with nox not installed and not see the error message). It would be sufficient to check for the existence of `awkward-cpp/include/awkward/kernels.h` during wheel-building (either `awkward-cpp` or `awkward`, since the recommended way to make both is with `pip`).\r\n\r\n_Originally posted by @jpivarski in https://github.com/scikit-hep/awkward/pull/2136#pullrequestreview-1262492186_\r\n            ",
  "closed_at":"2023-01-20T18:34:06Z",
  "comments":1,
  "created_at":"2023-01-19T19:31:30Z",
  "id":1549821202,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5cYGUS",
  "number":2140,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Don't build sdist or wheels if nox hasn't been run",
  "updated_at":"2023-01-20T18:34:06Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"One issue we've run into with the new typetracer-report based optimization in dask-awkward is slicing a typetracer array with \"known\" length created from a length zero array raises (see below)\r\n\r\nThis PR adds a new kwarg to `typetracer_with_report` to make it easy to create an unknown-length typetracer array with report.\r\n\r\nThis also raises a question: Should forgetting the length be the default?\r\n\r\n\r\n```python\r\nIn [11]: a = ak.Array([{\"x\": [1, 2, 3]}, {\"x\": [2, 3]}])\r\n\r\nIn [12]: ak.Array(a.layout.form.length_zero_array().layout.to_typetracer())[0]\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\nCell In[12], line 1\r\n----> 1 ak.Array(a.layout.form.length_zero_array().layout.to_typetracer())[0]\r\n\r\nFile ~/.pyenv/versions/3.11.1/envs/dev/lib/python3.11/site-packages/awkward/highlevel.py:956, in Array.__getitem__(self, where)\r\n    527 \"\"\"\r\n    528 Args:\r\n    529     where (many types supported; see below): Index of positions to\r\n   (...)\r\n    953 have the same dimension as the array being indexed.\r\n    954 \"\"\"\r\n    955 with ak._errors.SlicingErrorContext(self, where):\r\n--> 956     out = self._layout[where]\r\n    957     if isinstance(out, ak.contents.NumpyArray):\r\n    958         array_param = out.parameter(\"__array__\")\r\n\r\nFile ~/.pyenv/versions/3.11.1/envs/dev/lib/python3.11/site-packages/awkward/contents/content.py:509, in Content.__getitem__(self, where)\r\n    508 def __getitem__(self, where):\r\n--> 509     return self._getitem(where)\r\n\r\nFile ~/.pyenv/versions/3.11.1/envs/dev/lib/python3.11/site-packages/awkward/contents/content.py:513, in Content._getitem(self, where)\r\n    511 def _getitem(self, where):\r\n    512     if ak._util.is_integer(where):\r\n--> 513         return self._getitem_at(where)\r\n    515     elif isinstance(where, slice) and where.step is None:\r\n    516         return self._getitem_range(where)\r\n\r\nFile ~/.pyenv/versions/3.11.1/envs/dev/lib/python3.11/site-packages/awkward/contents/recordarray.py:300, in RecordArray._getitem_at(self, where)\r\n    297     where += self.length\r\n    299 if where < 0 or where >= self.length:\r\n--> 300     raise ak._errors.index_error(self, where)\r\n    301 return Record(self, where)\r\n\r\nIndexError: while attempting to slice\r\n\r\n    <Array-typetracer [...] type='?? * {x: var * int64}'>\r\n\r\nwith\r\n\r\n    0\r\n\r\nat inner RecordArray of length 0, using sub-slice 0.\r\n```",
  "closed_at":"2023-01-19T22:41:04Z",
  "comments":5,
  "created_at":"2023-01-19T20:58:02Z",
  "draft":false,
  "id":1549933331,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IKnxq",
  "number":2141,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-19T22:41:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add ability to forget length of typetracer created with `typetracer_from_report`",
  "updated_at":"2023-01-19T22:41:05Z",
  "user":"MDQ6VXNlcjMyMDIwOTA="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"My recollection of this test special case is that we want to ensure our oldest NumPy supported version is building & testing properly. I've set this to 1.14.5 for now, which is what `oldest-supported-numpy` reports for 3.7. This CI configuration was seemingly backwards.",
  "closed_at":"2023-01-19T21:53:09Z",
  "comments":3,
  "created_at":"2023-01-19T21:19:40Z",
  "draft":false,
  "id":1549958117,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IKtMU",
  "number":2142,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-19T21:53:09Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: test NumPy < 1.17",
  "updated_at":"2023-01-19T21:53:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Order of operations:\r\n\r\n- [x] Last awkward-cpp release for awkward 2.0.x\r\n- [x] Finish #2276, #2269, #2260, #2280\r\n- [x] Last awkward 2.0.x patch release\r\n- [x] Bump NumPy minimum version to 1.17 in both awkward and awkward-cpp # https://github.com/scikit-hep/awkward/pull/2282\r\n- [x] Release 2.1.0",
  "closed_at":"2023-03-08T23:19:06Z",
  "comments":0,
  "created_at":"2023-01-19T21:59:22Z",
  "id":1550007178,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5cYzuK",
  "number":2143,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"2.1.0 Release Checklist",
  "updated_at":"2023-03-08T23:19:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I believe that we're over-allocating here, because the default dtype is usually a 64-bit float on _most_ systems. In any case, it's larger than a single byte, whilst I believe that we want to be allocating exactly `item.second` bytes.\r\n\r\n@ianna are you able to check this logic for me? :)",
  "closed_at":"2023-01-24T17:55:43Z",
  "comments":2,
  "created_at":"2023-01-20T12:02:49Z",
  "draft":false,
  "id":1550740853,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5INS7j",
  "number":2145,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-24T17:55:43Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: specify `dtype` for buffers in `from_rdataframe`.",
  "updated_at":"2023-01-24T17:55:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2140 by informing the user during the build of `awkward-cpp` if the header-only directory or `include/awkward/kernels.h` are missing.",
  "closed_at":"2023-01-20T18:34:04Z",
  "comments":3,
  "created_at":"2023-01-20T12:23:30Z",
  "draft":false,
  "id":1550767168,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5INYs8",
  "number":2146,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-20T18:34:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: add helpful message if cpp install is not prepared",
  "updated_at":"2023-01-20T18:47:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR hardens[^1] the NumpyLike interface to accept concrete parameters, and require keyword-only usage of some arguments e.g. `dtype`.\r\n\r\nIt is the first in a series of PRs that will gradually split `_nplikes` into a package containing a file-per-nplike, and a subsequent full implementation of typetracer that removes `UnknownScalar`\r\n\r\nI chose to introduce `maybe_reuse` which is similar to the existing `out` parameter that we use. The purpose of the rename is to make it clear that the nplike can ignore this, and the return result therefore may be a new array. I think we need this optimisation; it's used in broadcasting.\r\n\r\n[^1]: \"hardening\" just means replacing `*args` with concrete types and names.",
  "closed_at":"2023-01-20T22:37:50Z",
  "comments":2,
  "created_at":"2023-01-20T17:10:49Z",
  "draft":false,
  "id":1551192778,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IOzwD",
  "number":2148,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-20T22:37:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: start hardening nplike signatures",
  "updated_at":"2023-01-20T22:37:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This won't go in until #2148 is done, and then it will be on top of that (i.e. update this branch).\r\n\r\nThe first commit only adds code, and I'm 99% sure that it will merge easily with #2148.\r\n\r\nWhat remains is to remove the `NotImplementedError` stubs of all the _ufuncs_ (only ufuncs) on `TypeTracer`.\r\n\r\nSome of them have been implemented already, and if there are tests for the existing implementations, they would be a good check on the correctness of the general implementation.\r\n\r\nOops, I forgot to add broadcasting. Next commit.",
  "closed_at":"2023-01-20T23:00:23Z",
  "comments":5,
  "created_at":"2023-01-20T20:04:15Z",
  "draft":false,
  "id":1551379884,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IPcII",
  "number":2149,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-20T23:00:23Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: implement all ufuncs on TypeTracer.",
  "updated_at":"2023-01-20T23:29:30Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR splits the `TypeTracer` ufunc logic handling from #2127, using the `Backend.apply_ufunc` machinery to implement `ufunc` operations on `ak.Array`s backed by `TypeTracer.\r\n\r\nIt implements \"coercion\" from `UnknownScalar`, `UnknownLength`, and `MaybeNone` values to the appropriate NumPy empty arrays, before applying the ufunc.",
  "closed_at":"2023-01-21T22:03:27Z",
  "comments":1,
  "created_at":"2023-01-20T23:37:54Z",
  "draft":false,
  "id":1551579436,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IQGGH",
  "number":2150,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-21T22:03:27Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move typetracer ufunc handling to backend [1 of 2]",
  "updated_at":"2023-01-21T22:03:28Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR is very similar to #2150. Whilst that PR deals with `np.ufunc()` operations on `ak.Array` objects, this PR is concerned with `np.ufunc()` operations on the _low level_ `TypeTracerArray` object. Like #2150, this PR adds support for treating scalar types (`UnknownScalar`, `MaybeNone`) as 0-D arrays.",
  "closed_at":"2023-01-21T17:42:55Z",
  "comments":2,
  "created_at":"2023-01-21T00:13:33Z",
  "draft":false,
  "id":1551610922,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IQM9M",
  "number":2151,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support non-array types in `TypeTracerArray` ufunc operations",
  "updated_at":"2023-03-16T13:33:42Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR splits our large nplikes module into multiple modules within the `_nplikes` package. This makes it easier to scope changes to each nplike. Additionally:\r\n- Implement `ArrayModuleNumpyLike` and `NumpyLike` distinction\r\n- Remove naive ufunc support from `TypeTracerArray` (use ufuncs under the hood for e.g. `nplike.sqrt`).\r\n- Replace `nplike.raw` with `to_nplike` so that each nplike is responsible for itself only.\r\n- Fix accidental usage of NumPy aliases\r\n- Add `ak._nplikes.ufuncs` for nice internal alias to NumPy ufuncs\r\n   - We want to introduce a new `dtypes` module instead of `NumpyMetadata`, so that we have a canonical reference for the supported `dtype` object instances. Having the same concept for `ufuncs` is important too. It means that we can easily catch rogue `import numpy` usage.\r\n- Adds new `flake8` check for imports of JAX, NumPy, or CuPy",
  "closed_at":"2023-01-21T22:19:24Z",
  "comments":4,
  "created_at":"2023-01-21T17:46:05Z",
  "draft":false,
  "id":1551866241,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IQ9xk",
  "number":2152,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-21T22:19:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: split `_nplikes.py` into `_nplikes/*.py` [2 of 2]",
  "updated_at":"2023-01-21T22:19:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"For me, this reduces the time spent in pre-commit from about 12 seconds to 6.6 seconds. Ruff takes <1 second to process the entire codebase, and can do the work of several tools. I think \"check YAML\" is now the slowest check. :)\r\n\r\nIt has several checks that look very useful, and autofix is amazing, but this is a very minimal conversion to start with.\r\n\r\nThis should also stop the failures caused by plugins updating, since everything is one versioned binary.\r\n",
  "closed_at":"2023-01-30T16:43:33Z",
  "comments":2,
  "created_at":"2023-01-21T19:23:42Z",
  "draft":false,
  "id":1551890226,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IRCLc",
  "number":2153,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T16:43:33Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: move to Ruff",
  "updated_at":"2023-01-30T16:43:34Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Goals\r\n\r\nAt a high level, my long-term goal with typetracer is to make it look and feel mostly like any other nplike. Of course, we need to have special typetracer logic in routines that pull values out of arrays, etc, but for the most part this should be possible.\r\n\r\nAs such, this PR is full of a lot of line noise, but ultimately has the following goals:\r\n- Unify `UnknownScalar` with `TypeTracerArray` (to reduce logic)\r\n- Make concrete operations fail on unknown objects\r\n- Unify typetracer under nplikes\r\n- Fix some `NotImplementedError`s.\r\n\r\nOut of scope for this PR is adding the mixed scalar-array guard logic, or creating a `metadata` / `dtypes` submodule for the counterpart to `ufuncs`.\r\n\r\n### Changes\r\n- [x] Closes #2124, closes #2085\r\n- [x] Partly addresses https://github.com/scikit-hep/awkward/issues/2135\r\n- [x] Replaces `UnknownScalar` with a runtime form of `TypeTracerArray`.\r\n- [x] Treats any concrete operation like `bool()`, `int()`, etc. on an unknown scalar as an error, which means guarding our logic in the `Content` classes to protect from this. Whilst it was convenient to be able to write code that didn't need to do this, it required carrying around cognitive overhead to ensure that the code was written properly.\r\n- [x] Moves towards `from X import Y` imports to make import chains more explicit (and reduce line length)\r\n- [x] Removes the `__init__` imports for nplikes, as this encourages coupling.\r\n- [x] Disables isort for certain modules\r\n- [x] Fixes typestrings following behaviour change from scalar-array unification \r\n\r\nAs it stands, this PR is probably too big to review. I might split it into smaller parts.",
  "closed_at":"2023-01-25T09:34:49Z",
  "comments":8,
  "created_at":"2023-01-23T19:02:41Z",
  "draft":false,
  "id":1553605250,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IWnvZ",
  "number":2154,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-25T09:34:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: drop `UnknownScalar`, harden unknown scalar behavior",
  "updated_at":"2023-01-25T09:34:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-02-02T16:46:21Z",
  "comments":2,
  "created_at":"2023-01-24T15:37:57Z",
  "draft":false,
  "id":1555208807,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IcB6E",
  "number":2155,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-02T16:46:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: rdataframe memory check",
  "updated_at":"2023-02-02T16:46:22Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The `Array._repr` method diverges from `ArrayType.__str__`. I don't think that we need this special case any more; `str(type)` should not touch any data (well, it would potentially touch unknown scalars inside of the type, but that's already true and is a case that we've not considered up-to now).",
  "closed_at":"2023-01-25T21:15:04Z",
  "comments":1,
  "created_at":"2023-01-25T10:01:45Z",
  "draft":false,
  "id":1556367426,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5If5DV",
  "number":2158,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-25T21:15:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: unify typestr with `_repr`",
  "updated_at":"2023-01-25T21:15:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nThe way that NumPy handles this is to preserve _all_ dimensions. However, we flatten all arrays to `1D` arrays before reduction, so we differ, and `keepdims` always returns a 1D array in this case.\r\n\r\n```python\r\n>>> np.max([[1,2,3],[4,5,6]], axis=None, keepdims=True)\r\narray([[6]])\r\n>>> ax.max([[1,2,3],[4,5,6]], axis=None, keepdims=True)\r\n<Array [6] type='1 * ?int64'>\r\n```\r\n\r\nThe most obvious solution is to extend `completely_flatten` with an argument that instructs lists to reconstruct themselves around the flattened result. Need to figure out a better name.",
  "closed_at":"2023-01-31T08:57:17Z",
  "comments":0,
  "created_at":"2023-01-25T12:39:11Z",
  "id":1556579373,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5cx4Qt",
  "number":2159,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Reducers with `axis=None`, `keepdims=True` differ from NumPy result",
  "updated_at":"2023-01-31T08:57:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] move `astype`\r\n- [x] move `reshape`\r\n",
  "closed_at":"2023-01-28T14:40:51Z",
  "comments":1,
  "created_at":"2023-01-25T13:44:36Z",
  "draft":true,
  "id":1556684644,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ig94g",
  "number":2160,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move `astype`, `reshape` to nplike",
  "updated_at":"2023-03-16T13:33:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nAlthough Dask might not end up needing this, it would be helpful to be able to represent unknown size information even if it can't be used for anything. We should move to using `None` for this instead of `unknown_length`, because that aligns with the Array API.\r\n\r\nWe should also merge `known_shape` and `known_length` into a single value, and update the `shape` type ifnormation. After this change, we'd likely need to coerce `unknown_scalar` to `None` in places that accept user input.",
  "closed_at":"2023-07-02T17:13:55Z",
  "comments":4,
  "created_at":"2023-01-25T17:05:21Z",
  "id":1556990723,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5czcsD",
  "number":2161,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Support unknown lengths in `RegularArray` forms",
  "updated_at":"2023-07-02T17:13:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThis means that we would be able to import them as free classes.",
  "closed_at":"2024-01-19T22:31:04Z",
  "comments":1,
  "created_at":"2023-01-25T17:13:34Z",
  "id":1557003800,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5czf4Y",
  "number":2162,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Change `ak.record.Record` to a unique name",
  "updated_at":"2024-01-19T22:31:04Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Users should not mix array backends. There may be times when a user wishes to ensure that all arrays have the same backend. We should add an `ak.` function to do this.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-01-25T17:18:00Z",
  "id":1557013105,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5cziJx",
  "number":2163,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add `to_same_backend` broadcast-like function to ensure all arrays same backend.",
  "updated_at":"2023-02-01T18:28:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\n2.0.6\n\n### Description and code to reproduce\n\n@agoose77 and @jpivarski - I think, we need to have at least one node to run the cpp tests.",
  "closed_at":"2023-01-30T16:57:54Z",
  "comments":1,
  "created_at":"2023-01-26T10:12:15Z",
  "id":1557909762,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5c29EC",
  "number":2164,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"run cpp tests in CI ",
  "updated_at":"2023-01-30T16:57:54Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] temporary replacement helper variable templates for these that are part of C++17\r\n- [x] `char` specialisation of `type_to_name` needed for Layout builder to generate a correct form ",
  "closed_at":"2023-01-27T07:01:46Z",
  "comments":1,
  "created_at":"2023-01-26T10:17:12Z",
  "draft":false,
  "id":1557915622,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IlEU4",
  "number":2165,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-27T07:01:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update `type_to_name` for Layout builder `cxx_14` target",
  "updated_at":"2023-01-27T07:01:47Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nIn NumPy, there is the concept of a 0-D array, which behaves predominantly as a scalar. We do not currently accept these for array slicing:\r\n\r\n```python\r\nx = ak.Array([1,2,3])[np.array(0)]\r\n```\r\ndoes not behave properly.\r\n\r\nI believe we need this to work, so that operations on typetracers will work as expected. ",
  "closed_at":"2023-04-03T13:14:47Z",
  "comments":0,
  "created_at":"2023-01-26T22:36:33Z",
  "id":1558883507,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5c6qyz",
  "number":2166,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Scalar arrays (unknown, or NumPy) aren't treated as integers in slicing",
  "updated_at":"2023-04-03T13:14:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TLDR\r\nThis PR\r\n- coerces slice arrays to the same backend\r\n- moves `reshape` and `astype` to `NumpyLike`\r\n- overhauls `broadcast_arrays` and `reshape` for typetracer\r\n\r\n## DR\r\nOur high-level `ak.operations.*` mostly guard against mixed backends through `ak._backends.backend_of()`, which will complain if backends aren't compatible. If the user passes in arrays with mixed backends, an error will be raised. However, it doesn't then coerce them to the same type, meaning that for `TypeTracer` (which wins out over any other single backend), different backends can end up at different code paths. \r\n\r\nThis PR ensures that an array and the item it is sliced with have the same backend, converting them where necessary.",
  "closed_at":"2023-01-30T19:14:14Z",
  "comments":1,
  "created_at":"2023-01-26T22:48:15Z",
  "draft":false,
  "id":1558892374,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IoX8Y",
  "number":2167,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: coerce backends to same zero-copy type (2 of 2)",
  "updated_at":"2023-01-30T19:14:15Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TLDR\r\n- This PR makes `None` the token for unknown lengths. Only `TypeTracer` actually produces a shape with `Nones`.\r\n- Remove `UnknownLength = UnknownScalar(np.int64)` alias\r\n- **Breaking change**: using `length=None` for unknowns means that `RecordArray(..., length=None)` needs to change behavior.[^change]\r\n- Extend `nplike` to understand how to manipulate known and unknown lengths\r\n- `NumpyLike.known_shape` now has concrete meaning: \"does this NumpyLike support unknown dimension sizes?\"\r\n\r\n[^change]: This PR requires that `length` is unset in order to ignore it. We could use `if length is None and backend.nplike.known_shape` to warn users of this existing usage (as you can't have `None` lengths for known-shape nplikes)\r\n\r\n## DR\r\nThis adds some verbosity to our length handling code in the `Content` methods, but this comes at a benefit in terms of explicitness. I chose to make shape-item-handling an nplike detail, rather than a a cross-nplike standard. This means that nplike `X` should not work with shapes from nplike `Y`. Instead, the nplike conversion routines should handle this. \r\n\r\nThe previous approach set `UnknownLength = UnknownScalar(np.int64)`. Benefits include\r\n- no need to coerce lengths to valid/invalid values (unknown scalars behave like integers)\r\n-  single family of types (external unknown values are the same types as those returned by internal kernel operations and `Content.length`\r\n\r\nThe downsides of this are:\r\n- form serialisation needs conversion to/from unknown scalars\r\n- differs from Array API choice of `None` for unknown dimensions\r\n- couples unknown shape-ness to unknown data-ness[^2]\r\n\r\nThis PR uses `UnknownLength = None`, making unknown sizes more obvious, and further increasing the \"safety\"\taspect by using a non-numeric type. `None` is easily serialised, and can be included in forms without serialisation.\r\n\r\nThe use of `None` means that external data needs to be treated carefully if it is used to compute lengths.\r\n\r\n[^2]: I can't actually think of a need to create a new nplike that has one but not the other, but I digress.",
  "closed_at":"2023-01-30T20:50:07Z",
  "comments":5,
  "created_at":"2023-01-27T17:26:57Z",
  "draft":false,
  "id":1560133787,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IslWv",
  "number":2168,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T20:50:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: use `None` for unknown lengths (1 of 2)",
  "updated_at":"2023-01-30T20:50:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- Fixes #2164, adding a simple \"execute all test binaries\" job.\r\n- Splits workflows into smaller units (wheels -> lint, packaging) & renames workflows",
  "closed_at":"2023-01-30T16:57:53Z",
  "comments":1,
  "created_at":"2023-01-29T13:10:33Z",
  "draft":false,
  "id":1561282068,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5IwTuX",
  "number":2169,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T16:57:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: run header-only tests",
  "updated_at":"2023-01-30T16:57:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjE4NTI0NDc=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Which documentation?\n\nDocumentation website\n\n### What needs to be documented?\n\nA user asked about the best way to slice a dimension to select a particular index, whilst supporting the case that the dimension is not sufficiently large, i.e.\r\n```python\r\n>>> array = ak.Array([[1,2,3], [4]])\r\n>>> slice(array, idx=1)\r\nak.Array([2, None])\r\n```\r\nThere are a myriad of solutions here; padding the array, computing an index array and masking out-of-bounds values, etc. \r\n\r\nThe simplest solution is to use the features of range slicing:\r\n```python\r\n>>> array[:, [1:2]]\r\nak.Array([[2], []])\r\n```\r\nand then e.g. `ak.singletons`. \r\n\r\nThe heart of this trick is the length-1 slice, which doesn't raise an `np.IndexError`. We should probably document this in the user-guide somewhere.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-01-29T22:09:25Z",
  "id":1561476179,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dEjxT",
  "number":2170,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Single-item slicing trick",
  "updated_at":"2024-01-20T00:32:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] automate the tests checks",
  "closed_at":"2023-01-30T18:46:32Z",
  "comments":5,
  "created_at":"2023-01-30T14:33:02Z",
  "draft":false,
  "id":1562564654,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I0ljd",
  "number":2171,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T18:46:32Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: Layout builders clean and length bug fixes",
  "updated_at":"2023-01-30T18:46:33Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In #2020, these tests were `xfail`ed. I must have done so whilst working locally, and committed the change. \r\n\r\nThis PR restores support for `mask_identity=True` for the `axis=None` case of these composite reductions by pulling out the result as the final operation. As such, we choose what the identity value is for these reductions (`np.nan`, except for `ptp` which returns `0`)",
  "closed_at":"2023-01-30T20:16:38Z",
  "comments":1,
  "created_at":"2023-01-30T15:05:43Z",
  "draft":false,
  "id":1562619606,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I0xcn",
  "number":2172,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T20:16:38Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support `mask_identity=True` for `axis=None` in `ptp`, `std`, etc.",
  "updated_at":"2023-01-30T20:16:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\r\n\r\n2.0.6\r\n\r\n### Description and code to reproduce\r\n\r\nI would like to be able to create a `?string` type during concatenation. At it's simplest, this looks like:\r\n\r\n```python\r\nimport awkward as ak\r\n\r\na = ak.Array([{\"a\": \"foo\"}, {\"a\": \"bar\"}])\r\nb = ak.Array([{\"a\": None}])\r\n\r\nak.concatenate([a, b])\r\n```\r\n\r\n```pytb\r\nTypeError: while calling\r\n\r\n    ak.concatenate(\r\n        arrays = [<Array [{a: 'foo'}, {a: 'bar'}] type='2 * {a: string}'>, <A...\r\n        axis = 0\r\n        mergebool = True\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: IndexedOptionArray is not allowed to have parameters[\"__array__\"] = \"string\"\r\n```\r\n\r\n<details>\r\n<summary> Full traceback</summary>\r\n\r\n```pytb\r\nFile /usr/local/lib/python3.9/site-packages/awkward/operations/ak_concatenate.py:43, in concatenate(arrays, axis, mergebool, highlevel, behavior)\r\n     12 \"\"\"\r\n     13 Args:\r\n     14     arrays: Array-like data (anything #ak.to_layout recognizes).\r\n   (...)\r\n     31 element for element, and similarly for deeper levels.\r\n     32 \"\"\"\r\n     33 with ak._errors.OperationErrorContext(\r\n     34     \"ak.concatenate\",\r\n     35     dict(\r\n   (...)\r\n     41     ),\r\n     42 ):\r\n---> 43     return _impl(arrays, axis, mergebool, highlevel, behavior)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/operations/ak_concatenate.py:111, in _impl(arrays, axis, mergebool, highlevel, behavior)\r\n    108         collapsed = ak._do.mergemany(batch)\r\n    109         batch = [ak._do.merge_as_union(collapsed, x)]\r\n--> 111 out = ak._do.mergemany(batch)\r\n    113 if isinstance(out, ak.contents.UnionArray):\r\n    114     out = type(out).simplified(\r\n    115         out._tags,\r\n    116         out._index,\r\n   (...)\r\n    119         mergebool=mergebool,\r\n    120     )\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/_do.py:304, in mergemany(contents)\r\n    302 def mergemany(contents: list[Content]) -> Content:\r\n    303     assert len(contents) != 0\r\n--> 304     return contents[0]._mergemany(contents[1:])\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/recordarray.py:635, in RecordArray._mergemany(self, others)\r\n    633 minlength = None\r\n    634 for forfield in for_each_field:\r\n--> 635     merged = forfield[0]._mergemany(forfield[1:])\r\n    637     nextcontents.append(merged)\r\n    639     if minlength is None or merged.length < minlength:\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/listoffsetarray.py:728, in ListOffsetArray._mergemany(self, others)\r\n    724     return self\r\n    725 listarray = ak.contents.ListArray(\r\n    726     self.starts, self.stops, self._content, parameters=self._parameters\r\n    727 )\r\n--> 728 out = listarray._mergemany(others)\r\n    730 if all(\r\n    731     isinstance(x, ListOffsetArray) and x._offsets.dtype == self._offsets.dtype\r\n    732     for x in others\r\n    733 ):\r\n    734     return out.to_ListOffsetArray64(False)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/listarray.py:1084, in ListArray._mergemany(self, others)\r\n   1081 if len(tail) == 0:\r\n   1082     return next\r\n-> 1084 reversed = tail[0]._reverse_merge(next)\r\n   1085 if len(tail) == 1:\r\n   1086     return reversed\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/indexedoptionarray.py:641, in IndexedOptionArray._reverse_merge(self, other)\r\n    626 self._handle_error(\r\n    627     self._backend[\r\n    628         \"awkward_IndexedArray_fill\",\r\n   (...)\r\n    637     )\r\n    638 )\r\n    639 parameters = ak._util.merge_parameters(self._parameters, other._parameters)\r\n--> 641 return ak.contents.IndexedOptionArray.simplified(\r\n    642     index, content, parameters=parameters\r\n    643 )\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/indexedoptionarray.py:124, in IndexedOptionArray.simplified(cls, index, content, parameters)\r\n    117     return IndexedOptionArray(\r\n    118         result,\r\n    119         content.content,\r\n    120         parameters=ak._util.merge_parameters(content._parameters, parameters),\r\n    121     )\r\n    123 else:\r\n--> 124     return cls(index, content, parameters=parameters)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/indexedoptionarray.py:59, in IndexedOptionArray.__init__(self, index, content, parameters)\r\n     57 self._index = index\r\n     58 self._content = content\r\n---> 59 self._init(parameters, content.backend)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/contents/content.py:69, in Content._init(self, parameters, backend)\r\n     64 else:\r\n     65     if not self.is_list and parameters.get(\"__array__\") in (\r\n     66         \"string\",\r\n     67         \"bytestring\",\r\n     68     ):\r\n---> 69         raise ak._errors.wrap_error(\r\n     70             TypeError(\r\n     71                 '{} is not allowed to have parameters[\"__array__\"] = \"{}\"'.format(\r\n     72                     type(self).__name__, parameters[\"__array__\"]\r\n     73                 )\r\n     74             )\r\n     75         )\r\n     76     if not isinstance(self, ak.contents.NumpyArray) and parameters.get(\r\n     77         \"__array__\"\r\n     78     ) in (\"char\", \"byte\"):\r\n     79         raise ak._errors.wrap_error(\r\n     80             TypeError(\r\n     81                 '{} is not allowed to have parameters[\"__array__\"] = \"{}\"'.format(\r\n   (...)\r\n     84             )\r\n     85         )\r\n\r\nTypeError: while calling\r\n\r\n    ak.concatenate(\r\n        arrays = [<Array [{a: 'foo'}, {a: 'bar'}] type='2 * {a: string}'>, <A...\r\n        axis = 0\r\n        mergebool = True\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: IndexedOptionArray is not allowed to have parameters[\"__array__\"] = \"string\"\r\n```\r\n\r\n</details>\r\n\r\nThis operation is not really what I'm trying to do. What I'm really trying to do is:\r\n\r\n* https://github.com/scikit-hep/awkward/issues/1668#issuecomment-1238463704\r\n* https://github.com/scikit-hep/awkward/discussions/1647#discussioncomment-3562477\r\n\r\nHowever, this was not an error I ran into last time I tried (using v2 api before 2.0 release). I believe it's intended that this should work, since @jpivarski's suggestion from https://github.com/scikit-hep/awkward/issues/1668#issuecomment-1238463704 now throws the error reported above. E.g.:\r\n\r\n```python\r\na = ak.Array([{\"a\": \"foo\"}, {\"a\": \"bar\"}])\r\nb = ak.Array([{\"b\": 1.1}, {\"b\": 2.2}])\r\n\r\nfields = ak.fields(a) + ak.fields(b)\r\n\r\ndef add_fields(layout, **kwargs):\r\n    if layout.is_record:\r\n        asdict = dict(zip(layout.fields, layout.contents))\r\n        for field in fields:\r\n            if field not in asdict:\r\n                asdict[field] = ak.contents.IndexedOptionArray(\r\n                    ak.index.Index64(np.full(len(layout), -1, np.int64)), ak.contents.EmptyArray()\r\n                )\r\n        return ak.contents.RecordArray(asdict.values(), asdict.keys(), length=len(layout))\r\n\r\na2 = ak.transform(add_fields, a)\r\nb2 = ak.transform(add_fields, b)\r\n\r\nak.concatenate([a2, b2])\r\n```\r\n\r\nNow also throws: `Error details: IndexedOptionArray is not allowed to have parameters[\"__array__\"] = \"string\"`\r\n\r\n------------\r\n\r\nIs this a bug, or is `?string` no longer a supported type?\r\n\r\nIf it should be possible, is there a current workaround?\r\n\r\n\r\n*update: * it looks like `?string` is still a thing: `ak.Array([{\"a\": \"foo\"}, {\"a\": \"bar\"}, {\"a\": None}])`, `ak.Array([\"foo\", None])`",
  "closed_at":"2023-02-03T20:23:58Z",
  "comments":3,
  "created_at":"2023-01-30T17:29:56Z",
  "id":1562867964,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dJ3j8",
  "number":2173,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Concatenate String with Optional Unknown",
  "updated_at":"2023-02-03T20:23:58Z",
  "user":"MDQ6VXNlcjgyMzg4MDQ="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Minor bump, includes recent fixes (I believe).\n",
  "closed_at":"2023-01-30T18:37:53Z",
  "comments":1,
  "created_at":"2023-01-30T18:04:42Z",
  "draft":false,
  "id":1562924955,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I1ytV",
  "number":2174,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T18:37:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update Ruff version",
  "updated_at":"2023-01-30T18:37:55Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Reopens #2167",
  "closed_at":"2023-01-30T21:17:44Z",
  "comments":1,
  "created_at":"2023-01-30T20:15:40Z",
  "draft":false,
  "id":1563135978,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I2hVG",
  "number":2175,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T21:17:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: coerce backends to same zero-copy type (2 of 2)",
  "updated_at":"2023-01-30T21:17:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Dropping a couple of skipped checks for `not x in y`, rewritten as `x not in y`.\n",
  "closed_at":"2023-01-30T20:54:46Z",
  "comments":2,
  "created_at":"2023-01-30T20:23:35Z",
  "draft":false,
  "id":1563147395,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I2j3r",
  "number":2176,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-30T20:54:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: ruff rewrite `not in`",
  "updated_at":"2023-01-30T20:54:47Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2159 by adding a new `keepdims` to the renamed `ak._do.remove_structure` function. This just moves the list boundaries to the start and end elements of each list, so that the final result is a nested series of length-1 lists (besides the innermost dimension of length `N`).",
  "closed_at":"2023-01-31T08:57:15Z",
  "comments":1,
  "created_at":"2023-01-30T22:41:45Z",
  "draft":false,
  "id":1563323421,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I3Kqj",
  "number":2177,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-31T08:57:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: preserve dimensions for `keepdims=True`, `axis=None` reductions",
  "updated_at":"2023-01-31T08:57:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] growable buffer `move_to` method implementation and test\r\n- [x] growable buffer `clear` method bug fix\r\n- [x] more thorough checks in the tests\r\n",
  "closed_at":"2023-01-31T19:13:10Z",
  "comments":3,
  "created_at":"2023-01-31T10:10:56Z",
  "draft":false,
  "id":1564015592,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I5fsT",
  "number":2178,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-31T19:13:10Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: growable buffer move_to method",
  "updated_at":"2023-01-31T19:47:24Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n\r\nThis PR fixes #2173 by two main changes: make `EmptyArray` a true identity (by ignoring parameters), and consolidate the parameter merging rules.\r\n\r\n- Fixes #2173 \r\n- Collapses `_mergeable` and `_mergeable_next` into `_mergeable_next`\r\n- Replace `merge_parameters` with `_parameters_intersect` and `_parameters_union`\r\n- Changes index/option merging rules:\r\n   - option/index \u2014 option/index: merge option parameters, merge content parameters\r\n   - option/index \u2014 non-option/non-index: keep option parameters, merge content parameters\r\n- Changes union merging rules: \r\n  - Now always take intersection of merged content parameters\r\n- Changes to union simplification logic:\r\n  - Take union of outermost union parameters and inner union parameters\r\n- Make the base `Content` and `Form` initialiser arguments keyword-only (non-breaking unless you are subclassing)\r\n- Deprecates parameters on empty/unknown types/arrays/forms\r\n- Treats `EmptyArray` as entirely invisible to merging\r\n \r\n\r\n## TL;\r\nThis PR is a tentative direction for resolving #2173 by making two big changes:\r\n\r\n### Consider `EmptyArray` as truly \"empty\"\r\nThe issue is caused by the fact that `EmptyArray` often has no parameters, which can occur for layouts with only-options, e.g. from Parquet (?) or `ArrayBuilder`. If we try and merge parameters with such layouts, the `merge_equal` rule will lead to the resulting parameter dictionary being empty. This means that we lose `__array__`.\r\n\r\nA more permissive rule would fix #2173 is to *only* merge the non-array/record parameters of `EmptyArray`. Such a rule would preserve e.g. strings, but fail to preserve any other parameters whenever a bare `EmptyArray` is encountered. \r\n\r\nI prefer the blanket \"EmptyArray-is-empty\" approach, but I don't have a good feel for whether that's too restrictive. \r\n\r\n### Index/Option merging rules\r\n\r\nIn https://github.com/scikit-hep/awkward/discussions/2180 I raise the idea that we need to tighten our parameter rules. This PR makes a particular choice to treat (option, non-option) as merging only the contents. This will make it more obvious that our current logic for `__array__` doesn't look past the top-level node.\r\n\r\n### Union merging/simplification\r\n\r\nThe simple logic followed in this PR is\r\n- `simplified` \u2192 union of parameters in simplification\r\n- `merge` \u2192 intersection of parameters\r\n\r\nChanges to union merging/simplification now reflect this.",
  "closed_at":"2023-02-03T20:23:57Z",
  "comments":3,
  "created_at":"2023-01-31T10:44:07Z",
  "draft":false,
  "id":1564066636,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I5qg8",
  "number":2179,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-03T20:23:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: rework parameter merging rules",
  "updated_at":"2023-02-03T20:23:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes a few (but certainly not all) places where we're using `len(layout)`, or otherwise relying on a layout to be non-typetracer",
  "closed_at":"2023-01-31T17:31:31Z",
  "comments":3,
  "created_at":"2023-01-31T14:08:27Z",
  "draft":false,
  "id":1564380815,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I6uDx",
  "number":2181,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-31T17:31:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: some usages of `len(layout)` under typetracer",
  "updated_at":"2023-01-31T17:31:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\r\n\r\nIn https://github.com/scikit-hep/awkward/issues/2058, you concluded that it is more useful if `ak.concatenate` simplifies types where possible instead of creating a Union. Here I have another example where I think this would be useful: \r\n\r\n**Current behavior**\r\n```python\r\n>>> a1 = ak.Array([{'a': 'aaa', 'b': 'bbb'}])\r\n>>> a2 = ak.Array([{'b': 'bbb', 'c': 'ccc'}])\r\n\r\n>>> res = ak.concatenate([a1, a2])\r\n>>> res\r\n[{a: 'aaa', b: 'bbb'},\r\n {b: 'bbb', c: 'ccc'}]\r\n----------------------\r\ntype: 2 * union[\r\n    {\r\n        a: string,\r\n        b: string\r\n    },\r\n    {\r\n        b: string,\r\n        c: string\r\n    }\r\n]\r\n```\r\n\r\nLike this, I can't even access fields anymore after concatenation: \r\n\r\n```python\r\n>>> res['c']\r\nFieldNotFoundError                        Traceback (most recent call last)\r\n```\r\n\r\n\r\n**Desired behavior**\r\nCreate an option type \r\n```\r\ntype: 2 * var * {\r\n    a: ?string,\r\n    b: string,\r\n    c: ?string\r\n}\r\n```\r\n\r\n\r\nFWIW, awkward infers exactly this option type when passing the concatenated array through a python object: \r\n```python\r\nak.Array(ak.to_list(res))\r\n```\r\n\r\n\r\nCC @ivirshup\r\n\r\n\r\n\r\n",
  "closed_at":"2023-02-04T16:57:36Z",
  "comments":15,
  "created_at":"2023-01-31T14:28:37Z",
  "id":1564421003,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dPyuL",
  "number":2182,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Simplifying UnionType during concatenation",
  "updated_at":"2023-02-04T16:57:37Z",
  "user":"MDQ6VXNlcjcwNTE0Nzk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"The built-in syntax is preferable to passing keywords to the dict constructor, which wastes a function call. Besides being more consistent and recognisable, it is also faster:\r\n\r\n```pycon\r\nPython 3.11.1 (main, Dec 23 2022, 09:39:26) [Clang 14.0.0 (clang-1400.0.29.202)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import timeit\r\n>>> timeit.timeit(\"dict(a=1, b=2)\")\r\n0.09944732999429107\r\n>>> timeit.timeit(\"{'a': 1, 'b': 2}\")\r\n0.07909351703710854\r\n```\r\n\r\nThis removes the ignoring of `\"C408\"`.",
  "closed_at":"2023-01-31T18:31:22Z",
  "comments":3,
  "created_at":"2023-01-31T15:05:33Z",
  "draft":false,
  "id":1564489235,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I7FpB",
  "number":2183,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-01-31T18:31:22Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: ruff rewrite dicts",
  "updated_at":"2023-01-31T19:08:19Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"\n- chore: some Ruff additions\n- chore: minor adjustment to Ruff\n- chore: ruff iterable merging\n- chore: RUF codes enabled\n",
  "closed_at":"2023-02-17T08:20:56Z",
  "comments":1,
  "created_at":"2023-02-01T03:41:13Z",
  "draft":false,
  "id":1565375249,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5I-DK4",
  "number":2184,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-17T08:20:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: more Ruff",
  "updated_at":"2023-02-17T08:20:58Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR addresses #2182. We already implement some of this machinery in `UnionArray`, which has a `_union_of_optionarrays` method to convert from `option[union[X, Y, Z]]` to `union[option[X], Y, ..., Z]`. It doesn't seem like that is particularly useful in this case. \r\n\r\nInterestingly there is some overlap with `ak._util.union_to_record`.\r\n\r\n### Added functions\r\n- `ak.merge_option_of_records`\r\n- `ak.merge_union_of_records`\r\n",
  "closed_at":"2023-02-02T00:35:41Z",
  "comments":2,
  "created_at":"2023-02-01T11:44:17Z",
  "draft":false,
  "id":1565962931,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JACD7",
  "number":2185,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-02T00:35:41Z"
  },
  "reactions":{
   "hooray":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.merge_union_of_records`",
  "updated_at":"2023-02-02T00:35:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjE4NTI0NDc=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nFollow-up from https://github.com/scikit-hep/uproot5/issues/822.\r\n\r\n```python\r\n>>> ak.values_astype(ak.Array([]), np.float64)\r\n<Array [] type='0 * unknown'>\r\n```",
  "closed_at":"2023-02-04T00:23:27Z",
  "comments":1,
  "created_at":"2023-02-01T14:22:47Z",
  "id":1566208008,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dWnAI",
  "number":2188,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.values_astype` should turn `EmptyArray` into `NumpyArray`",
  "updated_at":"2023-02-04T00:23:27Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Add support for Hist's proposed `fill_flattened`: https://github.com/scikit-hep/hist/pull/474",
  "closed_at":"2023-02-03T18:09:29Z",
  "comments":1,
  "created_at":"2023-02-02T07:30:16Z",
  "draft":false,
  "id":1567486283,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JFJPY",
  "number":2190,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-03T18:09:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for histogram module",
  "updated_at":"2023-02-03T18:09:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nCurrently, UnionArrays are allowed to contain IndexedArrays:\r\n\r\n```python\r\narray = ak.Array(\r\n    ak.contents.UnionArray.simplified(\r\n        ak.index.Index8([0, 0, 0, 1, 1, 1, 1, 1]),\r\n        ak.index.Index64([0, 1, 2, 0, 1, 2, 3, 4]),\r\n        [\r\n            ak.from_iter([\"one\", \"two\", \"three\"], highlevel=False),\r\n            ak.contents.IndexedArray(\r\n                ak.index.Index64([4, 3, 2, 1, 0]),\r\n                ak.from_iter([1.1, 2.2, 3.3, 4.4, 5.5], highlevel=False),\r\n            )\r\n        ],\r\n    )\r\n)\r\n```\r\n\r\nhas layout\r\n\r\n```python\r\n>>> array.layout\r\n<UnionArray len='8'>\r\n    <tags><Index dtype='int8' len='8'>[0 0 0 1 1 1 1 1]</Index></tags>\r\n    <index><Index dtype='int64' len='8'>[0 1 2 0 1 2 3 4]</Index></index>\r\n    <content index='0'>\r\n        <ListOffsetArray len='3'>\r\n            <parameter name='__array__'>'string'</parameter>\r\n            <offsets><Index dtype='int64' len='4'>\r\n                [ 0  3  6 11]\r\n            </Index></offsets>\r\n            <content><NumpyArray dtype='uint8' len='11'>\r\n                <parameter name='__array__'>'char'</parameter>\r\n                [111 110 101 116 119 111 116 104 114 101 101]\r\n            </NumpyArray></content>\r\n        </ListOffsetArray>\r\n    </content>\r\n    <content index='1'>\r\n        <IndexedArray len='5'>\r\n            <index><Index dtype='int64' len='5'>[4 3 2 1 0]</Index></index>\r\n            <content><NumpyArray dtype='float64' len='5'>[1.1 2.2 3.3 4.4 5.5]</NumpyArray></content>\r\n        </IndexedArray>\r\n    </content>\r\n</UnionArray>\r\n```\r\n\r\nBut because of\r\n\r\n  * https://github.com/scikit-hep/awkward/blob/0.1.15/docs/theory/arrays-are-functions.pdf\r\n  * page 22\u201223 https://indico.cern.ch/event/833895/contributions/3577882/\r\n  * page 25 https://www.thestrangeloop.com/2019/jagged-ragged-awkward-arrays.html, starting at 18:24 in https://youtu.be/2NxWpU7NArk?t=1104\r\n\r\nthe application of the `index[tags == tag]` array in UnionArray is associative with the application of the `index` in the IndexedArray. The latter can be merged into the former with no loss of information, and then we're using less memory and performing less indirection in computations. (Is it enough to matter for any applications? Unclear, because we like to avoid UnionArrays in general, but it is a net win.)\r\n\r\nThis issue would be resolved by doing a final pass at the end of `UnionArray.simplified` to check for any IndexedArrays in `contents`, not IndexedOptionArrays, that are not categorical. (IndexedOptionArrays can't be merged into `UnionArray.index` because they have `-1` for missing values, which `UnionArray.index` does not, and we don't want to apply this to categorical IndexedArrays because then we'd have to put the `__array__: \"categorical\"` parameter on the UnionArray, which downstream code is not expecting, and anyway it would lose information because if some of the `UnionArray.contents` were categorical and others not, we'd lose knowledge of which is which.)\r\n\r\nIf the `outindex` (`index` of the UnionArray that will be returned) is a new array, created inside the `UnionArray.simplified` function, it can be modified in place, something like\r\n\r\n```python\r\nfor tag, content in enumerate(outcontents):\r\n    if isinstance(content, IndexedArray) and content.parameter(\"__array__\") != \"categorical\":\r\n        # only want to affect the part of the UnionArray.index for this tag\r\n        selection = (outtags == tag)\r\n        # function-composition of this part of the UnionArray.index with the IndexedArray.index\r\n        outindex[selection] = content.index[outindex[selection]]\r\n        # now we don't have an IndexedArray anymore\r\n        outcontents[tag] = content.content\r\n```\r\n\r\nIf not, then `outindex` can be copied before the first modification.\r\n\r\nThen `UnionArray.__init__` can forbid non-categorical IndexedArrays as `contents`. Even fewer combinations to worry about: yay!\r\n\r\nWe should consider the case of IndexedArray-of-RecordArray, which is created by `_carry` with `allow_lazy=True`. This would eliminate the IndexedArray that lazily carries the RecordArray, but the RecordArray would still be lazily carried (that is, the `_carry` would still not be propagated to all of the RecordArray's `contents`) because that laziness is in the `UnionArray.index` now. When/if the RecordArray ever gets projected out of this UnionArray, if that happens with `allow_lazy=True`, then it's _still_ lazy (not any worse for having made this optimization). But if it gets projected out with `allow_lazy=False`, then that specific case could have a performance degradation due to this change. That seems hyperspecialized, though.",
  "closed_at":"2023-06-18T17:34:06Z",
  "comments":2,
  "created_at":"2023-02-02T18:24:44Z",
  "id":1568555834,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dfkM6",
  "number":2192,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"IndexedArrays can be absorbed into a UnionArray's index (unless categorical)",
  "updated_at":"2023-06-18T17:34:06Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.0.6\n\n### Description and code to reproduce\n\nHi!\r\n\r\nI ran into what looks like a bug (or rather a non-implemented feature) when reading an `ak.RecordArray` stored in a Parquet file. The schema/type is not preserved when converting back to awkward if the stored array has no content (all columns have length zero).\r\n\r\nThis happens occasionally in a distributed workflow I'm running that involves merging a large number of arrays with the same structure (some of which could be empty) stored across multiple Parquet files. Preserving the schema even for the empty ones would make this easier to automate without having to filter out the empty arrays beforehand.\r\n\r\nHere's a minimal example with an assertion on the array type to check schema preservation:\r\n```python\r\nimport awkward as ak\r\n\r\n# create a RecordArray with some content\r\na = ak.zip({\"field_1\": [1, 2], \"field_2\": [3, 4]})\r\n\r\n# get an empty array (preserve schema)\r\na_empty = a[a['field_1'] < 0]\r\n\r\n# write and read parquet\r\nak.to_parquet(a_empty, \"test_empty.parquet\")\r\na_empty_from_parquet = ak.from_parquet(\"test_empty.parquet\")  # raises NotImplementedError\r\n\r\n# check schema preserved\r\nassert (a_empty_from_parquet.type == a_empty.type)\r\n```\r\n\r\nThe `from_parquet` line raises a `NotImplemented` error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/.../awkward/test_parquet_empty.py\", line 11, in <module>\r\n    a_empty_from_parquet = ak.from_parquet(\"test_empty.parquet\")  # gives NotImplementedError\r\n  File \"/.../awkward/src/awkward/operations/ak_from_parquet.py\", line 75, in from_parquet\r\n    return _load(\r\n  File \"/.../awkward/src/awkward/operations/ak_from_parquet.py\", line 224, in _load\r\n    _read_parquet_file(\r\n  File \"/.../awkward/src/awkward/operations/ak_from_parquet.py\", line 304, in _read_parquet_file\r\n    return ak.operations.ak_from_arrow._impl(\r\n  File \"/.../awkward/src/awkward/operations/ak_from_arrow.py\", line 51, in _impl\r\n    out = awkward._connect.pyarrow.handle_arrow(\r\n  File \"/.../awkward/src/awkward/_connect/pyarrow.py\", line 1005, in handle_arrow\r\n    raise ak._errors.wrap_error(NotImplementedError)\r\nNotImplementedError:\r\n```\r\n\r\nThis doesn't happen when round-tripping the array through Arrow, so it seems to be Parquet-related:\r\n```python\r\na_empty_via_arrow = ak.from_arrow(ak.to_arrow(a_empty))  # works as expected\r\nassert (a_empty_via_arrow.type == a_empty.type)\r\n```",
  "closed_at":"2023-02-03T21:59:31Z",
  "comments":2,
  "created_at":"2023-02-02T19:30:50Z",
  "id":1568662834,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5df-Uy",
  "number":2193,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Schema is not preserved when reading an empty `RecordArray` from parquet",
  "updated_at":"2023-02-03T21:59:31Z",
  "user":"MDQ6VXNlcjE3MDA1MjU1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"This PR proposes an implementation for reading an zero-length `ak.RecordArray` / Arrow `Table` from Parquet.\r\n\r\nSince for zero-length there are no batches to use for conversion, an empty `RecordBatch` is created matching the input schema, and is propagated through the `handle_arrow` function. \r\n\r\nThere might be better ways to do this (maybe avoiding the list-of-empty lists?), so let me know.\r\n\r\nCloses #2193.",
  "closed_at":"2023-02-03T21:59:30Z",
  "comments":8,
  "created_at":"2023-02-02T19:43:53Z",
  "draft":false,
  "id":1568681458,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JJLcA",
  "number":2194,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-03T21:59:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't raise `NotImplementedError` when reading empty array from Parquet",
  "updated_at":"2023-02-03T22:18:01Z",
  "user":"MDQ6VXNlcjE3MDA1MjU1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\n@ianna, is this related to a recent PR?\r\n\r\n```\r\ntests/test_1473_from_rdataframe.py F\r\n\r\n=========================================== FAILURES ===========================================\r\n________________________________ test_to_from_data_frame_large _________________________________\r\n\r\n    def test_to_from_data_frame_large():\r\n        # Note, with n = 30 (14348907) this test takes ~40 sec to run on my laptop\r\n        n = 6\r\n        assert 2 * (n // 2) == n\r\n        rows = 3 ** (n // 2)\r\n        cols = n\r\n    \r\n        arr = np.zeros((rows, cols), dtype=np.int64)\r\n        shape = (rows,)\r\n    \r\n        source = np.array([-1, 0, 1], dtype=np.int64)[:, None]\r\n    \r\n        for col in range(n // 2):\r\n            shape = (\r\n                -1,\r\n                3,\r\n                shape[-1] // 3,\r\n            )\r\n            col_view = arr[:, col]\r\n            col_view.shape = shape\r\n            col_view[:] = source\r\n    \r\n        ak_array_in = ak.from_numpy(arr, regulararray=True)\r\n    \r\n        data_frame = ak.to_rdataframe({\"x\": ak_array_in})\r\n    \r\n>       ak_array_out = ak.from_rdataframe(\r\n            data_frame,\r\n            columns=(\"x\",),\r\n        )\r\n\r\nak_array_in = <Array [[-1, -1, -1, 0, 0, 0], ..., [1, 1, 1, ..., 0, 0]] type='27 * 6 * int64'>\r\narr        = array([[-1, -1, -1,  0,  0,  0],\r\n       [-1, -1,  0,  0,  0,  0],\r\n       [-1, -1,  1,  0,  0,  0],\r\n       [-1,  0, -1,...0,  1,  0,  0,  0],\r\n       [ 1,  1, -1,  0,  0,  0],\r\n       [ 1,  1,  0,  0,  0,  0],\r\n       [ 1,  1,  1,  0,  0,  0]])\r\ncol        = 2\r\ncol_view   = array([[[-1],\r\n        [ 0],\r\n        [ 1]],\r\n\r\n       [[-1],\r\n        [ 0],\r\n        [ 1]],\r\n\r\n       [[-1],\r\n        [ 0],\r\n  ...,\r\n        [ 0],\r\n        [ 1]],\r\n\r\n       [[-1],\r\n        [ 0],\r\n        [ 1]],\r\n\r\n       [[-1],\r\n        [ 0],\r\n        [ 1]]])\r\ncols       = 6\r\ndata_frame = <cppyy.gbl.ROOT.RDataFrame object at 0x56223fcbbc90>\r\nn          = 6\r\nrows       = 27\r\nshape      = (-1, 3, 1)\r\nsource     = array([[-1],\r\n       [ 0],\r\n       [ 1]])\r\n\r\ntests/test_1473_from_rdataframe.py:42: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nsrc/awkward/operations/ak_from_rdataframe.py:30: in from_rdataframe\r\n    return _impl(rdf, columns, offsets_type)\r\n        columns    = ('x',)\r\n        offsets_type = 'int64_t'\r\n        rdf        = <cppyy.gbl.ROOT.RDataFrame object at 0x56223fcbbc90>\r\nsrc/awkward/operations/ak_from_rdataframe.py:50: in _impl\r\n    out = ak._connect.rdataframe.from_rdataframe.from_rdataframe(\r\n        awkward    = <module 'awkward' from '/home/jpivarski/irishep/awkward/src/awkward/__init__.py'>\r\n        columns    = ('x',)\r\n        data_frame = <cppyy.gbl.ROOT.RDataFrame object at 0x56223fcbbc90>\r\n        offsets_type = 'int64_t'\r\n        project    = False\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\ndata_frame = <cppyy.gbl.ROOT.RDataFrame object at 0x56223fcbbc90>, columns = ('x',)\r\noffsets_type = 'int64_t'\r\n\r\n    def from_rdataframe(data_frame, columns, offsets_type=\"int64_t\"):\r\n        def cpp_builder_type(depth, data_type):\r\n            if depth == 1:\r\n                return f\"awkward::LayoutBuilder::Numpy<{data_type}>>\"\r\n            else:\r\n                return (\r\n                    \"awkward::LayoutBuilder::ListOffset<int64_t, \"\r\n                    + cpp_builder_type(depth - 1, data_type)\r\n                    + \">\"\r\n                )\r\n    \r\n        def cpp_fill_offsets_and_flatten(depth):\r\n            if depth == 1:\r\n                return (\r\n                    \"\\nfor (auto const& it : vec1) {\\n\" + \"  builder1.append(it);\\n\" + \"}\\n\"\r\n                )\r\n            else:\r\n                return (\r\n                    f\"for (auto const& vec{depth - 1} : vec{depth}) \"\r\n                    + \"{\\n\"\r\n                    + f\"  auto& builder{depth - 1} = builder{depth}.begin_list();\\n\"\r\n                    + \"  \"\r\n                    + cpp_fill_offsets_and_flatten(depth - 1)\r\n                    + \"\\n\"\r\n                    + f\"  builder{depth}.end_list();\\n\"\r\n                    + \"}\\n\"\r\n                )\r\n    \r\n        def cpp_fill_function(depth):\r\n            if depth == 1:\r\n                return (\r\n                    \"template<class BUILDER, typename PRIMITIVE>\\n\"\r\n                    + \"void\\n\"\r\n                    + \"fill_from(BUILDER& builder, ROOT::RDF::RResultPtr<std::vector<PRIMITIVE>>& result) {\"\r\n                    + \"  for (auto const& it : result) {\\n\"\r\n                    + \"    builder.append(it);\\n\"\r\n                    + \"  }\\n\"\r\n                    + \"}\\n\"\r\n                )\r\n            else:\r\n                return (\r\n                    \"template<class BUILDER, typename PRIMITIVE>\\n\"\r\n                    + \"void\\n\"\r\n                    + f\"fill_offsets_and_flatten{depth}(BUILDER& builder{depth}, ROOT::RDF::RResultPtr<std::vector<PRIMITIVE>>& result) \"\r\n                    + \"{\\n\"\r\n                    + f\"  for (auto const& vec{depth - 1} : result) \"\r\n                    + \"{\\n\"\r\n                    + f\"  auto& builder{depth - 1} = builder{depth}.begin_list();\\n\"\r\n                    + \"  \"\r\n                    + cpp_fill_offsets_and_flatten(depth - 1)\r\n                    + \"\\n\"\r\n                    + f\"  builder{depth}.end_list();\\n\"\r\n                    + \"}\\n\"\r\n                    + \"}\\n\"\r\n                )\r\n    \r\n        def form_dtype(form):\r\n            if isinstance(form, ak.forms.NumpyForm) and form.inner_shape == ():\r\n                return primitive_to_dtype(form.primitive)\r\n            elif isinstance(form, ak.forms.ListOffsetForm):\r\n                return form_dtype(form.content)\r\n    \r\n        # Register Take action for each column\r\n        # 'Take' is a lazy action:\r\n        column_types = {}\r\n        result_ptrs = {}\r\n        contents = {}\r\n    \r\n        # Important note: This loop is separate from the next one\r\n        # in order not to trigger the additional RDataFrame\r\n        # Event loops\r\n        for col in columns:\r\n            column_types[col] = data_frame.GetColumnType(col)\r\n            result_ptrs[col] = data_frame.Take[column_types[col]](col)\r\n    \r\n        for col in columns:\r\n            if ROOT.awkward.is_awkward_type[column_types[col]]():  # Retrieve Awkward arrays\r\n    \r\n                # ROOT::RDF::RResultPtr<T>::begin Returns an iterator to the beginning of\r\n                # the contained object if this makes sense, throw a compilation error otherwise.\r\n                #\r\n                # Does not trigger event loop and execution of all actions booked in\r\n                # the associated RLoopManager.\r\n                lookup = result_ptrs[col].begin().lookup()\r\n                generator = lookup[col].generator\r\n                layout = generator.tolayout(lookup[col], 0, ())\r\n                contents[col] = layout\r\n    \r\n            else:  # Convert the C++ vectors to Awkward arrays\r\n>               form_str = ROOT.awkward.type_to_form[column_types[col], offsets_type](0)\r\nE               TypeError: Could not instantiate type_to_form<ROOT::VecOps::RVec<int64_t>,int64_t>:\r\nE                 Failed to instantiate \"type_to_form<ROOT::VecOps::RVec<int64_t>,int64_t>(int)\"\r\n\r\ncol        = 'x'\r\ncolumn_types = {'x': 'ROOT::VecOps::RVec<int64_t>'}\r\ncolumns    = ('x',)\r\ncontents   = {}\r\ncpp_builder_type = <function from_rdataframe.<locals>.cpp_builder_type at 0x7f9688100af0>\r\ncpp_fill_function = <function from_rdataframe.<locals>.cpp_fill_function at 0x7f96900cb670>\r\ncpp_fill_offsets_and_flatten = <function from_rdataframe.<locals>.cpp_fill_offsets_and_flatten at 0x7f96900cb8b0>\r\ndata_frame = <cppyy.gbl.ROOT.RDataFrame object at 0x56223fcbbc90>\r\nform_dtype = <function from_rdataframe.<locals>.form_dtype at 0x7f96900cb550>\r\noffsets_type = 'int64_t'\r\nresult_ptrs = {'x': <cppyy.gbl.ROOT.RDF.RResultPtr<vector<ROOT::VecOps::RVec<long> > > object at 0x56223feee230>}\r\n\r\nsrc/awkward/_connect/rdataframe/from_rdataframe.py:155: TypeError\r\n```",
  "closed_at":"2023-02-03T17:09:08Z",
  "comments":4,
  "created_at":"2023-02-02T20:54:14Z",
  "id":1568767137,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dgXyh",
  "number":2195,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.from_rdataframe exception in local tests",
  "updated_at":"2023-02-03T17:09:09Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"...but I forgot that we wanted to parameterize it: https://github.com/scikit-hep/awkward/issues/2188#issuecomment-1412158519.\r\n\r\nI'll do that when I can get back to this.",
  "closed_at":"2023-02-04T00:23:26Z",
  "comments":1,
  "created_at":"2023-02-02T20:57:15Z",
  "draft":false,
  "id":1568770799,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JJeWu",
  "number":2196,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-04T00:23:26Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: ak.values_astype now turns 'unknown' type into the requested type.",
  "updated_at":"2023-02-04T00:23:27Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #1105",
  "closed_at":"2023-02-03T22:18:37Z",
  "comments":7,
  "created_at":"2023-02-03T14:14:08Z",
  "draft":false,
  "id":1569909259,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JNNIO",
  "number":2198,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-03T22:18:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.approx_equal`",
  "updated_at":"2023-02-03T22:18:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"fixes #2195 ",
  "closed_at":"2023-02-03T17:13:56Z",
  "comments":2,
  "created_at":"2023-02-03T14:19:34Z",
  "draft":false,
  "id":1569916809,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JNOw8",
  "number":2199,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use generic int type for offsets",
  "updated_at":"2023-02-03T17:24:46Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.6\n\n### Description and code to reproduce\n\n```python\r\nimport awkward as ak\r\n\r\nak.any(ak.Array([{\"a\": False}]))\r\n```\r\n\r\nThrows an error that says:\r\n\r\n```pytb\r\nTypeError: while calling\r\n\r\n    ak.any(\r\n        array = <Array [{a: False}] type='1 * {a: bool}'>\r\n        axis = None\r\n        keepdims = False\r\n        mask_identity = False\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: cannot combine record fields unless flatten_records=True\r\n```\r\n\r\nBut the suggested command also errors, telling me to do something else:\r\n\r\n```python\r\nak.any(ak.Array([{\"a\": False}]), flatten_records=True)\r\n```\r\n\r\n```pytb\r\nValueError: while calling\r\n\r\n    ak.any(\r\n        array = <Array [{a: False}] type='1 * {a: bool}'>\r\n        axis = None\r\n        keepdims = False\r\n        mask_identity = False\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: `flatten_records` is no longer a supported argument for reducers. Instead, use `ak.ravel(array)` first to remove the record structure and flatten the array.\r\n```\r\n\r\n`ak.ravel` should probably be suggested at the first point.",
  "closed_at":"2023-02-03T18:11:53Z",
  "comments":0,
  "created_at":"2023-02-03T15:23:43Z",
  "id":1570012826,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dlH6a",
  "number":2200,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.any Error message gives suggestion which will also error",
  "updated_at":"2023-02-03T18:11:53Z",
  "user":"MDQ6VXNlcjgyMzg4MDQ="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2200 \r\n\r\n@jpivarski oops, I should have left this for `one-hour-fix`. Sorry!",
  "closed_at":"2023-02-03T18:11:52Z",
  "comments":1,
  "created_at":"2023-02-03T15:54:28Z",
  "draft":false,
  "id":1570060716,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JNt4v",
  "number":2201,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-03T18:11:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: improve error message",
  "updated_at":"2023-02-03T18:11:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As discussed with @vepadulano - the `rdfentry_` column is guaranteed to produce unique indexing. This PR takes the column out and checks its length against the Awkward type column data (not copied to or from RDF).\r\n\r\nHowever, there might be a more efficient way to check if the RDF was filtered.",
  "closed_at":"2023-02-06T16:51:39Z",
  "comments":3,
  "created_at":"2023-02-03T16:26:34Z",
  "draft":false,
  "id":1570103044,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JN26O",
  "number":2202,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-06T16:51:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: allow awkward type arrays filtering based on rdfentry",
  "updated_at":"2023-02-06T16:51:40Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nWe want our parameters to be less fragile. ",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-02-03T16:28:50Z",
  "id":1570105810,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dlenS",
  "number":2203,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "heart":1,
   "total_count":2
  },
  "state":"open",
  "state_reason":null,
  "title":"Add `axis` and `through_option` arguments to `with_parameter` and `parameters`",
  "updated_at":"2023-02-03T16:28:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Adds @dsavoiu as a contributor for code.\n\nThis was requested by jpivarski [in this comment](https://github.com/scikit-hep/awkward/pull/2194#issuecomment-1416476694)\n\n[skip ci]",
  "closed_at":"2023-02-03T22:18:49Z",
  "comments":0,
  "created_at":"2023-02-03T22:17:57Z",
  "draft":false,
  "id":1570553829,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JPZhZ",
  "number":2204,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-03T22:18:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add dsavoiu as a contributor for code",
  "updated_at":"2023-02-03T22:18:50Z",
  "user":"MDM6Qm90NDY0NDczMjE="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-02-04T00:00:10Z",
  "comments":1,
  "created_at":"2023-02-03T23:26:47Z",
  "draft":false,
  "id":1570613379,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JPmoz",
  "number":2206,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-04T00:00:10Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: ignore object arrays",
  "updated_at":"2023-02-04T00:00:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.0.6\r\n\r\n### Description and code to reproduce\r\n\r\nIn some of my code, I frequently check that there are entries left in the array before trying to proceed to the next step. My use case is calling out to some c++ code to do jet finding event by event, so if there are no jets found, it eventually returns a full array of events, all of which are empty.\r\n\r\nIn awkward 1.x, I used `ak.flatten(array[\"data\"].px, axis=None)` to flatten out a record (px is one of the fields, not calculated by vector) to check for entries (the particular record didn't really matter - I just needed one). In awkward 2.x, if I do the same, I get an assertion error:\r\n\r\n```\r\nIn [13]: ak.flatten(jets[\"data\"].px, axis=None)\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\nCell In [13], line 1\r\n----> 1 ak.flatten(jets[\"data\"].px, axis=None)\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/operations/ak_flatten.py:161, in flatten(array, axis, highlevel, behavior)\r\n      9 \"\"\"\r\n     10 Args:\r\n     11     array: Array-like data (anything #ak.to_layout recognizes).\r\n   (...)\r\n    155      999]\r\n    156 \"\"\"\r\n    157 with ak._errors.OperationErrorContext(\r\n    158     \"ak.flatten\",\r\n    159     dict(array=array, axis=axis, highlevel=highlevel, behavior=behavior),\r\n    160 ):\r\n--> 161     return _impl(array, axis, highlevel, behavior)\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/operations/ak_flatten.py:173, in _impl(array, axis, highlevel, behavior)\r\n    168     out = ak._do.completely_flatten(layout, function_name=\"ak.flatten\")\r\n    169     assert isinstance(out, tuple) and all(\r\n    170         isinstance(x, ak.contents.NumpyArray) for x in out\r\n    171     )\r\n--> 173     result = ak._do.mergemany(out)\r\n    175     return ak._util.wrap(result, behavior, highlevel)\r\n    177 elif axis == 0 or ak._util.maybe_posaxis(layout, axis, 1) == 0:\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/_do.py:303, in mergemany(contents)\r\n    302 def mergemany(contents: list[Content]) -> Content:\r\n--> 303     assert len(contents) != 0\r\n    304     return contents[0]._mergemany(contents[1:])\r\n\r\nAssertionError:\r\n```\r\n\r\nSome more info on the array:\r\n\r\n```python\r\nIn [12]: jets.type.show()\r\n81 * {\r\n    data: var * Momentum4D[\r\n        px: unknown,\r\n        py: unknown,\r\n        pz: unknown,\r\n        E: unknown,\r\n        area: unknown,\r\n        rho_value: float64,\r\n        constituents: var * Momentum4D[\r\n            px: float64,\r\n            py: float64,\r\n            pz: float64,\r\n            E: float64,\r\n            index: int64\r\n        ],\r\n        unsubtracted_leading_track_pt: unknown\r\n    ]\r\n}\r\n```\r\n\r\nIt seems to be about the \"unknown\" nature of the type, since if I do the same with `pt`, vector calculates that field, which then types it with `float64`, and the call works. Also note that if I flatten without axis=None, it works fine. A pickle with the jets array is attached [regression_jets.pkl.zip](https://github.com/scikit-hep/awkward/files/10593610/regression_jets.pkl.zip) (with .zip as the extension to allow it to be uploaded). I can in principle switch over to `pt`, but it would be nicer if this worked as in awkward 1.x . Thanks!\r\n\r\nedit: I know for sure that the behavior changed, but now I'm a bit less confident it is truly a regression as opposed to the possibility that it's an intended change in behavior. If so, I suppose please let me know, and I'll have to dig through my codebase to change it",
  "closed_at":"2023-02-07T17:28:47Z",
  "comments":5,
  "created_at":"2023-02-04T01:16:38Z",
  "id":1570686907,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dnse7",
  "number":2207,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Different behavior for awkward 2.x on ak.flatten with unknown type ",
  "updated_at":"2023-02-07T17:28:47Z",
  "user":"MDQ6VXNlcjE1NzE5Mjc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.7\n\n### Description and code to reproduce\n\n```python\r\nimport awkward as ak\r\n\r\na = ak.Array([[1]])[0:0]\r\nb = ak.Array([[1]])[0:0]\r\n\r\nak.almost_equal(a, b)\r\n```\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\nCell In[9], line 1\r\n----> 1 ak.almost_equal(a, b)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/operations/ak_almost_equal.py:134, in almost_equal(left, right, rtol, atol, dtype_exact, check_parameters, check_regular)\r\n    131     else:\r\n    132         raise wrap_error(AssertionError)\r\n--> 134 return visitor(left, right)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/operations/ak_almost_equal.py:95, in almost_equal.<locals>.visitor(left, right)\r\n     88     return False\r\n     90 if left.is_list:\r\n     91     return (\r\n     92         backend.index_nplike.array_equal(left.starts, right.starts)\r\n     93         and backend.index_nplike.array_equal(left.stops, right.stops)\r\n     94         and visitor(\r\n---> 95             left.content[: left.stops[-1]], right.content[: right.stops[-1]]\r\n     96         )\r\n     97     )\r\n     98 elif left.is_regular:\r\n     99     return (left.size == right.size) and visitor(left.content, right.content)\r\n\r\nFile /usr/local/lib/python3.9/site-packages/awkward/index.py:196, in Index.__getitem__(self, where)\r\n    195 def __getitem__(self, where):\r\n--> 196     out = self._data[where]\r\n    198     if hasattr(out, \"shape\") and len(out.shape) != 0:\r\n    199         return Index(out, metadata=self.metadata, nplike=self._nplike)\r\n\r\nIndexError: index -1 is out of bounds for axis 0 with size 0\r\n```\r\n\r\nOn 2.0.6, `ak._util.arrays_approx_equal` would not throw an error here.\r\n\r\nFound this from some tests starting to error when upgrading to 2.0.7 and swapping out the internal function for the new implementation.",
  "closed_at":"2023-02-13T12:42:09Z",
  "comments":2,
  "created_at":"2023-02-06T10:26:42Z",
  "id":1572307398,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dt4HG",
  "number":2209,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.almost_equal` throws `IndexError` when passed datashape `0 * var * int64`",
  "updated_at":"2023-02-13T12:42:09Z",
  "user":"MDQ6VXNlcjgyMzg4MDQ="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- Fixes #2209 \r\n- Adds `shapes_equal` to nplike with `None` return result for unknown shape items.",
  "closed_at":"2023-02-13T12:42:07Z",
  "comments":5,
  "created_at":"2023-02-06T11:41:41Z",
  "draft":false,
  "id":1572416748,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JVNJh",
  "number":2210,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-13T12:42:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support length-zero outer arrays in almost_equal",
  "updated_at":"2023-02-13T12:42:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.7\n\n### Description and code to reproduce\n\nI've found what I think is a bug in the recently added `merge_union_of_records`. With the following input it seems to be a no-op, when I would have expected it to result in `5 * var * {a: int: b: ?int}`\r\n\r\n\r\n```python\r\n>>> a = ak.Array([[{\"a\": 1, \"b\": 4}], [{\"a\": 2, \"b\": 5}, {\"a\": 3, \"b\": 6}]])\r\n>>> b = ak.Array(\r\n...     [\r\n...         [{\"a\": 4}, {\"a\": 5}],\r\n...         [{\"a\": 6}],\r\n...         [{\"a\": 7}],\r\n...     ]\r\n... )\r\n>>> a.type.show()\r\n2 * var * {\r\n    a: int64,\r\n    b: int64\r\n}\r\n>>> b.type.show()\r\n3 * var * {\r\n    a: int64\r\n}\r\n>>> ak.concatenate([a, b]).type.show()\r\n5 * union[\r\n    var * {\r\n        a: int64,\r\n        b: int64\r\n    },\r\n    var * {\r\n        a: int64\r\n    }\r\n]\r\n>>> ak.merge_union_of_records(ak.concatenate([a, b])).type.show()\r\n5 * union[\r\n    var * {\r\n        a: int64,\r\n        b: int64\r\n    },\r\n    var * {\r\n        a: int64\r\n    }\r\n]\r\n```",
  "closed_at":"2023-02-27T18:32:59Z",
  "comments":18,
  "created_at":"2023-02-06T15:21:11Z",
  "id":1572771010,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dvpTC",
  "number":2211,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.merge_union_of_records` not merging `Union[var * {a: int, b:int}, var * {a: int}]`",
  "updated_at":"2023-03-03T19:03:57Z",
  "user":"MDQ6VXNlcjgyMzg4MDQ="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Which documentation?\n\nPython docstrings\n\n### What needs to be documented?\n\nIn the example given, the result type is the same as the input type:\r\n\r\n<details>\r\n<summary> Quote from the docstring </summary>\r\n\r\n```python\r\nSimplifies unions of records, e.g.\r\n\r\n    >>> array = ak.Array([{\"a\": 1}, {\"b\": 2}])\r\n\r\ninto records of options, i.e.\r\n\r\n    >>> ak.merge_union_of_records(array)\r\n    <Array [{a: 1, b: None}, {a: None, ...}] type='2 * {a: ?int64, b: ?int64}'>\r\n```\r\n\r\n</details>\r\n\r\n```python\r\n>>> import awkward as ak\r\n>>> ak.Array([{\"a\": 1}, {\"b\": 2}]).type.show()\r\n2 * {\r\n    a: ?int64,\r\n    b: ?int64\r\n}\r\n>>> ak.merge_union_of_records(ak.Array([{\"a\": 1}, {\"b\": 2}])).type.show()\r\n2 * {\r\n    a: ?int64,\r\n    b: ?int64\r\n}\r\n```",
  "closed_at":"2023-02-07T10:34:08Z",
  "comments":1,
  "created_at":"2023-02-06T15:23:49Z",
  "id":1572776106,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dvqiq",
  "number":2212,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Example in merge_union_of_records is a no-op",
  "updated_at":"2023-02-07T10:34:08Z",
  "user":"MDQ6VXNlcjgyMzg4MDQ="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2212 ",
  "closed_at":"2023-02-07T10:34:07Z",
  "comments":2,
  "created_at":"2023-02-06T15:44:01Z",
  "draft":false,
  "id":1572812729,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JWi0e",
  "number":2213,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T10:34:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix example for `merge_union_of_records`",
  "updated_at":"2023-02-07T10:34:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.0.6\n\n### Description and code to reproduce\n\nFollowing up on my previous report, I've found another case where the behavior varies from awkward 1.x to 2.x in an unexpected manner. The rough outline is that I'm trying to apply a mask to select some subset of nested data. In awkward 1.x, this works fine (I did this with a behavior, which you can see a glimpse of the functionality in the trace - here it's a bit for convenience). In awkward 2.x, this raises an IndexError (trace below):\r\n\r\n```python\r\nCell In [6], line 1\r\n----> 1 jets.jet_splittings.iterative_splittings(jets.subjets)\r\n\r\nFile ~/software/dev/mammoth/src/mammoth/framework/analysis/jet_substructure.py:387, in JetSplittingArray.iterative_splittings(self, subjets)\r\n    379 def iterative_splittings(self, subjets: SubjetArray) -> SubjetArray:\r\n    380     \"\"\"Retrieve the iterative splittings.\r\n    381\r\n    382     Args:\r\n   (...)\r\n    385         The splittings which are part of the iterative splitting chain.\r\n    386     \"\"\"\r\n--> 387     return cast(SubjetArray, self[subjets.iterative_splitting_index])\r\n\r\nFile ~/software/dev/mammoth/src/mammoth/framework/analysis/jet_substructure.py:253, in SubjetArray.iterative_splitting_index(self)\r\n    250 @property\r\n    251 def iterative_splitting_index(self) -> AwkwardArray[int]:\r\n    252     \"\"\"Indices of splittings which were part of the iterative splitting chain.\"\"\"\r\n--> 253     return self.parent_splitting_index[self.part_of_iterative_splitting]\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/highlevel.py:956, in Array.__getitem__(self, where)\r\n    527 \"\"\"\r\n    528 Args:\r\n    529     where (many types supported; see below): Index of positions to\r\n   (...)\r\n    953 have the same dimension as the array being indexed.\r\n    954 \"\"\"\r\n    955 with ak._errors.SlicingErrorContext(self, where):\r\n--> 956     out = self._layout[where]\r\n    957     if isinstance(out, ak.contents.NumpyArray):\r\n    958         array_param = out.parameter(\"__array__\")\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/contents/content.py:509, in Content.__getitem__(self, where)\r\n    508 def __getitem__(self, where):\r\n--> 509     return self._getitem(where)\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/contents/content.py:554, in Content._getitem(self, where)\r\n    551         return out._getitem_at(0)\r\n    553 elif isinstance(where, ak.highlevel.Array):\r\n--> 554     return self._getitem(where.layout)\r\n    556 elif (\r\n    557     isinstance(where, Content)\r\n    558     and where._parameters is not None\r\n    559     and (where._parameters.get(\"__array__\") in (\"string\", \"bytestring\"))\r\n    560 ):\r\n    561     return self._getitem_fields(ak.operations.to_list(where))\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/contents/content.py:602, in Content._getitem(self, where)\r\n    599         return out._getitem_at(0)\r\n    601 elif isinstance(where, Content):\r\n--> 602     return self._getitem((where,))\r\n    604 elif ak._util.is_sized_iterable(where) and len(where) == 0:\r\n    605     return self._carry(\r\n    606         ak.index.Index64.empty(0, self._backend.index_nplike),\r\n    607         allow_lazy=True,\r\n    608     )\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/contents/content.py:535, in Content._getitem(self, where)\r\n    532     return self\r\n    534 # Normalise valid indices onto well-defined basis\r\n--> 535 items = ak._slicing.normalise_items(where, self._backend)\r\n    536 # Prepare items for advanced indexing (e.g. via broadcasting)\r\n    537 nextwhere = ak._slicing.prepare_advanced_indexing(items)\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/_slicing.py:206, in normalise_items(where, backend)\r\n    204 def normalise_items(where: Sequence, backend: ak._backends.Backend) -> list:\r\n    205     # First prepare items for broadcasting into like-types\r\n--> 206     return [normalise_item(x, backend) for x in where]\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/_slicing.py:206, in <listcomp>(.0)\r\n    204 def normalise_items(where: Sequence, backend: ak._backends.Backend) -> list:\r\n    205     # First prepare items for broadcasting into like-types\r\n--> 206     return [normalise_item(x, backend) for x in where]\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/_slicing.py:172, in normalise_item(item, backend)\r\n    169         return as_numpy.data\r\n    171 elif isinstance(item, ak.contents.Content):\r\n--> 172     out = normalise_item_bool_to_int(normalise_item_nested(item))\r\n    173     if isinstance(out, ak.contents.NumpyArray):\r\n    174         return out.data\r\n\r\nFile ~/software/dev/mammoth/.venv/lib/python3.10/site-packages/awkward/_slicing.py:373, in normalise_item_bool_to_int(item)\r\n    371 if item.backend.nplike.known_data or item.backend.nplike.known_shape:\r\n    372     localindex = ak._do.local_index(item, axis=1)\r\n--> 373     nextcontent = localindex.content.data[item.content.data]\r\n    375     cumsum = item.backend.index_nplike.empty(\r\n    376         item.content.data.shape[0] + 1, np.int64\r\n    377     )\r\n    378     cumsum[0] = 0\r\n\r\nIndexError: boolean index did not match indexed array along dimension 0; dimension is 14 but corresponding boolean dimension is 36\r\n```\r\n\r\nUnfortunately, this has been tricky to reproduce since it's deeply nested in my code, and only seems to occur for some inputs (there's also a random input :-( ). I tried pickling the array, but in testing the pickled array, it works fine. This led me to guessing a workaround - that if I `ak.to_packed()` the data, it would work, and anecdotally, this seemed to have worked (in some previous issue, I learned that pickling calls something like `to_packed`). I managed to reproduce it once in a debug environment (unfortunately, unclear if it will work consistently - there are still some random elements), and grabbed the layouts from the initial array (failing) and on the packed array (working)\r\n\r\noriginal:\r\n```\r\nIn [15]: jets.layout\r\nOut[15]:\r\n<RecordArray is_tuple='false' len='1'>\r\n    <content index='0' field='jet_pt'>\r\n        <NumpyArray dtype='float64' len='1'>[24.54459219]</NumpyArray>\r\n    </content>\r\n    <content index='1' field='jet_constituents'>\r\n        <ListOffsetArray len='1'>\r\n            <offsets><Index dtype='int64' len='2'>\r\n                [0 8]\r\n            </Index></offsets>\r\n            <content><RecordArray is_tuple='false' len='8'>\r\n                <parameter name='__record__'>'JetConstituent'</parameter>\r\n                <content index='0' field='pt'>\r\n                    <NumpyArray dtype='float64' len='8'>\r\n                        [ 1.54625939  0.76237501  0.23116202  1.25449706\r\n                          2.66868935  5.11290739  0.70627872 12.29195148]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='1' field='eta'>\r\n                    <NumpyArray dtype='float64' len='8'>\r\n                        [0.53683598 0.82056333 0.84215039 0.76359227 0.59864123\r\n                         0.69776704 0.72732497 0.69191189]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='2' field='phi'>\r\n                    <NumpyArray dtype='float64' len='8'>\r\n                        [-2.43178638 -2.41334926 -2.50400814 -2.41215308\r\n                         -2.58415947 -2.55853468 -2.52816211 -2.49251164]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='3' field='id'>\r\n                    <IndexedArray len='8'>\r\n                        <index><Index dtype='int64' len='8'>\r\n                            [726608 726112 726550 726268 726302 726309 726566\r\n                             726301]\r\n                        </Index></index>\r\n                        <content><NumpyArray dtype='int64' len='1420975'>\r\n                            [     0 100000 100001 ... 100664 100665 100666]\r\n                        </NumpyArray></content>\r\n                    </IndexedArray>\r\n                </content>\r\n            </RecordArray></content>\r\n        </ListOffsetArray>\r\n    </content>\r\n    <content index='2' field='jet_splittings'>\r\n        <IndexedArray len='1'>\r\n            <index><Index dtype='int64' len='1'>\r\n                [0]\r\n            </Index></index>\r\n            <content><ListOffsetArray len='1'>\r\n                <offsets><Index dtype='int64' len='2'>\r\n                    [0 7]\r\n                </Index></offsets>\r\n                <content><RecordArray is_tuple='false' len='7'>\r\n                    <parameter name='__record__'>'JetSplitting'</parameter>\r\n                    <content index='0' field='kt'>\r\n                        <NumpyArray dtype='float64' len='7'>\r\n                            [0.27029765 0.32986462 0.31952325 0.36662835\r\n                             0.02992396 0.02485513 0.04341938]\r\n                        </NumpyArray>\r\n                    </content>\r\n                    <content index='1' field='delta_R'>\r\n                        <NumpyArray dtype='float64' len='7'>\r\n                            [0.17571019 0.14732361 0.12001833 0.06304824\r\n                             0.04238117 0.10773081 0.05698362]\r\n                        </NumpyArray>\r\n                    </content>\r\n                    <content index='2' field='z'>\r\n                        <NumpyArray dtype='float64' len='7'>\r\n                            [0.06298601 0.09764745 0.12847613 0.32129356\r\n                             0.1213707  0.10282853 0.37799871]\r\n                        </NumpyArray>\r\n                    </content>\r\n                    <content index='3' field='parent_index'>\r\n                        <NumpyArray dtype='int64' len='7'>[-1  0  1  2  3  1  5]</NumpyArray>\r\n                    </content>\r\n                </RecordArray></content>\r\n            </ListOffsetArray></content>\r\n        </IndexedArray>\r\n    </content>\r\n    <content index='3' field='subjets'>\r\n        <ListOffsetArray len='1'>\r\n            <offsets><Index dtype='int64' len='2'>\r\n                [22 36]\r\n            </Index></offsets>\r\n            <content><RecordArray is_tuple='false' len='36'>\r\n                <parameter name='__record__'>'Subjet'</parameter>\r\n                <content index='0' field='part_of_iterative_splitting'>\r\n                    <NumpyArray dtype='bool' len='36'>\r\n                        [ True False  True False  True False  True False  True\r\n                         False  True False False False False False False False\r\n                         False False False False  True False  True False  True\r\n                         False  True False False False False False False False]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='1' field='parent_splitting_index'>\r\n                    <NumpyArray dtype='int64' len='36'>\r\n                        [ 0  0  1  1  2  2  3  3  4  4  5  5  6  6  7  7  8  8\r\n                          9  9 10 10  0  0  1  1  2  2  3  3  4  4  5  5  6  6]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='2' field='constituent_indices'>\r\n                    <ListOffsetArray len='36'>\r\n                        <offsets><Index dtype='int64' len='37'>\r\n                            [ 0 11 12 21 23 29 32 35 38 40 41 42 43 44 46 47 48\r\n                             50 51 52 53 54 55 62 63 67 70 73 74 75 77 78 79 81\r\n                             82 83 84]\r\n                        </Index></offsets>\r\n                        <content><NumpyArray dtype='int64' len='84'>\r\n                            [ 1  3  7  2  6  8  4  5  9 10 11  0  7  2  6  8  4\r\n                              5  9 10 11  1  3  8  4  5  9 10 11  7  2  6  9 10\r\n                             11  8  4  5 10 11  9 10 11  8  4  5  5  4  2  6  7\r\n                              2  6  3  1  2  1  3  4  7  5  6  0  4  7  5  6  2\r\n                              1  3  7  5  6  4  7  5  6  5  6  1  3  2  3  1]\r\n                        </NumpyArray></content>\r\n                    </ListOffsetArray>\r\n                </content>\r\n            </RecordArray></content>\r\n        </ListOffsetArray>\r\n    </content>\r\n    <content index='4' field='leading_track_pt'>\r\n        <IndexedArray len='1'>\r\n            <index><Index dtype='int64' len='1'>\r\n                [1]\r\n            </Index></index>\r\n            <content><NumpyArray dtype='float64' len='2'>[12.69099712 12.34701824]</NumpyArray></content>\r\n        </IndexedArray>\r\n    </content>\r\n</RecordArray>\r\n```\r\n\r\npacked:\r\n\r\n```\r\nIn [16]: jets_packed = ak.to_packed(jets)\r\n\r\nIn [17]: jets_packed.layout\r\nOut[17]:\r\n<RecordArray is_tuple='false' len='1'>\r\n    <content index='0' field='jet_pt'>\r\n        <NumpyArray dtype='float64' len='1'>[24.54459219]</NumpyArray>\r\n    </content>\r\n    <content index='1' field='jet_constituents'>\r\n        <ListOffsetArray len='1'>\r\n            <offsets><Index dtype='int64' len='2'>\r\n                [0 8]\r\n            </Index></offsets>\r\n            <content><RecordArray is_tuple='false' len='8'>\r\n                <parameter name='__record__'>'JetConstituent'</parameter>\r\n                <content index='0' field='pt'>\r\n                    <NumpyArray dtype='float64' len='8'>\r\n                        [ 1.54625939  0.76237501  0.23116202  1.25449706\r\n                          2.66868935  5.11290739  0.70627872 12.29195148]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='1' field='eta'>\r\n                    <NumpyArray dtype='float64' len='8'>\r\n                        [0.53683598 0.82056333 0.84215039 0.76359227 0.59864123\r\n                         0.69776704 0.72732497 0.69191189]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='2' field='phi'>\r\n                    <NumpyArray dtype='float64' len='8'>\r\n                        [-2.43178638 -2.41334926 -2.50400814 -2.41215308\r\n                         -2.58415947 -2.55853468 -2.52816211 -2.49251164]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='3' field='id'>\r\n                    <NumpyArray dtype='int64' len='8'>\r\n                        [100494      5 100436 100154 100188 100195 100452\r\n                         100187]\r\n                    </NumpyArray>\r\n                </content>\r\n            </RecordArray></content>\r\n        </ListOffsetArray>\r\n    </content>\r\n    <content index='2' field='jet_splittings'>\r\n        <ListOffsetArray len='1'>\r\n            <offsets><Index dtype='int64' len='2'>[0 7]</Index></offsets>\r\n            <content><RecordArray is_tuple='false' len='7'>\r\n                <parameter name='__record__'>'JetSplitting'</parameter>\r\n                <content index='0' field='kt'>\r\n                    <NumpyArray dtype='float64' len='7'>\r\n                        [0.27029765 0.32986462 0.31952325 0.36662835 0.02992396\r\n                         0.02485513 0.04341938]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='1' field='delta_R'>\r\n                    <NumpyArray dtype='float64' len='7'>\r\n                        [0.17571019 0.14732361 0.12001833 0.06304824 0.04238117\r\n                         0.10773081 0.05698362]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='2' field='z'>\r\n                    <NumpyArray dtype='float64' len='7'>\r\n                        [0.06298601 0.09764745 0.12847613 0.32129356 0.1213707\r\n                         0.10282853 0.37799871]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='3' field='parent_index'>\r\n                    <NumpyArray dtype='int64' len='7'>[-1  0  1  2  3  1  5]</NumpyArray>\r\n                </content>\r\n            </RecordArray></content>\r\n        </ListOffsetArray>\r\n    </content>\r\n    <content index='3' field='subjets'>\r\n        <ListOffsetArray len='1'>\r\n            <offsets><Index dtype='int64' len='2'>[ 0 14]</Index></offsets>\r\n            <content><RecordArray is_tuple='false' len='14'>\r\n                <parameter name='__record__'>'Subjet'</parameter>\r\n                <content index='0' field='part_of_iterative_splitting'>\r\n                    <NumpyArray dtype='bool' len='14'>\r\n                        [ True False  True False  True False  True False False\r\n                         False False False False False]\r\n                    </NumpyArray>\r\n                </content>\r\n                <content index='1' field='parent_splitting_index'>\r\n                    <NumpyArray dtype='int64' len='14'>[0 0 1 1 2 2 3 3 4 4 5 5 6 6]</NumpyArray>\r\n                </content>\r\n                <content index='2' field='constituent_indices'>\r\n                    <ListOffsetArray len='14'>\r\n                        <offsets><Index dtype='int64' len='15'>\r\n                            [ 0  7  8 12 15 18 19 20 22 23 24 26 27 28 29]\r\n                        </Index></offsets>\r\n                        <content><NumpyArray dtype='int64' len='29'>\r\n                            [2 1 3 4 7 5 6 0 4 7 5 6 2 1 3 7 5 6 4 7 5 6 5 6 1\r\n                             3 2 3 1]\r\n                        </NumpyArray></content>\r\n                    </ListOffsetArray>\r\n                </content>\r\n            </RecordArray></content>\r\n        </ListOffsetArray>\r\n    </content>\r\n    <content index='4' field='leading_track_pt'>\r\n        <NumpyArray dtype='float64' len='1'>[12.34701824]</NumpyArray>\r\n    </content>\r\n</RecordArray>\r\n```\r\n\r\n`to_packed` seems like it's given the right behavior since the original and packed jets appear to have the same values, but I think it's a bug that it's needed here. Can you please take a look?\r\n\r\n(I'm not sure what the performance implications of `ak.to_packed` are here, but I need a quick fix, and it seems to work, so I'll run with it. If there are cheaper/better workarounds, I would appreciate any suggestions!)",
  "closed_at":"2023-02-07T17:56:40Z",
  "comments":12,
  "created_at":"2023-02-06T22:01:04Z",
  "id":1573357492,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5dx4e0",
  "number":2214,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"IndexError: boolean index did not match indexed array in awkward 2.x vs 1.x",
  "updated_at":"2023-02-15T22:43:30Z",
  "user":"MDQ6VXNlcjE1NzE5Mjc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 22.12.0 \u2192 23.1.0](https://github.com/psf/black/compare/22.12.0...23.1.0)\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.237 \u2192 v0.0.246](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.237...v0.0.246)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-02-15T16:01:35Z",
  "comments":2,
  "created_at":"2023-02-07T01:27:21Z",
  "draft":false,
  "id":1573533762,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JY-7t",
  "number":2215,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-15T16:01:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-02-15T16:01:36Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2214\r\n\r\nThe fix here is simplest if we start the `ListOffsetArray` at zero. This should not copy anything besides offsets for the list-of-NumPy case. There are other places in this region of the codebase that might also have this bug, but I'd prefer to wait for bug reports.",
  "closed_at":"2023-02-07T17:56:39Z",
  "comments":1,
  "created_at":"2023-02-07T10:32:20Z",
  "draft":false,
  "id":1574078400,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Jayhr",
  "number":2216,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T17:56:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: boolean indexing with non-zero starting offsets",
  "updated_at":"2023-02-07T17:56:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I've pushed a new build of the v1.10 docs to http://awkward-array.org/doc, using our new pydata-sphinx-theme template. It's not perfect, but it also doesn't need to be \u2014 it's just for existing v1 users. This path is set to be hidden from indexing, spidering, and analytics.\r\n\r\nI've already pushed this to the website, but this change ensures that v1 can be selected from the version dropdown upon future releases, which will wipe the deployed contents of `switcher.json`",
  "closed_at":"2023-02-07T21:21:29Z",
  "comments":7,
  "created_at":"2023-02-07T11:03:51Z",
  "draft":false,
  "id":1574122319,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ja8A4",
  "number":2217,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T21:21:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add 1.10 legacy docs to `switcher.json`",
  "updated_at":"2023-02-07T21:21:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Hatchling ignores anything that is ignored by the VCS by default. We can use `artefacts` to explicitly include e.g. the generated CUDA kernel tests.",
  "closed_at":"2023-02-07T17:05:48Z",
  "comments":2,
  "created_at":"2023-02-07T11:47:06Z",
  "draft":false,
  "id":1574182748,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JbJJ2",
  "number":2218,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T17:05:48Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: include cuda kernel tests in sdist",
  "updated_at":"2023-02-16T08:49:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2207 by preserving `EmptyArray` in `ak._do.remove_structure`. This means that code that previously did not handle `EmptyArray` would now be expected to. I don't think there are many places where this is actually a problem; `EmptyArray` already handles reduction, and flattening almost immediately returns the result.",
  "closed_at":"2023-02-07T17:28:46Z",
  "comments":4,
  "created_at":"2023-02-07T11:52:14Z",
  "draft":false,
  "id":1574189212,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JbKjo",
  "number":2219,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T17:28:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: keep `EmptyArray` in `remove_structure`",
  "updated_at":"2023-02-07T17:38:00Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\nThis PR\r\n- Changes `Content._getitem_range(slice(start, stop, None))` to `Content._getitem_range(start, stop)`\r\n- Changes `nplike.shape_item_as_scalar` to `shape_item_as_index` etc. to support mixed known-unknown indices\r\n\r\n## TL\r\nThe motivation for this PR is that we're constructing slice objects to immediately unpack them in many places. The `slice.indices` method that we use to unpack these slices does not know about `length = None`. Therefore, it makes sense just to forgo all of this by passing around fixed index values.\r\n\r\nIt became apparent in the work on typetracer that `shape_item_as_scalar` could not just return the 0D array of the nplike. This is because known-index values are useful; it is possible to slice a known-length content with known start & stop values such that the result shape is known. Therefore, we need to support known values alongside unknown values. \r\n\r\nTherefore, I've renamed `shape_item_as_scalar` so that we have a new type concept \"index\", which is _either_ a pure-Python integer, or a 0D array of the index type. I think this is sufficiently straightforward that it isn't opening too big a can of worms.\r\n\r\nThis is how we move between types, now:\r\n\r\n```mermaid\r\nflowchart LR;\r\nshape_item[/Shape Item/]\r\nindex[/Index/]\r\noffset[/Offset/]\r\nshape_item -->|shape_item_as_index| index\r\nindex -->|index_as_shape_item| shape_item\r\nindex --> |nplike.asarray| offset\r\noffset --> |index_as_shape_item| shape_item\r\n```\r\n\r\nClearly, offsets are just unknown indices.",
  "closed_at":"2023-02-09T20:47:51Z",
  "comments":14,
  "created_at":"2023-02-07T13:11:19Z",
  "draft":false,
  "id":1574306853,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JbkFI",
  "number":2220,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-09T20:47:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: change `Content._getitem_range` to use explicit indices",
  "updated_at":"2023-02-09T20:47:52Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] implement an abstract `is_c_contiguous` method for Cupy class\r\n- [x] update cuda tests",
  "closed_at":"2023-02-07T17:46:31Z",
  "comments":2,
  "created_at":"2023-02-07T16:38:03Z",
  "draft":false,
  "id":1574654640,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JcuwS",
  "number":2221,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T17:46:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add `is_c_contiguous` method to Cupy",
  "updated_at":"2023-02-07T17:46:33Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\nawkward@main + dask_awkward@refactor-column-optimization\n\n### Description and code to reproduce\n\n```python3\r\nimport awkward as ak\r\nimport dask_awkward as dak\r\n\r\nx = ak.to_regular(ak.Array([[[-1, 1.], [-2, 2], [-3, 3]], [[-4, 4]], []]), axis=-1)\r\ndx = dak.from_awkward(x, 1)\r\ndx._meta[:, -1]\r\n```\r\n\r\nresults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"regular_array_problem.py\", line 6, in <module>\r\n    dx._meta[:, -1]\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/highlevel.py\", line 951, in __getitem__\r\n    out = self._layout[where]\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/contents/content.py\", line 514, in __getitem__\r\n    return self._getitem(where)\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/contents/content.py\", line 551, in _getitem\r\n    out = next._getitem_next(nextwhere[0], nextwhere[1:], None)\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/contents/regulararray.py\", line 393, in _getitem_next\r\n    start, stop, step = head.indices(self._size)\r\n```",
  "closed_at":"2023-02-09T22:30:38Z",
  "comments":4,
  "created_at":"2023-02-07T16:54:30Z",
  "id":1574686178,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5d283i",
  "number":2222,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Indexing operations on regular array typetracer fails",
  "updated_at":"2023-02-09T22:30:38Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\nThis PR\r\n- Removes `Content._carry_asrange` and its kernel `awkward_Index_iscontinguous`, as it appears unused.\r\n- Adds type annotations to the `_getitem_` system",
  "closed_at":"2023-02-07T17:58:29Z",
  "comments":1,
  "created_at":"2023-02-07T16:59:56Z",
  "draft":false,
  "id":1574696788,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Jc31X",
  "number":2223,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T17:58:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: add type hints for `Content._getitem_XXX`",
  "updated_at":"2023-02-07T17:58:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-02-07T20:22:02Z",
  "comments":1,
  "created_at":"2023-02-07T19:31:32Z",
  "draft":false,
  "id":1574910421,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Jdl5D",
  "number":2224,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T20:22:02Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add license to _backends",
  "updated_at":"2023-02-07T20:22:03Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjU1MTAxODI1",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] implement `awkward_ByteMaskedArray_numnull` Cuda kernel\r\n- [x] enable tests",
  "closed_at":"2024-02-01T21:24:24Z",
  "comments":2,
  "created_at":"2023-02-07T20:19:29Z",
  "draft":true,
  "id":1574968566,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JdyNp",
  "number":2225,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: ByteMaskedArray numnull Cuda kernel",
  "updated_at":"2024-02-01T21:24:32Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Anywhere that we compute lengths in kernels, we should be casting the results to lengths using `index_nplike.scalar_as_shape_item(scalar)`, This allows conversion from unknown typetracer scalars to `None` lengths.",
  "closed_at":"2023-02-07T23:45:59Z",
  "comments":1,
  "created_at":"2023-02-07T22:26:33Z",
  "draft":false,
  "id":1575119107,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JeRsL",
  "number":2226,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-07T23:45:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use of size in `to_RegularArray`",
  "updated_at":"2023-02-08T01:22:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\nThis PR \r\n- fixes #2222 by handling unknown lengths in `RegularArray` for `_getitem_at`. \r\n- introduces helper to regularize an index given an array length\r\n\r\n## DR\r\nThis latter point (regularisation of indices) is infectious; if a length is not known, or the index is unknown, the result is unknown.\r\n\r\nThis PR is taking a step towards allowing `int` as indices alongside the scalar arrays belong to `backend.index_nplike`. We need this if we want concrete slices (`array[2:4]`) to preserve more information than unknown slices (`array[x:y]`). \r\n\r\n\r\n",
  "closed_at":"2023-02-09T22:30:37Z",
  "comments":3,
  "created_at":"2023-02-08T01:39:40Z",
  "draft":false,
  "id":1575315208,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Je8QD",
  "number":2227,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-09T22:30:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: indexing into `RegularArray` with typetracer",
  "updated_at":"2023-02-09T22:30:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We've discussed this before; there is a distinction to be made between known shapes and known lengths, but there is currently no use for any variant besides `known_shape = known_data = True/False`. Given that we have no way to test the isolation of this logic, it's better that we remove it. \r\n\r\nNote that `known_shape` just means \"this shape cannot contain unknown components`. `known_data`, meanwhile, used to mean \"these data are totally unknown\". \r\n\r\nNow `known_data` means \"this shape might contain unknown components, and the data aren't known\".",
  "closed_at":"2023-02-09T00:22:41Z",
  "comments":2,
  "created_at":"2023-02-08T23:56:59Z",
  "draft":false,
  "id":1576975343,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JkgwF",
  "number":2228,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-09T00:22:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: drop `NumpyLike.known_shape`",
  "updated_at":"2023-02-09T00:22:42Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n- Replace use of `None` as \"unknown length\" token with `unknown_length` singleton.\r\n- Replace use of `nplike.add_shape_item(length, x)` with `length + x`\r\n\r\n## TL\r\nThe rationale for using `None` as a token for an unknown length was weak, but was ultimately due to the following factors:\r\n- Array API uses `None` for unknown dimension lengths\r\n- `None` easily serialises to JSON\r\n- `None` is a natural singleton\r\n\r\nSome of this was discussed in https://github.com/scikit-hep/awkward/pull/2220#issuecomment-1422902819\r\n\r\nHowever, a significant problem with using `None` is that it is also a meaningful index value, and we would be unable to disambiguate between `array[None]` and `array[array.layout.length]` for typetracer arrays. Whilst this would only affect L2 typetracer users, it's enough to change the balance.\r\n\r\nThereafter, there are arguments to be made in favour of using `nplike.XXX_shape_item` functions to operate upon lengths vs a rich object that implements magic methods. I preferred the former, due to explicitness and the ability to do e.g. validation on known lengths (such as ensuring that they are positive). However, code is less easy to read from an expression perspective. @jpivarski and I discussed this, and we settled on re-introducing the object-oriented API. \r\n\r\nWe will maintain a strong distinction between an `index: int | ArrayLike` and a `length: int | type[unknown_length]`, to ensure that unknown values map correctly between spaces.\r\n\r\nThis reverts the inability to set `None` as length values in `RecordArray`.",
  "closed_at":"2023-02-09T13:36:03Z",
  "comments":1,
  "created_at":"2023-02-09T10:55:29Z",
  "draft":false,
  "id":1577666098,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Jm0Lx",
  "number":2229,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-09T13:36:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: re-introduce `unknown-length`",
  "updated_at":"2023-02-09T13:36:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjE4NTI0NDc=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Which documentation?\n\nDocumentation website\n\n### What needs to be documented?\n\nI think it would be quite useful if the structure of each content class was documented somewhere.\r\n\r\nI keep forgetting the specifics of how each content class works. To figure this out, I have been instantiating the class, then calling `to_buffers`. It would be great if the docs for either the Forms or Conents classes would say things like:\r\n\r\n> ListOffsets consist of an integer valued offset array and a data array. The data array is any other ak.contents.Content subclass. The buffer array has length (len(array) + 1) and ...\r\n\r\nThis would be very helpful for low level construction and manipulation of awkward arrays, and also for potential contributors the library.",
  "closed_at":"2023-02-09T22:17:04Z",
  "comments":4,
  "created_at":"2023-02-09T17:57:11Z",
  "id":1578353699,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5eE8Qj",
  "number":2230,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Documentation on Contents",
  "updated_at":"2023-02-10T12:55:30Z",
  "user":"MDQ6VXNlcjgyMzg4MDQ="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Specifically,\r\n\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.Content.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.BitMaskedArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.ByteMaskedArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.EmptyArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.IndexedArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.IndexedOptionArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.ListArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.ListOffsetArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.NumpyArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.RecordArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.RegularArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.UnionArray.rst\r\n  * https://raw.githubusercontent.com/scikit-hep/awkward/main-v1/docs-sphinx/ak.layout.UnmaskedArray.rst",
  "closed_at":"2023-02-09T22:17:02Z",
  "comments":2,
  "created_at":"2023-02-09T20:40:38Z",
  "draft":false,
  "id":1578580300,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Jp5jB",
  "number":2231,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-09T22:17:02Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: reintroduce Content documentation from v1 reST files.",
  "updated_at":"2023-02-09T22:17:04Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [amannn/action-semantic-pull-request](https://github.com/amannn/action-semantic-pull-request) from 5.0.2 to 5.1.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/releases\">amannn/action-semantic-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>v5.1.0</h2>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.0.2...v5.1.0\">5.1.0</a> (2023-02-10)</h2>\n<h3>Features</h3>\n<ul>\n<li>Add regex support to <code>scope</code> and <code>disallowScopes</code> configuration (<a href=\"https://github-redirect.dependabot.com/amannn/action-semantic-pull-request/issues/226\">#226</a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/403a6f89242a0d0d3acde94e6141b2e0f4da8838\">403a6f8</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/blob/main/CHANGELOG.md\">amannn/action-semantic-pull-request's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.0.2...v5.1.0\">5.1.0</a> (2023-02-10)</h2>\n<h3>Features</h3>\n<ul>\n<li>Add regex support to <code>scope</code> and <code>disallowScopes</code> configuration (<a href=\"https://github-redirect.dependabot.com/amannn/action-semantic-pull-request/issues/226\">#226</a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/403a6f89242a0d0d3acde94e6141b2e0f4da8838\">403a6f8</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/b6bca70dcd3e56e896605356ce09b76f7e1e0d39\"><code>b6bca70</code></a> chore: Release 5.1.0 [skip ci]</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/403a6f89242a0d0d3acde94e6141b2e0f4da8838\"><code>403a6f8</code></a> feat: Add regex support to <code>scope</code> and <code>disallowScopes</code> configuration (<a href=\"https://github-redirect.dependabot.com/amannn/action-semantic-pull-request/issues/226\">#226</a>)</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/0b14f54ac155d88e12522156e52cb6e397745cfd\"><code>0b14f54</code></a> Update issue templates [skip ci]</li>\n<li>See full diff in <a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.0.2...v5.1.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=amannn/action-semantic-pull-request&package-manager=github_actions&previous-version=5.0.2&new-version=5.1.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-02-13T10:19:57Z",
  "comments":1,
  "created_at":"2023-02-10T17:58:57Z",
  "draft":false,
  "id":1580105357,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5JvDDZ",
  "number":2232,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-13T10:19:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump amannn/action-semantic-pull-request from 5.0.2 to 5.1.0",
  "updated_at":"2023-02-13T10:19:58Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-02-15T17:04:02Z",
  "comments":1,
  "created_at":"2023-02-13T09:35:39Z",
  "draft":false,
  "id":1581981001,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5J1I2R",
  "number":2233,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: growable buffer nullptr check",
  "updated_at":"2024-02-01T21:47:33Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-02-20T16:06:24Z",
  "comments":2,
  "created_at":"2023-02-13T11:05:06Z",
  "draft":false,
  "id":1582137559,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5J1rM2",
  "number":2234,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-20T16:06:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: keep column order after filtering flag",
  "updated_at":"2023-02-20T16:06:25Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds a new `ak.merge_union_of_lists`, which pushes unions inside of list types, i.e.\r\n```\r\nUnion[List[X], List[Y]] \u2192 List[Union[X, Y]]\r\n```\r\n\r\nThis is useful in combination with `ak.merge_union_of_records`, which cannot operate upon `Union[var * Record, ...]`.\r\n\r\nFixes #2211\r\n\r\n- [ ] Support `is_option` types in `ak.merge_union_of_lists`\r\n- [ ] Support `is_option` types in `ak.merge_union_of_options`",
  "closed_at":"2023-02-27T15:42:38Z",
  "comments":13,
  "created_at":"2023-02-13T14:18:20Z",
  "draft":true,
  "id":1582437616,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5J2sgx",
  "number":2235,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.merge_union_of_lists`",
  "updated_at":"2023-03-16T13:33:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In #2235 it was raised that `merge_union_of_records` should support records wrapped in options. This PR considers that case.\r\n\r\n- [x] Add tests",
  "closed_at":"2023-02-14T10:19:13Z",
  "comments":2,
  "created_at":"2023-02-13T17:00:28Z",
  "draft":false,
  "id":1582723373,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5J3poh",
  "number":2236,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-14T10:19:13Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support options in `ak.merge_union_of_records`",
  "updated_at":"2023-02-14T10:19:15Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.7\n\n### Description and code to reproduce\n\nI am trying to use `pandas.eval` (`pandas == 1.5.3`) with awkward arrays.\r\n\r\nThe minimal example for this is\r\n```python\r\nimport awkward as ak\r\nimport pandas as pd\r\nexpression = \"a + b\"\r\na = ak.Array([[1, 2, 3], [5, 6]])\r\nb = ak.Array([[2, 3, 4], [6, 7]])\r\nresult = pd.eval(expression, engine=\"numexpr\")\r\nprint(result)\r\n```\r\nThe error I am getting is:\r\n```\r\n<snip>\r\n  File \"/software/miniconda/envs/fast-iris/lib/python3.10/site-packages/pandas/core/computation/ops.py\", line 166, in is_datetime\r\n    return issubclass(t, (datetime, np.datetime64))\r\nTypeError: issubclass() arg 1 must be a class\r\n```\r\nPatching the pandas code reveals that the value `t` in [is_datetime](https://github.com/pandas-dev/pandas/blob/main/pandas/core/computation/ops.py#L161) is\r\n```\r\n<property object at 0x7f5399ec4860>\r\n```\r\n\r\n\r\nReplacing awkward arrays with numpy arrays works (`t = <class 'numpy.int64'>`).\r\n \r\nNot sure of the exact chain of events, but before I dig deeper, I thought I post this in case someone has an \"of course, it's that thing\" moment ;).\r\nIf you need me to drill deeper, please let me know what you need.\r\n\r\n\r\nPS: Same issue with awkward 1.X, so I guess nobody tried `pandas.eval` with awkward arrays so far.\r\n\r\nNote: The reason I am trying to use pandas.eval over numexpr or awkward.<forgot>.evaluate is the ease of using custom functions (with all its downsides).",
  "closed_at":"2023-02-14T19:46:10Z",
  "comments":5,
  "created_at":"2023-02-14T16:59:18Z",
  "id":1584516323,
  "labels":null,
  "locked":true,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ecczj",
  "number":2237,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Computing expressions like `numexpr.evaluate` or `pandas.eval`",
  "updated_at":"2023-02-14T19:46:10Z",
  "user":"MDQ6VXNlcjEyMTMyNzY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\r\n\r\n2.0.7\r\n\r\n### Description and code to reproduce\r\n\r\nWhen attempting to concatenate more than 3 awkward arrays with different RecordTypes, the concatenation fails because it refuses to create the respective UnionType. Not sure how this relates to #2235, because essentially, I don't want the union, but an OptionType instead. \r\n\r\n```python\r\n>>> ak.concatenate(\r\n    [\r\n        ak.Array(x)\r\n        for x in [\r\n            [{\"a\": 3}],\r\n            [{\"c\": 3}],\r\n            [{\"d\": 3}],\r\n            [{\"e\": 3}]\r\n        ]\r\n    ]\r\n)\r\nTypeError: while calling\r\n\r\n    ak.concatenate(\r\n        arrays = [<Array [{a: 3}] type='1 * {a: int64}'>, <Array [{c: 3}] typ...\r\n        axis = 0\r\n        mergebool = True\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: UnionArray cannot contain union-types in its 'contents' (UnionArray); try UnionArray.simplified instead\r\n```\r\n<details>\r\n<summary>Stacktrace</summary>\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n~/tmp/ipykernel_993961/1534422542.py in <cell line: 1>()\r\n----> 1 ak.concatenate(\r\n      2     [\r\n      3         ak.Array(x)\r\n      4         for x in [\r\n      5             [{\"a\": 3}],\r\n\r\n~/anaconda3/envs/scirpy_dev/lib/python3.9/site-packages/awkward/operations/ak_concatenate.py in concatenate(arrays, axis, mergebool, highlevel, behavior)\r\n     43         },\r\n     44     ):\r\n---> 45         return _impl(arrays, axis, mergebool, highlevel, behavior)\r\n     46 \r\n     47 \r\n\r\n~/anaconda3/envs/scirpy_dev/lib/python3.9/site-packages/awkward/operations/ak_concatenate.py in _impl(arrays, axis, mergebool, highlevel, behavior)\r\n    109             else:\r\n    110                 collapsed = ak._do.mergemany(batch)\r\n--> 111                 batch = [ak._do.merge_as_union(collapsed, x)]\r\n    112 \r\n    113         out = ak._do.mergemany(batch)\r\n\r\n~/anaconda3/envs/scirpy_dev/lib/python3.9/site-packages/awkward/_do.py in merge_as_union(one, two)\r\n    307     )\r\n    308 \r\n--> 309     return ak.contents.UnionArray(tags, index, contents, parameters=None)\r\n    310 \r\n    311 \r\n\r\n~/anaconda3/envs/scirpy_dev/lib/python3.9/site-packages/awkward/contents/unionarray.py in __init__(self, tags, index, contents, parameters)\r\n     74                 )\r\n     75             if content.is_union:\r\n---> 76                 raise ak._errors.wrap_error(\r\n     77                     TypeError(\r\n     78                         \"{0} cannot contain union-types in its 'contents' ({1}); try {0}.simplified instead\".format(\r\n\r\nTypeError: while calling\r\n\r\n    ak.concatenate(\r\n        arrays = [<Array [{a: 3}] type='1 * {a: int64}'>, <Array [{c: 3}] typ...\r\n        axis = 0\r\n        mergebool = True\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: UnionArray cannot contain union-types in its 'contents' (UnionArray); try UnionArray.simplified instead\r\n```\r\n\r\n</details>\r\n\r\n\r\nWith only three elements, this works: \r\n```python\r\n>>> ak.concatenate(\r\n    [\r\n        ak.Array(x)\r\n        for x in [\r\n            [{\"a\": 3}],\r\n            [{\"c\": 3}],\r\n            [{\"d\": 3}],\r\n        ]\r\n    ]\r\n)\r\n[{a: 3},\r\n {c: 3},\r\n {d: 3}]\r\n----------------\r\ntype: 3 * union[\r\n    {\r\n        a: int64\r\n    },\r\n    {\r\n        c: int64\r\n    },\r\n    {\r\n        d: int64\r\n    }\r\n]\r\n```\r\n\r\n**Context:**\r\nI've been playing with the new awkward in AnnData Feature with real data and found this when concatenating a list of 32 AnnData objects, each of which contains a list-of-lists-of-records awkward array. \r\n\r\nCC @ivirshup",
  "closed_at":"2023-02-20T16:06:41Z",
  "comments":1,
  "created_at":"2023-02-15T10:39:38Z",
  "id":1585620808,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5egqdI",
  "number":2239,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Can't concatenate more than 3 types into Union",
  "updated_at":"2023-02-20T16:06:41Z",
  "user":"MDQ6VXNlcjcwNTE0Nzk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n- Remove untestable logic in `UnionArray._mergemany`\r\n- Fix merging of multiple layouts that can be simplified\r\n- Move mergeability check from `UnionArray.__init__` to `_validity_error`\r\n\r\n## TL\r\n\r\n`UnionArray._merge_strategy` always returns an empty sequence for `tail`. Therefore, any logic depending upon `tail` being non-empty can be removed, as it's more than just an implementation detail: unions always merge everything in one go.\r\n\r\nWe should use `simplified` to merge arrays that are not known to produce a canonical union. At present we could handle this explicitly; if the contents aren't unions and aren't mergeable, we can use `UnionArray(...)`, but in future this will become more complex if we absorb index arrays into unions as well.\r\n\r\nMergeable checks are \"slow\" as in the ideal case they must validate at every level of the tree. These should be done in the validity error checks instead.\r\n\r\nFixes #2239 ",
  "closed_at":"2023-02-20T16:06:39Z",
  "comments":3,
  "created_at":"2023-02-15T12:13:49Z",
  "draft":false,
  "id":1585754528,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KB1aw",
  "number":2240,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-20T16:06:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use `simplified` in `ak._do.merge_as_union`",
  "updated_at":"2023-02-20T16:06:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n- Fix old parameter logic in `UnionArray._reverse_merge`\r\n\r\n## TL\r\n\r\n\r\n`UnionArray._reverse_merge` used to try and reconstruct parameters from the `other` layout. Now we just let the `.simplified` logic do this. We only want to take the union parameters in specific circumstances, and  parameters of the contents should only be merged with parameters of the union when they intersect. `UnionArray.simplified` already handles ",
  "closed_at":"2023-02-15T21:01:22Z",
  "comments":1,
  "created_at":"2023-02-15T12:39:09Z",
  "draft":false,
  "id":1585789005,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KB84j",
  "number":2241,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-15T21:01:22Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't merge non-union parameters",
  "updated_at":"2023-02-15T21:01:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\n`ak.numba._register()` is not being called when Numba imports, and therefore Numba does not recognize Awkward Arrays on startup:\r\n\r\n```python\r\n>>> import awkward as ak\r\n>>> import numba as nb\r\n>>> nb.typeof(ak.Array([1, 2, 3]))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jpivarski/mambaforge/lib/python3.9/site-packages/numba/core/typing/typeof.py\", line 42, in typeof\r\n    raise ValueError(msg)\r\nValueError: Cannot determine Numba type of <class 'awkward.highlevel.Array'>\r\n```\r\n\r\nThe above should not be an error. If a user explicitly calls `ak.numba.register_and_check()` (as our tests do), then they can fix the above, but this is not how it's supposed to work: Numba is supposed to call `ak.numba._register()` when it is first imported.\r\n\r\nIn its current state, if a user tries to write a Numba-JITed function with Awkward Arrays in it, as described in our documentation, they'll get a lot of error messages saying that Awkward Arrays are unrecognized/not allowed in Numba functions, strongly suggesting that the feature does not exist.\r\n\r\nThis used to work. Did it stop working when setup.py was converted to setup.cfg or when setup.cfg was converted to pyproject.toml?\r\n\r\nUseful links:\r\n\r\n * [registering Numba extension points](https://numba.pydata.org/numba-doc/latest/extending/entrypoints.html)\r\n * [the entry point mechanism in general](https://setuptools.pypa.io/en/latest/userguide/entry_point.html#)\r\n * [all the projects on GitHub that use Numba in pyproject.toml](https://github.com/search?type=code&q=numba_extensions%20language%3ATOML)\r\n\r\nFrom the last link, it looks like we're using it correctly, but apparently not.",
  "closed_at":"2023-02-15T19:00:53Z",
  "comments":2,
  "created_at":"2023-02-15T16:43:43Z",
  "id":1586191883,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ei14L",
  "number":2242,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`awkward.numba._register` is not called",
  "updated_at":"2023-02-15T19:00:53Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nIt would be helpful if library authors could define type hierarchies so that arrays with different `__array__` parameters could safely be merged, e.g. `Momentum3D + Vector3D \u2192 Vector3D`",
  "closed_at":"2023-07-02T17:10:11Z",
  "comments":2,
  "created_at":"2023-02-15T17:57:17Z",
  "id":1586300642,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ejQbi",
  "number":2243,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Implement precedence for nominal types",
  "updated_at":"2023-07-02T17:10:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nThis should behave identically to `ak.with_field`.",
  "closed_at":"2023-05-09T13:39:28Z",
  "comments":1,
  "created_at":"2023-02-15T17:58:09Z",
  "id":1586301951,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ejQv_",
  "number":2244,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Implement `tuple[str, ...]` support for `ak.with_parameter`",
  "updated_at":"2023-05-09T13:39:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\r\n\r\nThis function should drop the union type at a given depth when the `tags` are single valued.",
  "closed_at":"2023-05-09T12:29:32Z",
  "comments":1,
  "created_at":"2023-02-15T17:59:01Z",
  "id":1586303236,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ejREE",
  "number":2245,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Add `ak.erase_union` (name TBD)",
  "updated_at":"2023-05-09T12:29:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In fixing #2214, I missed the fact that `to_ListOffsetArray64(True)` provides no guarantee about the _length_ of the content. This PR fixes that oversight, by using `ak._do.flatten` which ensures the length of the result is correct.\r\n",
  "closed_at":"2023-02-16T06:57:26Z",
  "comments":1,
  "created_at":"2023-02-15T21:21:40Z",
  "draft":false,
  "id":1586582899,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KEpoL",
  "number":2246,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-16T06:57:26Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: boolean slicing with non-packed arrays",
  "updated_at":"2023-02-16T06:57:27Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n- Slightly rework `how-to-filter-ragged.md`.\r\n- Add `how-to-filter-masked.md`.\r\n- Rename \"ragged indexing\" to \"Awkward indexing\".\r\n",
  "closed_at":"2023-02-16T15:13:44Z",
  "comments":1,
  "created_at":"2023-02-16T11:00:34Z",
  "draft":false,
  "id":1587469462,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KHncm",
  "number":2247,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-16T15:13:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: improve ragged indexing docs",
  "updated_at":"2023-02-16T15:13:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.8\n\n### Description and code to reproduce\n\nFor example:\r\n```python\r\n>>> import awkward as ak\r\n>>> ak.full_like([True], 2, dtype=int)\r\n<Array [1] type='1 * int64'>\r\n```\r\n\r\nI would expect the array to get filled with `dtype(fill_value)`, so obviously just `2` in this case. This is the behavior in NumPy:\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> np.full_like([True], 2, dtype=int)\r\narray([2])\r\n```",
  "closed_at":"2023-02-16T22:25:33Z",
  "comments":1,
  "created_at":"2023-02-16T17:36:45Z",
  "id":1588102195,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5eqIQz",
  "number":2250,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.full_like` does not fill with correct value when `dtype` is changed",
  "updated_at":"2023-02-16T22:25:33Z",
  "user":"MDQ6VXNlcjMyNzczMzA0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR directly sets `dtype` in the `nplike.full_like` call, which I think is all we need to do here.\r\n\r\nFixes #2250 ",
  "closed_at":"2023-02-16T22:25:32Z",
  "comments":4,
  "created_at":"2023-02-16T19:28:59Z",
  "draft":false,
  "id":1588247097,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KKQSN",
  "number":2251,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-16T22:25:32Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: set dtype in `full_like`",
  "updated_at":"2023-02-16T22:25:33Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Awkward-cpp: initial build: 29 seconds & 174 files\nRebuild: 9.8 seconds and 5 files\n\n",
  "closed_at":"2023-02-16T23:26:07Z",
  "comments":3,
  "created_at":"2023-02-16T22:58:35Z",
  "draft":false,
  "id":1588486583,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KLD4W",
  "number":2252,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-16T23:26:07Z"
  },
  "reactions":{
   "rocket":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"chore: use scikit-build-core 0.2's build-dir",
  "updated_at":"2023-02-20T17:42:13Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\r\n\r\nn.a.\r\n\r\n### Description and code to reproduce\r\n\r\nHi,\r\n\r\nThe current version of awkward can't be be built in my docker image. It's been a while since I last built it, but I suspect it's due to the separation of awkward and awkward cpp.\r\n\r\nBack story: I'm the maintainer of [Pandas Luminosity Fit](https://github.com/panda-luminosity-detector-group/LuminosityFit), and inside our docker image (based on debian 10 with python 3.7 installed, see the [docker file](https://github.com/panda-luminosity-detector-group/LuminosityFit/tree/master/docker)) the installation fails with the error:\r\n\r\n\r\n```python\r\nCollecting awkward-cpp==9 (from awkward->-r /tmp/requirements.txt (line 12))\r\n  Downloading https://files.pythonhosted.org/packages/5c/ed/9ea65e3121ca03b329734a45c17b4ba0cda78345f533ba43a30dc9fd4dd8/awkward-cpp-9.tar.gz (1.4MB)\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/cli/base_command.py\", line 143, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/commands/install.py\", line 338, in run\r\n    resolver.resolve(requirement_set)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/resolve.py\", line 102, in resolve\r\n    self._resolve_one(requirement_set, req)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/resolve.py\", line 256, in _resolve_one\r\n    abstract_dist = self._get_abstract_dist_for(req_to_install)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/resolve.py\", line 209, in _get_abstract_dist_for\r\n    self.require_hashes\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py\", line 298, in prepare_linked_requirement\r\n    abstract_dist.prep_for_dist(finder, self.build_isolation)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py\", line 100, in prep_for_dist\r\n    self.req.load_pyproject_toml()\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/req/req_install.py\", line 428, in load_pyproject_toml\r\n    str(self)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/pyproject.py\", line 43, in load_pyproject_toml\r\n    pp_toml = pytoml.load(f)\r\n  File \"/usr/share/python-wheels/pytoml-0.1.2-py2.py3-none-any.whl/pytoml/parser.py\", line 303, in load\r\n    filename=fin.name)\r\n  File \"/usr/share/python-wheels/pytoml-0.1.2-py2.py3-none-any.whl/pytoml/parser.py\", line 370, in loads\r\n    toks.expect('=', 'expected_equals')\r\n  File \"/usr/share/python-wheels/pytoml-0.1.2-py2.py3-none-any.whl/pytoml/parser.py\", line 250, in expect\r\n    self.error(error_text)\r\n  File \"/usr/share/python-wheels/pytoml-0.1.2-py2.py3-none-any.whl/pytoml/parser.py\", line 253, in error\r\n    raise TomlError(message, self.pos[0][0], self.pos[0][1], self._filename)\r\npytoml.core.TomlError: /tmp/pip-install-dl3m19jx/awkward-cpp/pyproject.toml(62, 6): expected_equals\r\n```\r\n\r\nI suspect the pytoml to be [this file](https://github.com/scikit-hep/awkward/blob/main/awkward-cpp/pyproject.toml) one, and in line 62 at position 6 there is a minus sign:\r\n\r\n```toml\r\nbuild-dir = \"build/{cache_tag}\"\r\n```\r\n\r\nI don't know enough about toml to say whether that minus sign is allowed in identifiers, but obviously you tested the build process, so I'm not sure why it fails for me.\r\n\r\nEDIT: on the official TOML homepage, the examples only have underscores, not minuses or dashes:\r\n\r\n```toml\r\ndata = [ [\"delta\", \"phi\"], [3.14] ]\r\ntemp_targets = { cpu = 79.5, case = 72.0 }\r\n```\r\n\r\nCan you give me a pointer how to debug this?\r\n\r\nBest wishes!  ",
  "closed_at":"2023-02-23T09:13:18Z",
  "comments":7,
  "created_at":"2023-02-17T11:02:04Z",
  "id":1589179192,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5euPM4",
  "number":2253,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Installation fails on python 3.7 due to unparsable pyproject.toml",
  "updated_at":"2023-02-24T11:05:08Z",
  "user":"MDQ6VXNlcjEzMjAxNzMx"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.0.8\n\n### Description and code to reproduce\n\nI would have expected \r\n```python\r\n>>> ak.values_astype(ak.Array([None, None]), int)\r\n```\r\n\r\nto create an array of type `2 * ?int`, however, it creates\r\n\r\n```python\r\n[None,\r\n None]\r\n------------------\r\ntype: 2 * ?unknown\r\n```\r\n\r\nI can create an empty option type like this: \r\n```python\r\n>>> ak.Array([5, None, None])[1:]\r\n[None,\r\n None]\r\n----------------\r\ntype: 2 * ?int64\r\n```",
  "closed_at":"2023-02-17T13:16:53Z",
  "comments":3,
  "created_at":"2023-02-17T11:22:50Z",
  "id":1589206708,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5euV60",
  "number":2254,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Cannot create empty option type with `values_astype`",
  "updated_at":"2023-02-17T13:29:44Z",
  "user":"MDQ6VXNlcjcwNTE0Nzk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.246 \u2192 v0.0.249](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.246...v0.0.249)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-02-21T08:46:11Z",
  "comments":1,
  "created_at":"2023-02-21T00:05:54Z",
  "draft":false,
  "id":1592582145,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KYgoI",
  "number":2255,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-21T08:46:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-02-21T08:46:13Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> I just noticed that `from_rdataframe` doesn't have `highlevel` and `behavior` arguments, though almost all of the `ak.*` operations do. As it is, this assumes `highlevel=True, behavior=None`. As possible, low-priority future work (independently of this PR), it would be nice to add these arguments.\r\n\r\n\r\n_Originally posted by @jpivarski in https://github.com/scikit-hep/awkward/pull/2234#pullrequestreview-1306048587_\r\n            ",
  "closed_at":"2023-02-22T15:40:53Z",
  "comments":0,
  "created_at":"2023-02-21T10:09:18Z",
  "id":1593192411,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5e9i_b",
  "number":2256,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"add `highlevel` and `behavior` arguments to `from_rdataframe`",
  "updated_at":"2023-02-22T15:40:53Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> As long as this explicit extension is needed, we want the name to be memorable enough that users don't need to look it up. Creating a JIT-compiled function is something one does at the start of a project or in a new Python prompt on the fly\u2014when having to look up a name would cause real friction.\r\n\r\n\r\n_Originally posted by @jpivarski in https://github.com/scikit-hep/awkward/pull/1809#discussion_r1112364851_\r\n            ",
  "closed_at":"2023-02-23T17:52:45Z",
  "comments":1,
  "created_at":"2023-02-21T10:15:06Z",
  "id":1593202057,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5e9lWJ",
  "number":2257,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"better name/way of handling cuda extension",
  "updated_at":"2023-02-23T17:52:45Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes https://github.com/scikit-hep/awkward/issues/2256",
  "closed_at":"2023-02-22T15:40:52Z",
  "comments":3,
  "created_at":"2023-02-21T10:25:40Z",
  "draft":false,
  "id":1593217819,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KaoZX",
  "number":2258,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-22T15:40:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add 'highlevel' and 'behavior' arguments to 'ak.from_rdataframe' function",
  "updated_at":"2023-02-22T15:40:53Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fix `ak.run_lengths` use with typetracer arrays",
  "closed_at":"2023-02-22T15:14:06Z",
  "comments":1,
  "created_at":"2023-02-21T15:05:30Z",
  "draft":false,
  "id":1593641646,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KcC5F",
  "number":2259,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-22T15:14:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: run-lengths with typetracer",
  "updated_at":"2023-02-22T15:14:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-03T16:04:43Z",
  "comments":8,
  "created_at":"2023-02-21T16:28:49Z",
  "draft":false,
  "id":1593771692,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Kceea",
  "number":2260,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-03T16:04:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add Numba CUDA guide (#2260)",
  "updated_at":"2023-03-08T23:46:54Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\nawkward@main\n\n### Description and code to reproduce\n\nUsing dask_awkward for convenience and context.\r\n\r\n```python3\r\nimport awkward as ak\r\nimport dask_awkward as dak\r\n\r\nx = ak.Array([[1],[2,3],[4,5,6,7]])\r\ndx = dak.from_awkward(x, 1)\r\nak.to_packed(dx._meta)\r\n```\r\n\r\nFails with:\r\n```\r\nTraceback (most recent call last):\r\n  File \"to_packed.py\", line 6, in <module>\r\n    ak.to_packed(dx._meta)\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/operations/ak_to_packed.py\", line 71, in to_packed\r\n    return _impl(array, highlevel, behavior)\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/operations/ak_to_packed.py\", line 76, in _impl\r\n    out = layout.to_packed()\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/contents/listoffsetarray.py\", line 2153, in to_packed\r\n    and content.length\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_nplikes/shape.py\", line 75, in __eq__\r\n    raise wrap_error(\r\nTypeError: while calling\r\n\r\n    ak.to_packed(\r\n        array = <Array-typetracer [...] type='## * var * int64'>\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: cannot compare unknown lengths against known values\r\n```",
  "closed_at":"2023-02-22T15:13:16Z",
  "comments":0,
  "created_at":"2023-02-21T21:12:44Z",
  "id":1594106548,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5fBCK0",
  "number":2261,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"to_packed on typetracer fails",
  "updated_at":"2023-02-22T15:13:16Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmaster branch\r\n\r\n### Description and code to reproduce\r\n\r\n`with_name` (None or str): Gives tuples and records a name that can be\r\n            used to override their behaviour\r\n\r\n```python\r\ncontents[col] = ak.from_buffers(\r\n                form,\r\n                length,\r\n                buffers,\r\n                byteorder=ak._util.native_byteorder,\r\n                highlevel=highlevel,\r\n                behavior=behavior,\r\n                # FIXME: with_name=with_name,\r\n            )\r\n```",
  "closed_at":"2023-02-22T16:51:24Z",
  "comments":4,
  "created_at":"2023-02-22T10:32:21Z",
  "id":1594856513,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5fD5RB",
  "number":2262,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.from_buffers` does not accept `with_name` argument",
  "updated_at":"2023-02-22T16:51:25Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Slowly we will find `.length == X` checks and guard them with `is unknown_length` cases.\r\n\r\nFixes #2261 ",
  "closed_at":"2023-02-22T15:13:15Z",
  "comments":1,
  "created_at":"2023-02-22T11:04:33Z",
  "draft":false,
  "id":1594902724,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KgOKL",
  "number":2263,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-22T15:13:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support unknown content length in `to_packed`",
  "updated_at":"2023-02-22T15:13:16Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes https://github.com/scikit-hep/awkward/issues/2257",
  "closed_at":"2023-02-23T17:52:43Z",
  "comments":2,
  "created_at":"2023-02-22T16:00:35Z",
  "draft":false,
  "id":1595368206,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Khxzy",
  "number":2264,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-23T17:52:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"test: numba cuda tests",
  "updated_at":"2023-02-23T17:52:45Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\n\nI'm trying to use `dask-awkward` and `vector` to do vector addition. It works fine for Cartesian coordinates but not spherical:\r\n\r\n```python\r\n>>> import awkward as ak, dask_awkward as dak, vector\r\n>>> vector.register_awkward()\r\n>>> a = ak.Array([1.0])\r\n>>> da = dak.from_awkward(a, 1)\r\n>>> dv1 = dak.with_name(dak.zip({'x': da, 'y': da, 'z': da}), 'Vector3D')\r\n>>> (dv1 + dv1).compute()\r\n<VectorArray3D [{x: 2, y: 2, z: 2}] type='1 * Vector3D[x: float64, y: float...'>\r\n>>> dv2 = dak.with_name(dak.zip({'rho': da, 'phi': da, 'theta': da}), 'Vector3D')\r\n>>> (dv2 + dv2).compute()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/numpy/lib/mixins.py\", line 21, in func\r\n    return ufunc(self, other)\r\n  File \"/home/user/iris-hep/src/dask-awkward/src/dask_awkward/lib/core.py\", line 1027, in __array_ufunc__\r\n    new_meta = ufunc(*inputs_meta)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/highlevel.py\", line 1373, in __array_ufunc__\r\n    return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_connect/numpy.py\", line 291, in array_ufunc\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_broadcasting.py\", line 1063, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_broadcasting.py\", line 1042, in apply_step\r\n    return continuation()\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_broadcasting.py\", line 759, in continuation\r\n    outcontent = apply_step(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_broadcasting.py\", line 1028, in apply_step\r\n    result = action(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_connect/numpy.py\", line 193, in action\r\n    return _array_ufunc_adjust(custom, inputs, kwargs, behavior)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_connect/numpy.py\", line 130, in _array_ufunc_adjust\r\n    out = custom(*args, **kwargs)\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/vector/backends/awkward.py\", line 1514, in <lambda>\r\n    behavior[numpy.add, left, right] = lambda v1, v2: v1.add(v2)\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/vector/_methods.py\", line 2068, in add\r\n    return module.add.dispatch(self, other)\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/vector/_compute/spatial/add.py\", line 593, in dispatch\r\n    function(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/vector/_compute/spatial/add.py\", line 310, in rhophi_theta_rhophi_theta\r\n    z1 = z.rhophi_theta(lib, rho1, phi1, theta1)\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/vector/_compute/spatial/z.py\", line 52, in rhophi_theta\r\n    return lib.nan_to_num(rho / lib.tan(theta), nan=0.0, posinf=inf, neginf=-inf)\r\n  File \"<__array_function__ internals>\", line 200, in nan_to_num\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/highlevel.py\", line 1392, in __array_function__\r\n    return ak._connect.numpy.array_function(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_connect/numpy.py\", line 75, in array_function\r\n    return function(*args, **kwargs)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_connect/numpy.py\", line 96, in ensure_valid_args\r\n    return function(*args, **kwargs)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/operations/ak_nan_to_num.py\", line 136, in _nep_18_impl\r\n    return nan_to_num(x, copy=copy, nan=nan, posinf=posinf, neginf=neginf)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/operations/ak_nan_to_num.py\", line 51, in nan_to_num\r\n    return _impl(array, copy, nan, posinf, neginf, highlevel, behavior)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/operations/ak_nan_to_num.py\", line 95, in _impl\r\n    out = ak._do.recursively_apply(layout, action, behavior)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_do.py\", line 34, in recursively_apply\r\n    return layout._recursively_apply(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/numpyarray.py\", line 1301, in _recursively_apply\r\n    result = action(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/operations/ak_nan_to_num.py\", line 85, in action\r\n    nplike.nan_to_num(\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_nplikes/typetracer.py\", line 1190, in nan_to_num\r\n    raise ak._errors.wrap_error(NotImplementedError)\r\nNotImplementedError:\r\n\r\nSee if this has been reported at https://github.com/scikit-hep/awkward-1.0/issues\r\n```",
  "closed_at":"2023-02-23T16:11:05Z",
  "comments":0,
  "created_at":"2023-02-22T18:27:43Z",
  "id":1595597228,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5fGuGs",
  "number":2265,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`NotImplementedError` from `TypeTracerArray.nan_to_num`",
  "updated_at":"2023-02-23T16:11:05Z",
  "user":"MDQ6VXNlcjMyNzczMzA0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2265 \r\n\r\nNo tests, as they would be as short as the code is. In the long run we should probably evolve our test suite to cover all backends, but for now we are writing per-backend tests.",
  "closed_at":"2023-02-23T16:11:03Z",
  "comments":1,
  "created_at":"2023-02-23T09:09:22Z",
  "draft":false,
  "id":1596478062,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KlhB5",
  "number":2266,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-23T16:11:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add trivial `nan_to_num` impl to typetracer",
  "updated_at":"2023-03-04T13:58:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This implementation of `ak.broadcast_fields` is just a starting point for discussion. It creates union-types for missing fields, though it does not descend through unions or attempt to coerce any other types.\r\n\r\nFixes #2211 through the new `ak.broadcast_fields` function, which can be used in conjunction with `ak.concatenate`",
  "closed_at":"2023-02-27T18:32:57Z",
  "comments":3,
  "created_at":"2023-02-23T13:32:12Z",
  "draft":false,
  "id":1596879072,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Km5K3",
  "number":2267,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-27T18:32:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.broadcast_fields`",
  "updated_at":"2023-03-04T13:57:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Some updates for a better experience and more checks.\r\n\r\nThere are several more that would be nice to activate:\r\n\r\n* NPY: I've had to disable one of the checks here for deprecated usage of np.random\r\n* PD: We aren't using Pandas in an idiomatic way, it seems (or it might just be false positives - Ruff may add a nice way to select just a subset of files soon)\r\n* SIM: Some nice simplifications, but needs to be it's own PR\r\n* PT: Some nice pytest simplifications (though not every rule is good), needs to be it's own PR\r\n* RET: Best in it's own PR, removes unused returns\r\n",
  "closed_at":"2023-02-28T22:52:31Z",
  "comments":8,
  "created_at":"2023-02-23T17:24:11Z",
  "draft":false,
  "id":1597252433,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5KoJ3c",
  "number":2268,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-28T22:52:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: Ruff updates from dev guidelines (#2268)Co-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com> Co-authored-by: Jim Pivarski <jpivarski@users.noreply.github.com>",
  "updated_at":"2023-02-28T22:52:32Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-02T20:43:16Z",
  "comments":8,
  "created_at":"2023-02-27T14:42:59Z",
  "draft":false,
  "id":1601326129,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5K1usF",
  "number":2269,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-02T20:43:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: RDataFrame add multi-threaded example",
  "updated_at":"2023-03-02T20:43:17Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"At some point we should try and catch more automatically, but for now it's just a case of checking the docs build output.",
  "closed_at":"2023-02-27T16:10:37Z",
  "comments":0,
  "created_at":"2023-02-27T15:39:46Z",
  "draft":false,
  "id":1601433145,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5K2FuI",
  "number":2270,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-27T16:10:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add missing entries to toctree",
  "updated_at":"2023-02-27T16:10:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #1702\r\n\r\nThis PR adds third-party tests to our CI, to improve visibility over downstream usages. We expect that these tests will fail, for now, because we don't implement everything required for a 100% typetracer workflow. In time, the number of test failures should decrease.",
  "closed_at":"2023-12-19T21:42:31Z",
  "comments":3,
  "created_at":"2023-02-27T22:27:38Z",
  "draft":false,
  "id":1602051319,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5K4Kdd",
  "number":2271,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: test coffea & dask",
  "updated_at":"2024-02-01T19:24:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.249 \u2192 v0.0.253](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.249...v0.0.253)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-02-28T20:37:46Z",
  "comments":1,
  "created_at":"2023-02-28T00:20:29Z",
  "draft":false,
  "id":1602162990,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5K4iIg",
  "number":2272,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-28T20:37:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-02-28T20:37:47Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"              Is pydata_sphinx_theme broken, perhaps? It had a 0.13 release 12 hours ago.\r\n\r\n_Originally posted by @henryiii in https://github.com/scikit-hep/awkward/issues/2268#issuecomment-1448934363_\r\n\r\nFor example, https://github.com/scikit-hep/awkward/actions/runs/4297198800/jobs/7489883737\r\n\r\nThis open issue, https://github.com/pydata/pydata-sphinx-theme/issues/1149, has the same error message and they say\r\n\r\n> I think it ought to be possible to run our basic dev commands (test, docs, docs-live) in the dev environment we recommend contributors to use\r\n\r\nwhich sounds like something we do.",
  "closed_at":"2023-02-28T23:13:04Z",
  "comments":0,
  "created_at":"2023-02-28T21:48:24Z",
  "id":1603867358,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5fmRLe",
  "number":2273,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Tests are failing in \"Build Docs\", possibly due to new Sphinx theme",
  "updated_at":"2023-02-28T23:13:04Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2273 ",
  "closed_at":"2023-02-28T23:13:03Z",
  "comments":0,
  "created_at":"2023-02-28T22:51:39Z",
  "draft":false,
  "id":1603936679,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5K-h_1",
  "number":2274,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-02-28T23:13:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix build for latest theme",
  "updated_at":"2023-02-28T23:13:04Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n1.10.2\n\n### Description and code to reproduce\n\nWhen using iterators for a RecordArray multiple times, we see apparently unbounded growth of the RSS of our code, which eventually causes them to be killed by the OOM-killer. Not entirely sure if this is coming from uproot or awkward, but the fact that it depends on the way the RecordArray is accessed suggests that it's an awkward issue.\r\n\r\nTo reproduce:\r\n\r\n```\r\nimport uproot\r\nimport psutil, gc\r\n\r\nFILE='data_ceph/larlumi/root/run_00358031.root'\r\n\r\ndef itr(tree):\r\n    records=tree.arrays(['PosInTrain','EventNumber'])\r\n    records['PosInTrain']*records['EventNumber']\r\n    \r\ndef itr2(tree):\r\n    records=tree.arrays(['PosInTrain','EventNumber'])\r\n    for q in records:\r\n        pass\r\n\r\np = psutil.Process()\r\nprint('Array-at-a-time operations')\r\nfor j in range(10):\r\n    print(p.memory_full_info().rss)\r\n    with uproot.open(FILE) as f:\r\n        t=f['myTree']\r\n        itr(t)\r\n    gc.collect()\r\nprint(p.memory_full_info().rss)\r\n\r\nprint()\r\nprint('Iteration')\r\nfor j in range(10):\r\n    print(p.memory_full_info().rss)\r\n    with uproot.open(FILE) as f:\r\n        t=f['myTree']\r\n        itr2(t)\r\n    gc.collect()\r\nprint(p.memory_full_info().rss)\r\n```\r\n\r\nThe test file can be obtained from root://utatlas.its.utexas.edu//data_ceph/onyisi/larlumi/root/run_00358031.root . The first set of iterations (\"Array-at-a-time\") will increase and level out RSS use, while \"Iteration\" will grow on each loop by a similar amount. Explicitly switching off the caches in uproot.open() doesn't affect this.\r\n\r\nThe issue appears in awkward 1.10.2 / uproot 4.3.7. I can confirm that it seems to be fixed in awkward 2.0.8 / uproot 5.0.3 ; however the coffea dependencies mean we can't upgrade to this version at this time.\r\n\r\n(And yes we do have reasons why we can't use the array-at-a-time operations ... and numba makes them pretty fast anyway ...)",
  "closed_at":"2023-03-14T15:30:17Z",
  "comments":3,
  "created_at":"2023-03-01T01:24:58Z",
  "id":1604063792,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5fnBIw",
  "number":2275,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Unbounded memory use when iterating over RecordArray",
  "updated_at":"2023-03-14T15:30:17Z",
  "user":"MDQ6VXNlcjQxNzcxMDE="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-01T17:27:07Z",
  "comments":1,
  "created_at":"2023-03-01T07:07:21Z",
  "draft":false,
  "id":1604377120,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LAAkm",
  "number":2276,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-01T17:27:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: keep column order in all tests",
  "updated_at":"2023-03-01T17:27:08Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fix: https://github.com/conda-forge/awkward-cpp-feedstock/issues/13",
  "closed_at":"2023-03-04T20:53:41Z",
  "comments":2,
  "created_at":"2023-03-01T08:31:34Z",
  "draft":false,
  "id":1604508794,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LAdYS",
  "number":2277,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: update location of headers",
  "updated_at":"2023-03-16T13:33:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This is fairly self explanatory!",
  "closed_at":"2023-03-06T19:04:10Z",
  "comments":0,
  "created_at":"2023-03-01T23:11:49Z",
  "draft":false,
  "id":1605828087,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LE8wc",
  "number":2279,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-06T19:04:09Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix URI to header-only LayoutBuilder examples",
  "updated_at":"2023-03-06T19:04:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds a CMake target to the header-only libraries so that third-party consumers can directly use `add_subdirectory` or `FetchContent`. This should improve the UX of consuming the header-only API, by ensuing that both the include path _and_ the compile flags are appropriately set.\r\n\r\nThe motivation for bundling the headers separately from the `awkward`/`awkward-cpp` packages is that they don't themselves require a Python interpreter to be useful. Therefore, we want to find a distribution solution that avoids that requirement. @jpivarski and I discussed this, and settled on the default workflow being the use of a CMake helper. I suggested `ExternalProject`, but, upon using it I remembered that it runs at build-time, rather than configure time. `FetchContent` is a configure-time analogue, which plays more nicely with modern CMake practices.\r\n\r\nSee [the preview](http://preview.awkward-array.org.s3-website.us-east-1.amazonaws.com/agoose77/fix-bundle-headers/user-guide/how-to-use-header-only-layoutbuilder.html#how-to-use-layout-builders) for the user guide which describes this new target. The guide provides a CMake snippet that loads the headers for a given version from the published artefact. This will only work with the _next_ Python release, i.e. 2.1.0.\r\n\r\n```cmake\r\ninclude(FetchContent)\r\n\r\nset(AWKWARD_VERSION \"v2.1.0\")\r\n\r\nFetchContent_Declare(\r\n  awkward-headers\r\n  URL      https://github.com/scikit-hep/awkward/releases/download/${AWKWARD_VERSION}/header-only.zip\r\n)\r\nFetchContent_MakeAvailable(awkward-headers)\r\n```\r\n\r\nIt's possible to add the header-only targets to a CMake application using Git instead of a release artefact. I think the artefact-based solution is better, though, because it doesn't introduce a dependency upon the header locations in our repo (in case people start depending upon this in their own build scripts).\r\n\r\nAdditionally, this PR adds a note to the user-guide on how to return the C++-allocated arrays to Python using capsules.",
  "closed_at":"2023-03-06T19:46:16Z",
  "comments":7,
  "created_at":"2023-03-03T17:56:52Z",
  "draft":false,
  "id":1609043965,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LP1ip",
  "number":2280,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-06T19:46:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: make `header-only` libraries a CMake project",
  "updated_at":"2023-03-06T19:50:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR bumps the minimum NumPy version to 1.17.0, in line with #2143 \r\n\r\n@jpivarski can you remind me why we settled on 1.17 instead of aligning with [NEP 29](https://numpy.org/neps/nep-0029-deprecation_policy.html)? I know we made this decision, but can't recall why.",
  "closed_at":"2023-03-07T19:21:44Z",
  "comments":2,
  "created_at":"2023-03-04T20:53:00Z",
  "draft":false,
  "id":1609942448,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LSwau",
  "number":2282,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-07T19:21:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: bump NumPy version",
  "updated_at":"2023-03-07T19:21:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n- Adds `cumsum` to `TypeTracer`\r\n- Removes `to_rectilinear` from nplikes, replaces with `layout.to_backend_array`",
  "closed_at":"2023-03-06T19:55:36Z",
  "comments":2,
  "created_at":"2023-03-06T17:48:54Z",
  "draft":false,
  "id":1611927219,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LZUin",
  "number":2283,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-06T19:55:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: apply subset of fixes for downstream dask usage",
  "updated_at":"2023-03-06T19:55:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Long-term, we want to take advantage of L2 being developer-focused to simplify the API signatures. This PR ensures that L1 checks that `axis` is `None` or int-like. \r\n\r\nIn general, we don't need to validate every argument at L1 - some are validated in L2. But anywhere that we expect L2 to be stricter than L1, we should do this.\r\n\r\n",
  "closed_at":"2023-03-08T22:54:03Z",
  "comments":1,
  "created_at":"2023-03-06T22:56:31Z",
  "draft":false,
  "id":1612357301,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LaxM9",
  "number":2285,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-08T22:54:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: validate `axis` in L1",
  "updated_at":"2023-03-08T22:54:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.253 \u2192 v0.0.254](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.253...v0.0.254)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-03-07T07:59:45Z",
  "comments":0,
  "created_at":"2023-03-07T00:45:57Z",
  "draft":false,
  "id":1612480265,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LbL3N",
  "number":2286,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-07T07:59:45Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks (#2286)Co-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>",
  "updated_at":"2023-03-07T07:59:46Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This is the second attempt (same error message as the first):\r\n\r\nhttps://github.com/scikit-hep/awkward/actions/runs/4347431689/jobs/7600223445\r\n\r\n```\r\n2023-03-07T02:24:16.0604585Z ##[group]Run actions/download-artifact@v3\r\n2023-03-07T02:24:16.0604847Z with:\r\n2023-03-07T02:24:16.0605344Z   name: artifact\r\n2023-03-07T02:24:16.0605562Z   path: dist\r\n2023-03-07T02:24:16.0605758Z ##[endgroup]\r\n2023-03-07T02:24:16.2412447Z Starting download for artifact\r\n2023-03-07T02:24:16.4047203Z Directory structure has been setup for the artifact\r\n2023-03-07T02:24:16.4047892Z Total number of files that will be downloaded: 44\r\n2023-03-07T02:24:17.4041320Z Total file count: 44 ---- Processed file #5 (11.3%)\r\n2023-03-07T02:24:18.4047015Z Total file count: 44 ---- Processed file #12 (27.2%)\r\n2023-03-07T02:24:19.4040485Z Total file count: 44 ---- Processed file #20 (45.4%)\r\n2023-03-07T02:24:20.4041492Z Total file count: 44 ---- Processed file #25 (56.8%)\r\n2023-03-07T02:24:21.4039317Z Total file count: 44 ---- Processed file #32 (72.7%)\r\n2023-03-07T02:24:22.4045205Z Total file count: 44 ---- Processed file #39 (88.6%)\r\n2023-03-07T02:24:22.6894904Z ##### Begin Diagnostic HTTP information #####\r\n2023-03-07T02:24:22.6895672Z Status Code: 404\r\n2023-03-07T02:24:22.6896571Z Status Message: Not Found\r\n2023-03-07T02:24:22.6896978Z Header Information: {\r\n2023-03-07T02:24:22.6897674Z   \"cache-control\": \"no-store,no-cache\",\r\n2023-03-07T02:24:22.6898219Z   \"pragma\": \"no-cache\",\r\n2023-03-07T02:24:22.6898657Z   \"content-length\": \"348\",\r\n2023-03-07T02:24:22.6899160Z   \"content-type\": \"application/json; charset=utf-8\",\r\n2023-03-07T02:24:22.6899665Z   \"strict-transport-security\": \"max-age=2592000\",\r\n2023-03-07T02:24:22.6900175Z   \"x-tfs-processid\": \"e04abe0e-bc76-409c-8fd4-0e441afc71d2\",\r\n2023-03-07T02:24:22.6900647Z   \"activityid\": \"a1979a22-90f2-47d9-aa4b-67ce740837f1\",\r\n2023-03-07T02:24:22.6901103Z   \"x-tfs-session\": \"a1979a22-90f2-47d9-aa4b-67ce740837f1\",\r\n2023-03-07T02:24:22.6901573Z   \"x-vss-e2eid\": \"a1979a22-90f2-47d9-aa4b-67ce740837f1\",\r\n2023-03-07T02:24:22.6902078Z   \"x-vss-senderdeploymentid\": \"1139089e-89fd-ce7a-6851-1ac6328a300e\",\r\n2023-03-07T02:24:22.6902521Z   \"x-frame-options\": \"SAMEORIGIN\",\r\n2023-03-07T02:24:22.6902897Z   \"x-cache\": \"CONFIG_NOCACHE\",\r\n2023-03-07T02:24:22.6903451Z   \"x-msedge-ref\": \"Ref A: 32EF94E425244F12A0B4D84FDDE83F94 Ref B: DM2EDGE0907 Ref C: 2023-03-07T02:24:22Z\",\r\n2023-03-07T02:24:22.6903869Z   \"date\": \"Tue, 07 Mar 2023 02:24:21 GMT\"\r\n2023-03-07T02:24:22.6904162Z }\r\n2023-03-07T02:24:22.6904474Z ###### End Diagnostic HTTP information ######\r\n2023-03-07T02:24:22.6937755Z ##[error]Unable to download the artifact: Error: Unexpected http 404 during download for https://pipelines.actions.githubusercontent.com/ErlVSyz7hapZD5oDnavYEewPSZubvgO3c79oCbrFWfDzi2sAj4/_apis/resources/Containers/21368366?itemPath=artifact%2Fawkward_cpp-11-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\r\n2023-03-07T02:25:31.8277360Z Cleaning up orphan processes\r\n```",
  "closed_at":"2023-03-07T13:47:40Z",
  "comments":1,
  "created_at":"2023-03-07T02:27:06Z",
  "id":1612591966,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5gHjNe",
  "number":2287,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"awkward-cpp deployment is failing in the upload_all stage",
  "updated_at":"2023-03-07T13:47:40Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds some examples to the header-only subdirectory to demonstrate usage.\r\n\r\n- [x] Update `copy-cpp-headers` to avoid copying examples into `awkward-cpp` / `_connect`\r\n- [x] Implement Cython example\r\n- [x] Implement pybind11 example\r\n\r\nAnyone is welcome to join in on this PR \u2014 I'll make a note of what I'm doing in the description. Assign yourself if you're working on it.",
  "closed_at":"2023-03-08T23:16:56Z",
  "comments":5,
  "created_at":"2023-03-07T09:29:03Z",
  "draft":false,
  "id":1613048294,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LdETH",
  "number":2288,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-08T23:16:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add examples to header-only module",
  "updated_at":"2023-03-08T23:18:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [aws-actions/configure-aws-credentials](https://github.com/aws-actions/configure-aws-credentials) from 1 to 2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aws-actions/configure-aws-credentials/releases\">aws-actions/configure-aws-credentials's releases</a>.</em></p>\n<blockquote>\n<h2>v2</h2>\n<p>This tag tracks the latest v2.x.x release.</p>\n<h2>v2.0.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v2.0.0/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.7.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.6.1</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.6.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.11</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.10</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.9</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.8</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.7</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.6</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.5</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.4</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.3</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.2</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.1</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v1.5.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/HEAD/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/main/CHANGELOG.md\">aws-actions/configure-aws-credentials's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.7.0...v2.0.0\">2.0.0</a> (2023-03-06)</h2>\n<h3>Features</h3>\n<ul>\n<li>Version bump to use Node 16 by default.</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.6.1...v1.7.0\">1.7.0</a> (2022-08-03)</h2>\n<h3>Features</h3>\n<ul>\n<li>Allow audience to be explicitly specified (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/2f8dfd0ed43d880f85b57f0c8727b497af2037de\">2f8dfd0</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/e1e17a757e536f70e52b5a12b2e8d1d1c60e04ef\"><code>e1e17a7</code></a> Version 2 release (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/685\">#685</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/bab55d3830fe69833c9fecaa51fe2c829a7508f3\"><code>bab55d3</code></a> chore: Bump axios from 1.3.3 to 1.3.4 (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/679\">#679</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/07b737a14fc628c3cb8b99a172b150fdea376d25\"><code>07b737a</code></a> chore: Update dist</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/26e4efa71fbc395226c359bd3f2d5fdd38d9af85\"><code>26e4efa</code></a> chore: Bump aws-sdk from 2.1320.0 to 2.1324.0 (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/677\">#677</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/7e0ecf0346f0dff6db9c0bfc56f459e938888730\"><code>7e0ecf0</code></a> chore: Bump eslint from 8.34.0 to 8.35.0 (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/675\">#675</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/567d4149d67f15f52b09796bea6573fc32952783\"><code>567d414</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/563\">#563</a> from russau/docs/readme-role-update</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/32eb1b4a6692b0a851328355719189b79118a174\"><code>32eb1b4</code></a> feat: document mask-aws-account-id input (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/606\">#606</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/6ca257764313f33f44efb3df7a3e27b3e67f35c7\"><code>6ca2577</code></a> chore: Update dist</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/f1de0761358f06cb7dd99ed4830a5a20cb1b00e5\"><code>f1de076</code></a> chore: Bump aws-sdk from 2.1273.0 to 2.1320.0 (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/666\">#666</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/077fd1fc8f6f9674559d1d11e69e78d182cb5b9f\"><code>077fd1f</code></a> chore: Bump jest from 29.4.2 to 29.4.3 (<a href=\"https://github-redirect.dependabot.com/aws-actions/configure-aws-credentials/issues/663\">#663</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1...v2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aws-actions/configure-aws-credentials&package-manager=github_actions&previous-version=1&new-version=2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-03-16T13:34:44Z",
  "comments":1,
  "created_at":"2023-03-07T18:00:01Z",
  "draft":false,
  "id":1613949727,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LgJ4s",
  "number":2290,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-16T13:34:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump aws-actions/configure-aws-credentials from 1 to 2",
  "updated_at":"2023-03-16T13:34:45Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes assumptions of length and known values that dask-awkward's test-suite fails.",
  "closed_at":"2023-03-09T00:20:52Z",
  "comments":2,
  "created_at":"2023-03-08T21:58:20Z",
  "draft":false,
  "id":1616005643,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LnAuM",
  "number":2293,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T00:20:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support typetracer in `ak.unflatten`",
  "updated_at":"2023-03-09T00:20:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This small PR fixes the assumption in `TypeTracerArray.view` that an array's shape always contains at least one element.",
  "closed_at":"2023-03-09T14:34:57Z",
  "comments":1,
  "created_at":"2023-03-09T14:09:23Z",
  "draft":false,
  "id":1617332741,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LrlgA",
  "number":2294,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T14:34:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: view for unknown scalar",
  "updated_at":"2023-03-09T14:34:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"@jpivarski this is a tiny PR that follows #2329. This was open first, and I thought it would be longer than it has transpired to be.",
  "closed_at":"2023-03-21T15:57:30Z",
  "comments":1,
  "created_at":"2023-03-09T15:10:47Z",
  "draft":false,
  "id":1617440752,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Lr9De",
  "number":2295,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-21T15:57:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `ak.cartesian` for typetracer",
  "updated_at":"2023-03-21T15:57:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nIt's currently possible to create \"invalid\" `RecordArrays` that contain duplicate fields. We should check this.",
  "closed_at":"2023-05-10T08:51:28Z",
  "comments":0,
  "created_at":"2023-03-09T16:01:59Z",
  "id":1617531360,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5gaZHg",
  "number":2296,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Add uniqueness of `fields` to `_validity_error`",
  "updated_at":"2023-05-10T08:51:28Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Similarly to #2175, we want to coerce arguments of functions that accept multiple arrays to the same backend. This should only succeed if the coercion is zero copy, i.e. typetracer + backend, or backend + backend.",
  "closed_at":"2023-03-09T22:46:07Z",
  "comments":2,
  "created_at":"2023-03-09T20:26:48Z",
  "draft":false,
  "id":1617948584,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ltr5v",
  "number":2297,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T22:46:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: common backend in functions accepting multiple arrays",
  "updated_at":"2023-03-09T22:46:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds a Gitter badge to the documentation header:\r\n![image](https://user-images.githubusercontent.com/1248413/224164822-a5eadf01-e724-4872-ac71-b288973bddd4.png)\r\n\r\n",
  "closed_at":"2023-03-09T22:50:35Z",
  "comments":0,
  "created_at":"2023-03-09T21:32:00Z",
  "draft":false,
  "id":1618023467,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Lt7_u",
  "number":2298,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T22:50:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add Gitter badge",
  "updated_at":"2023-03-09T22:50:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR enables 2.1 in the documentation version switcher. We have to do this manually, and I forgot!",
  "closed_at":"2023-03-09T22:49:27Z",
  "comments":0,
  "created_at":"2023-03-09T21:45:18Z",
  "draft":false,
  "id":1618036742,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Lt-2W",
  "number":2299,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T22:49:27Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: update version switcher (#2299)Co-authored-by: Jim Pivarski <jpivarski@users.noreply.github.com>",
  "updated_at":"2023-03-09T22:49:28Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"These steps are things that are easy to forget, so they've been added to the contributing guide!",
  "closed_at":"2023-03-09T22:50:52Z",
  "comments":0,
  "created_at":"2023-03-09T21:48:02Z",
  "draft":false,
  "id":1618039461,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Lt_cP",
  "number":2300,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T22:50:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add deployment notes to contributing guide",
  "updated_at":"2023-03-09T22:50:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The [2.1 docs deployment](https://github.com/scikit-hep/awkward/actions/runs/4359154751/jobs/7620722224) pushed the docs to the `/doc/v2.1/` subdirectory instead of `/doc/2.1/`. This PR fixes the version parsing logic to correct this for future major/minor releases.",
  "closed_at":"2023-03-09T22:51:30Z",
  "comments":1,
  "created_at":"2023-03-09T21:50:51Z",
  "draft":false,
  "id":1618041961,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Lt_-k",
  "number":2301,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-09T22:51:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: fix parsing of docs version",
  "updated_at":"2023-03-09T22:51:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\n\nTrying to slice an Awkward Array in too many dimensions raises a helpful error:\r\n\r\n```python\r\n>>> import awkward as ak, dask_awkward as dak\r\n>>> a = ak.Array([1])\r\n>>> a[:, 0]\r\nTraceback (most recent call last):\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/numpyarray.py\", line 346, in _getitem_next\r\n    out = self._data[where]\r\nIndexError: too many indices for array: array is 1-dimensional, but 2 were indexed\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/highlevel.py\", line 951, in __getitem__\r\n    out = self._layout[where]\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/content.py\", line 548, in __getitem__\r\n    return self._getitem(where)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/content.py\", line 589, in _getitem\r\n    out = next._getitem_next(nextwhere[0], nextwhere[1:], None)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/regulararray.py\", line 521, in _getitem_next\r\n    nextcontent._getitem_next(nexthead, nexttail, advanced),\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/numpyarray.py\", line 348, in _getitem_next\r\n    raise ak._errors.index_error(self, (head, *tail), str(err)) from err\r\nIndexError: while attempting to slice\r\n\r\n    <Array [1] type='1 * int64'>\r\n\r\nwith\r\n\r\n    (:, 0)\r\n\r\nat inner NumpyArray of length 1, using sub-slice (0).\r\n\r\nError details: too many indices for array: array is 1-dimensional, but 2 were indexed.\r\n```\r\n\r\nWhereas for `dask-awkward` arrays, you get this much less friendly uncaught `StopIteration`, coming from `typetracer`:\r\n\r\n```python\r\n>>> da = dak.from_awkward(a, 1)\r\n>>> da[:, 0]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/iris-hep/src/dask-awkward/src/dask_awkward/lib/core.py\", line 920, in __getitem__\r\n    return self._getitem_tuple(where)\r\n  File \"/home/user/iris-hep/src/dask-awkward/src/dask_awkward/lib/core.py\", line 847, in _getitem_tuple\r\n    return self._getitem_trivial_map_partitions(where)\r\n  File \"/home/user/iris-hep/src/dask-awkward/src/dask_awkward/lib/core.py\", line 722, in _getitem_trivial_map_partitions\r\n    meta = self._meta[metad]\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/highlevel.py\", line 951, in __getitem__\r\n    out = self._layout[where]\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/content.py\", line 548, in __getitem__\r\n    return self._getitem(where)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/content.py\", line 589, in _getitem\r\n    out = next._getitem_next(nextwhere[0], nextwhere[1:], None)\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/regulararray.py\", line 521, in _getitem_next\r\n    nextcontent._getitem_next(nexthead, nexttail, advanced),\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/contents/numpyarray.py\", line 346, in _getitem_next\r\n    out = self._data[where]\r\n  File \"/home/user/iris-hep/src/awkward-1.0/src/awkward/_nplikes/typetracer.py\", line 456, in __getitem__\r\n    dimension_length = next(iter_shape)\r\nStopIteration\r\n```\r\n\r\nIdeally, this case should produce a message similar to the first example.",
  "closed_at":"2023-03-10T16:37:01Z",
  "comments":3,
  "created_at":"2023-03-10T00:20:56Z",
  "id":1618172096,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5gc1jA",
  "number":2302,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Slicing `dask-awkward` array in too many dimensions raises `StopIteration`",
  "updated_at":"2023-03-10T16:37:01Z",
  "user":"MDQ6VXNlcjMyNzczMzA0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nWe can pass, for example, an Awkward Array and a NumPy array to `np.array_equal` (without having an explicit implementation of `ak.array_equal`) because we're overloading it with NEP-18 (`__array_function__`).\r\n\r\n```python\r\n>>> np.array_equal(ak.Array(np.arange(10, dtype=\"<u4\")), np.arange(10, dtype=\"<u4\"))\r\nTrue\r\n```\r\n\r\nThis function is supposed to be insensitive to the dtypes of its arguments.\r\n\r\n```python\r\n>>> np.array_equal(ak.Array(np.arange(10, dtype=\"<u4\")), np.arange(10, dtype=\"<f4\"))\r\nTrue\r\n```\r\n\r\nIncluding endianness.\r\n\r\n```\r\n>>> np.array_equal(np.arange(10, dtype=\"<u4\"), np.arange(10, dtype=\">u4\"))\r\nTrue\r\n```\r\n\r\nBut this fails:\r\n\r\n```python\r\n>>> np.array_equal(ak.Array(np.arange(10, dtype=\"<u4\")), np.arange(10, dtype=\">u4\"))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"<__array_function__ internals>\", line 180, in array_equal\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1392, in __array_function__\r\n    return ak._connect.numpy.array_function(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 73, in array_function\r\n    return _array_function_no_impl(func, types, args, kwargs, behavior)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 59, in _array_function_no_impl\r\n    rectilinear_args = tuple(_to_rectilinear(x) for x in args)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 59, in <genexpr>\r\n    rectilinear_args = tuple(_to_rectilinear(x) for x in args)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 42, in _to_rectilinear\r\n    return ak.operations.to_numpy(arg)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_to_numpy.py\", line 41, in to_numpy\r\n    return _impl(array, allow_missing)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_to_numpy.py\", line 48, in _impl\r\n    layout = ak.to_layout(array, allow_record=False)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_to_layout.py\", line 51, in to_layout\r\n    return _impl(array, allow_record, allow_other, regulararray=regulararray)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_to_layout.py\", line 84, in _impl\r\n    return ak.operations.from_numpy(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_from_numpy.py\", line 50, in from_numpy\r\n    return ak._util.from_arraylib(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_util.py\", line 709, in from_arraylib\r\n    layout = recurse(array, mask)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_util.py\", line 667, in recurse\r\n    data = ak.contents.NumpyArray(array)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/contents/numpyarray.py\", line 95, in __init__\r\n    ak.types.numpytype.dtype_to_primitive(self._data.dtype)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/types/numpytype.py\", line 49, in dtype_to_primitive\r\n    raise ak._errors.wrap_error(\r\nTypeError: while calling\r\n\r\n    ak.to_numpy(\r\n        array = numpy.ndarray([0 1 2 ... 7 8 9])\r\n        allow_missing = True\r\n    )\r\n\r\nError details: unsupported dtype: dtype('>u4'). Must be one of\r\n\r\n    bool, int8, uint8, int16, uint16, int32, uint32, int64, uint64, float32, float64, complex64, complex128, datetime64, timedelta64, float16, float128, complex256\r\n\r\nor a datetime64/timedelta64 with units (e.g. 'datetime64[15us]')\r\n```\r\n\r\nbecause somewhere in the implementation of `ak.Array.__array_function__`, we try to convert the non-native endian NumPy array into an Awkward Array, and we don't support that.\r\n\r\nThe implementation will have to become insensitive to this, possibly by ensuring that all non-Awkward arguments in `__array_function__` are converted to native endian, or maybe by taking a new policy that non-native endian NumPy arrays are copy-converted to native endian in `to_layout` and/or `from_numpy`. That would introduce a hidden cost for non-native endian arrays, but I think that would be acceptable. It's not like GPU copying, where users really want to be aware of this; endianness is a nuisance, rather than something people want to track.",
  "closed_at":"2023-04-18T15:23:57Z",
  "comments":0,
  "created_at":"2023-03-10T15:07:45Z",
  "id":1619131922,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ggf4S",
  "number":2303,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"NEP18-dispatched functions raise an error if any arguments are non-native endian arrays",
  "updated_at":"2023-04-18T15:23:57Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2302 , by directly checking the minimum dimension of the array that is expected by the index.",
  "closed_at":"2023-03-10T16:36:59Z",
  "comments":2,
  "created_at":"2023-03-10T15:27:07Z",
  "draft":false,
  "id":1619161653,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Lxtxe",
  "number":2304,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-10T16:36:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: fail early if index is too dimensional",
  "updated_at":"2023-03-10T16:37:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Issue #2303 raises a couple of important points;\r\n- We don't need to build a layout only to immediately convert it to a backend array\r\n- We should not convert to NumPy eagerly; it's possible to use NEP18 on cuda `cp.ndarray,` the same should hold for `ak.Array` with `backend=\"cuda\"`.\r\n\r\nThis PR fixes #2303 by \r\n- Only converting to layouts if we identify a backend, and the object is not a backend array\r\n- Convert all arguments to a common backend\r\n\r\n",
  "closed_at":"2023-04-18T14:28:23Z",
  "comments":4,
  "created_at":"2023-03-10T15:39:19Z",
  "draft":true,
  "id":1619178463,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5LxxWx",
  "number":2305,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: only convert NEP18 arguments to layouts if required",
  "updated_at":"2023-04-18T14:28:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-21T20:12:26Z",
  "comments":10,
  "created_at":"2023-03-13T11:04:09Z",
  "draft":false,
  "id":1621257353,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5L4cT5",
  "number":2306,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-21T20:12:26Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: use cppyy for JIT",
  "updated_at":"2023-03-22T10:19:14Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\nThis PR replaces a hard-coded loop-based search with a faster per-type lookup for each nplike.\r\n\r\n## TL\r\n### Context\r\nWe have an `nplike_of` L3 function in Awkward so that we can determine the most suitable array library among a set of complex input objects. This mechanism needs to extend beyond identifying the array library for the array type to layouts, builders, and potentially other objects.\r\n\r\nOur existing mechanism for finding the appropriate nplike for a given object is flawed, due to the following points:\r\n1. Our L1 API should not expose `backend` or `nplike`\r\n2. Our L2 APIs cannot all be made homogeneous, e.g. `_ext.ArrayBuilder` should not have a backend (it has no concept of such a thing)\r\n3. Each call to `nplike_for` performs a non-cached lookup of several attributes. For array types, it loops over each nplike\r\n4. The set of nplikes is hard-coded\r\n\r\nExtending `nplike_for` to include `ArrayBuilder` would require more customisation of this logic. At the same time, PRs like #2305 would benefit from the search for an nplike being as fast as possible.\r\n\r\n### Details\r\nIn general, we can do better by generalising the search mechanism. This PR makes such a change, by introducing a type-cached \"finder\" system, that allows us to register direct nplike lookups for each type. When there is a cache miss, the system walks over the list of finders until a suitable finder is found, and memoizes the result under the type of the object.\r\n\r\nThere is now a `register_nplike_finder_factory` function that lets the caller register a finder factory that returns a `NumpyLikeFinder`:\r\n```python\r\n@register_nplike_finder_factory\r\ndef finder(cls) -> NumpyLikeFinder:\r\n    if issubclass(cls, SomeType):\r\n        return finder_for_SomeType\r\n```\r\nThe `NumpyLikeFinder` is responsible for taking an instance of the registered type and returning its associated nplike:\r\n```python\r\ndef finder_for_SomeType(obj: SomeType) -> NumpyLike:\r\n    return Numpy.instance()\r\n```\r\n",
  "closed_at":"2023-04-11T17:50:31Z",
  "comments":3,
  "created_at":"2023-03-13T15:04:39Z",
  "draft":true,
  "id":1621683903,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5L54mM",
  "number":2307,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: new nplike finding mechanism",
  "updated_at":"2024-02-01T21:37:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.6.4 to 1.7.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.7.1</h2>\n<h2>Regression?</h2>\n<p>There was a small setback with v1.7.0 \u2014 the snake_case fallbacks didn't work because the check for the kebab-case env vars with default values set was always truthy. This bugfix release promptly fixes that.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.7.0...v1.7.1\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.7.0...v1.7.1</a></p>\n<h2>v1.7.0</h2>\n<h2>What should I care about?</h2>\n<p>TL;DR The action input names have been converted to use kebab-case and marked deprecated. But the old names still work.</p>\n<p>This is made to align the public API with the de-facto conventions in the ecosystem. We've used snake_case names, which the maintainer considers a historical mistake. New kebab-case inputs will make the end-users' workflows look more consistent and and visually distinguishable from other identifiers one may encounter in YAML.</p>\n<p>There is no timeline for removing the old names, but it will happen in v3 or later versions of the action. <em>If the maintainer doesn't forget to do this, that is.</em></p>\n<p>The patch is here: <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/125\">pypa/gh-action-pypi-publish#125</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.6.5...v1.7.0\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.6.5...v1.7.0</a></p>\n<h2>v1.6.5</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Added an explicit warning when the password passed into the action is empty \u2014 thanks <a href=\"https://github.com/colindean\"><code>@\u200bcolindean</code></a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/colindean\"><code>@\u200bcolindean</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/122\">pypa/gh-action-pypi-publish#122</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.6.4...v1.6.5\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.6.4...v1.6.5</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/22b4d1f12511f2696162c08546dafbaa903448a2\"><code>22b4d1f</code></a> \ud83d\udc1b Make kebab options fall back for snake_case</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/7104b6e981edc64651f8fc454998a67914173bdb\"><code>7104b6e</code></a> Merge branch 'maintenance/kebab-case-inputs' into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f131721e84cbe1025d966f15e3a9c65be89d9396\"><code>f131721</code></a> \ud83c\udfa8 Convert action inputs to use kebab-case</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/32b5e9370928566935e085a9154f23bd662ef41c\"><code>32b5e93</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/122\">#122</a> from colindean/empty-token</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/efcb9babc8c755fa5eaf7e581749c61995268ba7\"><code>efcb9ba</code></a> \ud83c\udfa8 Warn about empty password/token action input</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/d2ce3ec872b8e7e5190b4b094dd0b7a447c0b266\"><code>d2ce3ec</code></a> \u21ea Bump isort to v5.12.0</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/0eaf3a11fdca4a989056b00eda351a21c1b0426e\"><code>0eaf3a1</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/121\">#121</a> from pypa/dependabot/pip/requirements/cryptography-39...</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/6a2da9bc3b4a932e2daeabc60613200d38c902f9\"><code>6a2da9b</code></a> Bump cryptography from 38.0.4 to 39.0.1 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/7eb3b701d11256e583f5b49899c5e7203deab573\"><code>7eb3b70</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/119\">#119</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/91e612128c6eb36bfa9bd31ddcae03eceb63616c\"><code>91e6121</code></a> Revert WPS flake8 hook version to 4.0.1</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.6.4...v1.7.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.6.4&new-version=1.7.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-03-17T07:27:16Z",
  "comments":2,
  "created_at":"2023-03-13T18:07:35Z",
  "draft":false,
  "id":1622001261,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5L68Qk",
  "number":2308,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-17T07:27:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.6.4 to 1.7.1",
  "updated_at":"2023-03-17T07:27:17Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.12.0 to 2.12.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.12.1</h2>\n<ul>\n<li>\ud83d\udc1b Fix a bug that prevented the use of CIBW_CONFIG_SETTINGS with the 'pip' build backend. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1430\">#1430</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.12.1</h3>\n<p><em>11 March 2023</em></p>\n<ul>\n<li>\ud83d\udc1b Fix a bug that prevented the use of CIBW_CONFIG_SETTINGS with the 'pip' build backend. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1430\">#1430</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/02ad79a31bf7aa0eee07f690509048d2fb9fd445\"><code>02ad79a</code></a> Bump version: v2.12.1</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/1d6ee75d21e2d39eeff59a101efbdff3f926060d\"><code>1d6ee75</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1430\">#1430</a> from henryiii/henryiii/fix/pipconfigopts</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/0b1b539450d86f7be21182225467c24303b687f7\"><code>0b1b539</code></a> [Bot] Update dependencies (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1425\">#1425</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/2e48667e29fa128d96738dd6bb585aaab232b580\"><code>2e48667</code></a> refactor: use frontend instead of plural</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/c6818608d23a2f54b26e48b22c28fceb40ce2c57\"><code>c681860</code></a> fix: pip config options were broken</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7190b1a6a7be78508bc9a75badd370ec33018880\"><code>7190b1a</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1428\">#1428</a> from henryiii/henryiii/ci/appveyor</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/16380b855562429b51e9ac36f6dd57094121c4b4\"><code>16380b8</code></a> Update CI table</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/94efa61f7667e9451d24b5ce8265b0afaaead76a\"><code>94efa61</code></a> ci: fix appveyor (Python 3.8+ needed for macOS)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/acdbe87e3d002598b10435bb6f17bae758418ba8\"><code>acdbe87</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1427\">#1427</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/49b736d1c725bda880a31df86e46a3d1a09d92b8\"><code>49b736d</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.12.0...v2.12.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.12.0&new-version=2.12.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-03-17T07:46:28Z",
  "comments":1,
  "created_at":"2023-03-13T18:07:39Z",
  "draft":false,
  "id":1622001371,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5L68SO",
  "number":2309,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-17T07:46:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.12.0 to 2.12.1",
  "updated_at":"2023-03-17T07:46:29Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"This is an issue for all present users of coffea until they migrate to the to-be released coffea 2023 (previously 0.8), due to how nanoevents manipulates the form.\r\n\r\n```\r\nuproot version = '4.3.7'\r\nawkward version = '1.10.2'\r\n```\r\n\r\nThe following code will grow in memory continuously, this becomes a problem for very long running jobs (and often kills people's analysis runs over the course of hours):\r\n```python3\r\nimport uproot\r\nimport awkward\r\n\r\ni = 0\r\nx = uproot.open({\"tests/samples/nano_dy.root\": \"Events\"})\r\n\r\nwhile True:\r\n    print(\"manipulating form\",i)\r\n    i += 1\r\n    for _, branch in x.iteritems():\r\n        form = branch.interpretation.awkward_form(None)\r\n        form = uproot._util.awkward_form_remove_uproot(awkward, form)\r\n```\r\n\r\nUpon commenting out this last line the unbounded memory growth stops.",
  "closed_at":"2023-03-17T11:44:24Z",
  "comments":7,
  "created_at":"2023-03-13T17:03:15Z",
  "id":1622050744,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5groe4",
  "number":2310,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"awkward1 `form.parameters` exhibits unbounded memory growth",
  "updated_at":"2023-03-17T11:44:24Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"A memory leak in Coffea was traced to this: we were calling Python C API functions (just [PyUnicode_DecodeUTF8](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_DecodeUTF8)) that returned new refs and then passing them directly to pybind11 `py::object` (or its subclasses') constructors. I had thought that the `py::object` constructor would steal this reference and implicitly call `Py_DECREF` on it when the `py::object` enters its destructor, but this is evidently not the case. (The memory leak in #2310 toggles exactly with adding `Py_DECREF` into [parameters2dict](https://github.com/scikit-hep/awkward/blob/198cf6188bc70a19bb413a1bd750f93e605a8e57/src/python/content.cpp#L1737-L1752\r\n).)\r\n\r\nIn this PR, I have added `Py_DECREF` calls as late as possible in every branch of the program flow on the raw `PyObject*` objects directly returned by `PyUnicode_DecodeUTF8`. I got all of these cases, and there are no other Python C API function calls that return `PyObject*` in the codebase. All of the other Python C API functions called,\r\n\r\n   * [PyObject_CheckBuffer](https://docs.python.org/3/c-api/buffer.html#c.PyObject_CheckBuffer)\r\n   * [PyBytes_Check](https://docs.python.org/3/c-api/bytes.html#c.PyBytes_Check)\r\n   * [PyBytes_Size](https://docs.python.org/3/c-api/bytes.html#c.PyBytes_Size)\r\n   * [PyBytes_AsString](https://docs.python.org/3/c-api/bytes.html#c.PyBytes_AsString)\r\n\r\nreturn C types, not `PyObject*`. (The Python documentation says the `char*` that `PyBytes_AsString` returns is owned by Python and must not be released. In our code, we copy it immediately.)\r\n\r\nThis PR also updates the version number in anticipation of an Awkward v1 bug-fix release, and it fixes a test that now fails a NumPy deprecation warning (no relationship to the actual bug; it's just that `main-v1` is an old branch).\r\n\r\nThere is no equivalent action to be performed on Awkward `main` because none of this stuff exists there. ",
  "closed_at":"2023-03-13T21:50:59Z",
  "comments":6,
  "created_at":"2023-03-13T19:17:14Z",
  "draft":false,
  "id":1622105118,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5L7Sav",
  "number":2311,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-13T21:50:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: DECREFing PyObject*s from Python C API calls in v1.",
  "updated_at":"2023-03-13T21:51:00Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.254 \u2192 v0.0.255](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.254...v0.0.255)\n- [github.com/codespell-project/codespell: v2.2.2 \u2192 v2.2.4](https://github.com/codespell-project/codespell/compare/v2.2.2...v2.2.4)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-03-19T16:22:32Z",
  "comments":4,
  "created_at":"2023-03-14T01:07:30Z",
  "draft":false,
  "id":1622540442,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5L8wP8",
  "number":2313,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-19T16:22:32Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-03-19T16:22:33Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n- Add support for 0D arrays as array index arguments\r\n",
  "closed_at":"2023-03-17T22:46:43Z",
  "comments":8,
  "created_at":"2023-03-14T13:54:54Z",
  "draft":false,
  "id":1623534228,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MAGCt",
  "number":2314,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-17T22:46:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support unknown scalars in `__getitem__`",
  "updated_at":"2023-03-17T22:46:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In preparation for a simplification of `nplike` identification, this PR eliminates redundant `nplike_of` usages, and/or replaces them with `backend_of`.\r\n\r\nIn future, `nplike_of` will only accept array objects (not layouts, etc).\r\n\r\n",
  "closed_at":"2023-03-15T00:36:05Z",
  "comments":2,
  "created_at":"2023-03-15T00:04:18Z",
  "draft":false,
  "id":1624483954,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MDTOU",
  "number":2315,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-15T00:36:05Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: uneccessary use of `nplike_of`",
  "updated_at":"2023-03-15T00:36:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"My long-term plan (as discussed with Jim) is to move towards free symbols for function usage over `ak._` imports. \r\n\r\nThe benefits of this are:\r\n- Easier use of type hints  & improved readability\r\n- Separation of concerns / decoupling of code (otherwise imports break!)\r\n\r\nThe concrete motivations for this PR are that `ak._util` couples a lot of modules right now, making refactoring more fiddly than it needs to be.\r\n\r\nAlthough the L1/L2 APIs will remain \"REPL-friendly\" (don't require many imports), the L3 API *can* be import-only. Gradually we are moving towards this approach, with this PR making a big jump. Eventually I'd like all of awkward to use imports internally.\r\n\r\nI've also renamed functions to better reflect their purpose.",
  "closed_at":"2023-03-16T23:04:08Z",
  "comments":5,
  "created_at":"2023-03-16T12:29:24Z",
  "draft":false,
  "id":1627380087,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MNGSv",
  "number":2316,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-16T23:04:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: rename util functions",
  "updated_at":"2023-03-16T23:04:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nThese functions would generate the nplike arrays.",
  "closed_at":"2023-04-25T15:33:32Z",
  "comments":1,
  "created_at":"2023-03-16T14:28:02Z",
  "id":1627624471,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5hA5QX",
  "number":2317,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Add support for callable \"buffers\" in `ak.from_buffers`",
  "updated_at":"2023-04-25T15:33:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`jupyterlite` partitioned into `jupyterlite-core` and `jupyterlite`. We pin `jupyterlite`, but now we need to pin the root package.",
  "closed_at":"2023-03-16T22:45:00Z",
  "comments":1,
  "created_at":"2023-03-16T15:30:49Z",
  "draft":false,
  "id":1627751026,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MOXpZ",
  "number":2318,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-16T22:44:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: jupyterlite dependency changes",
  "updated_at":"2023-03-16T22:45:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-17T00:40:20Z",
  "comments":3,
  "created_at":"2023-03-16T16:33:18Z",
  "draft":false,
  "id":1627865198,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MOwVM",
  "number":2319,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-17T00:40:20Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for arrays in `from_buffers`",
  "updated_at":"2023-03-17T10:33:57Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-17T09:09:01Z",
  "comments":1,
  "created_at":"2023-03-16T16:33:27Z",
  "draft":false,
  "id":1627865388,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MOwX2",
  "number":2320,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for callables in `from_buffers`",
  "updated_at":"2024-02-01T19:25:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [amannn/action-semantic-pull-request](https://github.com/amannn/action-semantic-pull-request) from 5.1.0 to 5.2.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/releases\">amannn/action-semantic-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>v5.2.0</h2>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.1.0...v5.2.0\">5.2.0</a> (2023-03-16)</h2>\n<h3>Features</h3>\n<ul>\n<li>Update dependencies by <a href=\"https://github.com/EelcoLos\"><code>@\u200bEelcoLos</code></a> (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/229\">#229</a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/e797448a07516738bcfdd6f26ad1d1f84c58d0cc\">e797448</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/blob/main/CHANGELOG.md\">amannn/action-semantic-pull-request's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.1.0...v5.2.0\">5.2.0</a> (2023-03-16)</h2>\n<h3>Features</h3>\n<ul>\n<li>Update dependencies by <a href=\"https://github.com/EelcoLos\"><code>@\u200bEelcoLos</code></a> (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/229\">#229</a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/e797448a07516738bcfdd6f26ad1d1f84c58d0cc\">e797448</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/c3cd5d1ea3580753008872425915e343e351ab54\"><code>c3cd5d1</code></a> chore: Release 5.2.0 [skip ci]</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/e797448a07516738bcfdd6f26ad1d1f84c58d0cc\"><code>e797448</code></a> feat: Update dependencies by <a href=\"https://github.com/EelcoLos\"><code>@\u200bEelcoLos</code></a> (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/229\">#229</a>)</li>\n<li>See full diff in <a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.1.0...v5.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=amannn/action-semantic-pull-request&package-manager=github_actions&previous-version=5.1.0&new-version=5.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-03-17T07:25:45Z",
  "comments":1,
  "created_at":"2023-03-16T17:59:57Z",
  "draft":false,
  "id":1628007747,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MPPUQ",
  "number":2321,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-17T07:25:45Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump amannn/action-semantic-pull-request from 5.1.0 to 5.2.0",
  "updated_at":"2023-03-17T07:25:47Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.7.1 to 1.8.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.1</h2>\n<h2>\ud83d\udc1b What's Fixed</h2>\n<p>\ud83d\udc94 Unfortunately, a tiny mistake in v1.8.0 caused a far-reaching regression for the most used code path.\n\u2757 But don't worry, it's fixed now thanks to <a href=\"https://github.com/njzjz\"><code>@\u200bnjzjz</code></a> who promptly spotted it and <a href=\"https://github.com/zhongjiajie\"><code>@\u200bzhongjiajie</code></a> who sent a bugfix.</p>\n<h2>\ud83d\ude4c New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/zhongjiajie\"><code>@\u200bzhongjiajie</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/131\">pypa/gh-action-pypi-publish#131</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.0...v1.8.1\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.0...v1.8.1</a></p>\n<h2>v1.8.0</h2>\n<h2>The Coolest Release Ever!</h2>\n<p>In this release, <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> implemented support for secretless OIDC-based publishing to PyPI-like package indexes. The OIDC flow is activated when neither username nor password action inputs are set.</p>\n<p>The OIDC \u201ctoken exchange\u201d, is an authentication technique that PyPI (and TestPyPI, and hopefully some future others) supports as an alternative to long-lived username/password combinations or long-lived API tokens.</p>\n<blockquote>\n<p><strong>IMPORTANT:</strong> The PyPI-side configuration is only available to participants of the private beta test. Please, only try out the zero-config mode if you are a beta test participant having followed the PyPI configuration instructions.</p>\n</blockquote>\n<p>Setup prerequisites: <a href=\"https://github.com/marketplace/actions/pypi-publish#publishing-with-openid-connect\">https://github.com/marketplace/actions/pypi-publish#publishing-with-openid-connect</a>\nPyPI's documentation: <a href=\"https://pypi.org/help/#openid-connect\">https://pypi.org/help/#openid-connect</a>\nBeta test enrollment: <a href=\"https://redirect.github.com/pypi/warehouse/issues/12965\">pypi/warehouse#12965</a></p>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/123\">pypa/gh-action-pypi-publish#123</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.7.1...v1.8.0\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.7.1...v1.8.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a3a3bafbb3e5a75a854ae1bc53ae128cf22c4af4\"><code>a3a3baf</code></a> \ud83d\udc1b Merge PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/131\">#131</a> from into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/d5417dc8be8a412b7bf487b09ad3997ad92f859b\"><code>d5417dc</code></a> \ud83d\udc1bCorrect default upload URL</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/8ef2b3d46c9ecba901fb2ae21d98e322c4089c4e\"><code>8ef2b3d</code></a> Merge PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/123\">#123</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2b46bad8cbe9efe518cd7dd98a1610b22721a469\"><code>2b46bad</code></a> OIDC beta support</li>\n<li>See full diff in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.7.1...v1.8.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.7.1&new-version=1.8.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-03-18T10:01:36Z",
  "comments":1,
  "created_at":"2023-03-17T17:59:30Z",
  "draft":false,
  "id":1629717819,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MU-5W",
  "number":2322,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-18T10:01:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.7.1 to 1.8.1",
  "updated_at":"2023-03-18T10:01:38Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR just performs a simple rename to hide `ak.typing` (it's supposed to be private for now).",
  "closed_at":"2023-03-20T14:00:48Z",
  "comments":1,
  "created_at":"2023-03-20T12:03:30Z",
  "draft":false,
  "id":1631969807,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5McZAR",
  "number":2324,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-20T14:00:48Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: hide `awkward.typing`",
  "updated_at":"2023-03-20T14:00:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> **Warning**\r\n> For ease, depends upon #2324, which should be merged first.\r\n\r\nThe same rationale applies here as for other renames: the `_parameters` functions are L3, and should existing in an L3 submodule rather than L3 names in an L2 submodule.\r\n\r\nThere is, in my mind, a stronger reason to create a new submodule under `awkward` than `awkward.forms`, but I would easily be moved on this.\r\n",
  "closed_at":"2023-03-20T14:36:42Z",
  "comments":3,
  "created_at":"2023-03-20T12:58:07Z",
  "draft":false,
  "id":1632058286,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Mcrx1",
  "number":2325,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-20T14:36:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move `_parameters_XXX` functions into `_parameters` submodule",
  "updated_at":"2023-03-20T15:25:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR reworks the fix in #2318. That fix was valid, but we need to wait until we can build for pyodide 0.22.0, which is given by #2062.\r\n\r\n\r\nI usually use the docs release to rapidly test \"in-the-wild\" Awkward Array. I noticed that the build is currently broken.",
  "closed_at":"2023-03-20T18:39:04Z",
  "comments":0,
  "created_at":"2023-03-20T15:12:46Z",
  "draft":false,
  "id":1632317182,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Mdj26",
  "number":2326,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-20T18:39:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix pyodide (again!)",
  "updated_at":"2023-03-20T18:39:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak.index.Index(existing_index)` doesn't work for CuPy arrays. We rely on being able to do this in our internal layout logic.\r\n\r\nI think what happens is that CuPy asks NumPy to read this array, which then fails as what's returned is _not_ a NumPy array.\r\n\r\nWe can generalise our index to expose the various array interfaces. In the longer term, we should also expose DLPack.\r\n",
  "closed_at":"2023-03-20T17:06:11Z",
  "comments":0,
  "created_at":"2023-03-20T15:40:08Z",
  "draft":false,
  "id":1632375255,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MdwkC",
  "number":2327,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-20T17:06:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: expose array interface for CUDA",
  "updated_at":"2023-03-20T17:06:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.255 \u2192 v0.0.257](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.255...v0.0.257)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-03-22T13:43:15Z",
  "comments":1,
  "created_at":"2023-03-20T23:59:37Z",
  "draft":false,
  "id":1633033070,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Mf-Pc",
  "number":2328,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-22T13:43:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-03-22T13:43:16Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR: \r\n- removes a special case for zero-length arrays from `ak.cartesian`\r\n- fixes missing case in `broadcast_and_apply` that required this patch\r\n- fixes and tests a set of inputs that was broken in `ak.cartesian`",
  "closed_at":"2023-03-21T15:07:00Z",
  "comments":2,
  "created_at":"2023-03-21T14:03:01Z",
  "draft":false,
  "id":1633997141,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MjPJz",
  "number":2329,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-21T15:07:00Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: test untested path in `ak.cartesian` & broadcasting",
  "updated_at":"2023-03-21T15:07:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.1.1\n\n### Description and code to reproduce\n\nUnbounded memory growth when using arrays with strings. Running the following code will demonstrate the issue. In each loop iteration, memory usage keeps on increasing\r\n\r\n``` python\r\nimport awkward as ak\r\n\r\nfrom tqdm.cli import tqdm\r\n\r\ndef f(arr):\r\n    result = 0\r\n    for i in range(len(arr)):\r\n        result += (arr[i] == \"mov\")\r\n    return result\r\n\r\n\r\nfor i in tqdm(range(100)):\r\n    arr = ak.Array(['aaaaa' * 100 * 1024] * 1024)\r\n    f(arr)\r\n```",
  "closed_at":"2023-03-22T13:32:19Z",
  "comments":5,
  "created_at":"2023-03-21T20:44:59Z",
  "id":1634663402,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5hbvvq",
  "number":2330,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Memory leak when using array of strings",
  "updated_at":"2023-03-22T13:32:19Z",
  "user":"MDQ6VXNlcjc1OTcxOTE2"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR follows up #2306 and renames `cpptype` to `cpp_type`, to align with our PEP8 naming conventions!",
  "closed_at":"2023-03-21T22:45:16Z",
  "comments":3,
  "created_at":"2023-03-21T20:55:41Z",
  "draft":false,
  "id":1634675309,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Mlg21",
  "number":2331,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-21T22:45:16Z"
  },
  "reactions":{
   "rocket":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat!: rename cpptype",
  "updated_at":"2023-03-22T08:32:20Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"When creating a string in Numba using [PyUnicode_FromKindAndData](https://docs.python.org/3/c-api/unicode.html#c.PyUnicode_FromKindAndData) or a bytes object from [PyBytes_FromStringAndSize](https://docs.python.org/3/c-api/bytes.html#c.PyBytes_FromStringAndSize), the returned object is a new reference, and _I guess_ Numba also adds a reference to it when we pass it on.\r\n\r\nUnderline and highlight \"_I guess_\". I only know that from the fact that this code change fixes a memory leak that is present without it. Maybe Numba is incrementing the count in `pyapi.to_native_value` because if the new `pyapi.decref(pystr)` is _before_ that line, it segfaults. (It can't go any later, since it must be within the GIL-acquired region.)\r\n\r\nThe memory leak is pretty well measured by the test, which I'm also uncomfortable with because it's measuring the process's total RSS memory use, and if pytest runs in parallel, maybe another test will boost the memory use. The 30 MiB figure in the test is exactly what is produced by the memory leak (determined by experimentation, but also note that it's 1024\u00d71024 3-character strings in UTF-8). With the memory leak, the memory of the process, controlled by garbage collection, grows by exactly 30 MiB; without the memory leak, it grows by exactly zero. But that's when I run pytest sequentially. The 90% fudge factor is to allow it to run in parallel.\r\n\r\nThis test also introduces the need to have psutil as a testing dependency.\r\n\r\n@agoose77, if you see a better way to test this, let me know. Or maybe we just don't test it? I've tested it manually and we now know that there needs to be a `pyapi.decref` there. It's not like that part of the code is going to be changed\u2014we don't haphazardly remove `pyapi.incref` and `pyapi.decref`.\r\n\r\n@ianna, do you see anything in Numba that justifies this `pyapi.decref`?",
  "closed_at":"2023-03-22T13:32:18Z",
  "comments":8,
  "created_at":"2023-03-21T22:18:49Z",
  "draft":false,
  "id":1634773274,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ml1T3",
  "number":2332,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-22T13:32:18Z"
  },
  "reactions":{
   "+1":2,
   "total_count":2
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: Numba string reference count memory leak.",
  "updated_at":"2023-03-22T13:32:19Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We already test for unknown scalars, but unknown arrays slip through! In general, this logic should test for scalar fill values in addition to whether they're known.",
  "closed_at":"2023-09-26T08:13:25Z",
  "comments":4,
  "created_at":"2023-03-21T23:24:44Z",
  "draft":true,
  "id":1634832340,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MmCD0",
  "number":2333,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `ak.full_like` with unknown arrays",
  "updated_at":"2024-02-01T19:25:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds:\r\n* a Jupyter notebook as documentation\r\n* bug fix: generating an ArrayView when requesting the array C++ type\r\n\r\nSee https://github.com/scikit-hep/awkward/pull/2334#issuecomment-1807280042 for information on the CI/CD changes.\r\n\r\nTODO\r\n- [ ] add redirects to documentation for regrouped pages.",
  "closed_at":"2023-11-14T10:31:37Z",
  "comments":4,
  "created_at":"2023-03-22T07:39:44Z",
  "draft":false,
  "id":1635221859,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MnVQk",
  "number":2334,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-14T10:31:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: how to accelerate awkward arrays with cppyy",
  "updated_at":"2023-11-14T10:31:38Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-22T18:09:17Z",
  "comments":2,
  "created_at":"2023-03-22T16:15:30Z",
  "draft":false,
  "id":1636098745,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5MqRI9",
  "number":2335,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-22T18:09:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: generate an array view when an Array C++ type is requested",
  "updated_at":"2023-03-22T18:09:18Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.1 to 1.8.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.3</h2>\n<h2>What's New</h2>\n<p>This release improves the logging detalization of which authentication mode is selected when the action runs. It surfaces this detail to the workflow run summary page as annotations. The change was contributed by <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/136\">pypa/gh-action-pypi-publish#136</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.2...v1.8.3\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.2...v1.8.3</a></p>\n<h2>v1.8.2</h2>\n<h2>What's Changed</h2>\n<p>This release started printing out full OIDC error messages to console, instead of just one line -- by <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/134\">pypa/gh-action-pypi-publish#134</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.1...v1.8.2\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.1...v1.8.2</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/48b317d84d5f59668bb13be49d1697e36b3ad009\"><code>48b317d</code></a> Merge PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/136\">#136</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/ae295504b3468d3952767fa0d25a4a2996a5578f\"><code>ae29550</code></a> twine-upload: increase detail on console notices</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f3ce18f69986f83a044b6e618425238f6c1bb8ef\"><code>f3ce18f</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/134\">#134</a> from trail-of-forks/tob-better-errors</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/ea29ccc08c5128e49d7b7744d6fe4fcac05e93de\"><code>ea29ccc</code></a> oidc-exchange: avoid splitting the error message</li>\n<li>See full diff in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.1...v1.8.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.1&new-version=1.8.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-04-03T17:59:52Z",
  "comments":1,
  "created_at":"2023-03-22T18:00:02Z",
  "draft":false,
  "id":1636254023,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Mqydc",
  "number":2336,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.1 to 1.8.3",
  "updated_at":"2023-04-03T17:59:55Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.1\n\n### Description and code to reproduce\n\nBack in awkward version 1.8.0 (pyarrow version 3.0.0) we could do;\r\n```\r\nimport awkward as ak\r\nto_be_saved = {\"itemA\": [[], [[]]]}\r\nas_record = ak.Record(to_be_saved)\r\nak.to_parquet(as_record, \"example.parquet\")\r\n```\r\nHowever, after upgrading to awkward version 2.1.1 (pyarrow version 11.0.0) this snippet gives the error;\r\n`NullType Arrow field must be nullable`\r\n\r\nI think this is a bug, either in pyarrow or in awkward, but I don't see a bug report about it in either. Can this function be restored from the awkward side?\r\n\r\nWe do have some edge cases in which empty lists like this appear in some items. We also have a considerable amount of data saved in this format. There would be many workarounds involving altering the save format, but we would really like to avoid that. ",
  "closed_at":"2023-03-23T21:13:09Z",
  "comments":9,
  "created_at":"2023-03-23T11:57:46Z",
  "id":1637399113,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5hmLpJ",
  "number":2337,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"\"NullType Arrow field must be nullable\" after upgrading to newer awkward/pyarrow.",
  "updated_at":"2023-03-24T14:26:55Z",
  "user":"MDQ6VXNlcjEyOTk2NzYz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Note to self: the \"prototype method\" of assigning a type is a good hint of how to write that type-setting function. We have a way of turning a Form into a length-0 array (it's an L2 function), and if you concatenate that length-0 array onto the array with unknowns, it would give the appropriate type to those unknowns. If the types conflict, you'd get unions, which might be the right thing.\r\n\r\nThis should be turned into an issue, for brainstorming how to make that function.\r\n\r\n_Originally posted by @jpivarski in https://github.com/scikit-hep/awkward/issues/2337#issuecomment-1481370021_\r\n            ",
  "closed_at":"2023-05-05T15:31:51Z",
  "comments":2,
  "created_at":"2023-03-23T15:10:33Z",
  "id":1637734704,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5hndkw",
  "number":2338,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Make a function that assigns types to unknowns from an overall type/Form description",
  "updated_at":"2023-05-05T15:31:51Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nWe are moving towards having \"one way to do X\" in Awkward, and most of the time that means using the `ak.operations.ak_XXX` function instead of duplicating this on the L2 types. An exception is the `to_XXX` methods, that are useful (though we've not concretely said that they won't disappear in the fullness of time).\r\n\r\nThe ability to read `Index` and `NumpyArray` as NumPy arrays is suboptimal; one can already pull out `.data` from these objects, and I think we want to err on the side of restricting the L2 API. \r\n\r\nI'll expand my thoughts here in future!",
  "closed_at":"2024-01-20T00:08:37Z",
  "comments":1,
  "created_at":"2023-03-24T13:21:54Z",
  "id":1639386301,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5htwy9",
  "number":2339,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Remove `__array__` support from `NumpyArray` and `Index`",
  "updated_at":"2024-01-20T00:08:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"In trying to construct a minimal reproducer, I find that they directly forbid a null type from being non-nullable:\r\n\r\n```python\r\n>>> import pyarrow as pa\r\n>>> pa.field(\"name\", pa.null(), nullable=False)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pyarrow/types.pxi\", line 2266, in pyarrow.lib.field\r\nValueError: A null type field may not be non-nullable\r\n```\r\n\r\nIn our code, we must be getting at it some other way that bypasses this check, but it's clear what their intentions are. We _do_ allow an `UnknownType` to not be inside an `OptionType`, so the problem is that we have a broader type system and a direct conversion makes something that Arrow doesn't consider legal.\r\n\r\nSo the right way to fix this is to wrap our `EmptyArray` inside `UnmaskedArray` on conversion to Arrow, but include enough metadata in the `ExtensionType` that when we convert it back, we know to remove the option-type, so that it's round-trip preserved. I'll make this an issue.\r\n\r\n_Originally posted by @jpivarski in https://github.com/scikit-hep/awkward/issues/2337#issuecomment-1482892635_\r\n            ",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-03-24T14:27:59Z",
  "id":1639499621,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5huMdl",
  "number":2340,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"open",
  "state_reason":null,
  "title":"Awkward allows non-nullable unknown type, but Arrow doesn't",
  "updated_at":"2023-08-11T14:10:39Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black: 23.1.0 \u2192 23.3.0](https://github.com/psf/black/compare/23.1.0...23.3.0)\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.257 \u2192 v0.0.261](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.257...v0.0.261)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-04-13T16:41:20Z",
  "comments":1,
  "created_at":"2023-03-28T00:20:50Z",
  "draft":false,
  "id":1643012002,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NBQ8b",
  "number":2342,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-13T16:41:20Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-04-13T16:41:22Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes unintentional exposure of an `rdfentry_` column. There is no test to check it, but current documentation shows that an `rdfentry_` column was exposed:\r\n```python\r\narray = ak.from_rdataframe(\r\n    df,\r\n    columns=(\r\n        \"x\",\r\n        \"y\",\r\n        \"z\",\r\n    ),\r\n)\r\narray\r\n\r\n[{y: 1, z: [1.1], rdfentry_: [0, 1, 2, 3, 4], x: {...}},\r\n {y: 2, z: [2.1, 2.3, 2.4], rdfentry_: [0, 1, ..., 3, 4], x: {...}},\r\n {y: 3, z: [3.1], rdfentry_: [0, 1, 2, 3, 4], x: {...}},\r\n {y: 4, z: [4.1, 4.2, 4.3], rdfentry_: [0, 1, ..., 3, 4], x: {...}},\r\n {y: 5, z: [5.1], rdfentry_: [0, 1, 2, 3, 4], x: {...}}]\r\n--------------------------------------------------------------------\r\ntype: 5 * {\r\n    y: int64,\r\n    z: var * float64,\r\n    rdfentry_: var * int64,\r\n    x: {\r\n        x: var * float64\r\n    }\r\n}\r\n```\r\n",
  "closed_at":"2023-03-29T13:42:01Z",
  "comments":1,
  "created_at":"2023-03-29T10:37:34Z",
  "draft":false,
  "id":1645517672,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NJrhI",
  "number":2343,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-29T13:42:00Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: do not expose an `rdfentry_` column",
  "updated_at":"2023-03-29T13:42:02Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\n2.1.1\n\n### Description and code to reproduce\n\nRename legacy `RDataSource::Initialise` to `RDataSource::Initialize` when minimum required ROOT version is fixed to 6.28:\r\n```python\r\nWarning in <RDataSource::Initialise>: Initialise is deprecated. Please rename it to \"Initialize\" (with a z).\r\n```",
  "closed_at":"2023-03-30T14:34:45Z",
  "comments":4,
  "created_at":"2023-03-29T10:59:15Z",
  "id":1645555753,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5iFTAp",
  "number":2344,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Warning in `RDataSource::Initialise` in ROOT 6.28",
  "updated_at":"2023-03-30T14:34:45Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"fixes issue #2344 ",
  "closed_at":"2023-03-30T14:34:44Z",
  "comments":1,
  "created_at":"2023-03-30T08:58:49Z",
  "draft":false,
  "id":1647200563,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NPVrU",
  "number":2345,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-30T14:34:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: generate RDataSource API based on ROOT attribute",
  "updated_at":"2023-03-30T14:34:45Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.1.1\n\n### Description and code to reproduce\n\nI'm not sure if this is a bug or intended behavior that isn't documented. Here is a pretty minimal example:\r\n\r\n```python\r\n>>> import awkward as ak\r\n>>> a = ak.Array([1, 2, 3])\r\n>>> ak.zip([a, a], depth_limit=2)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/operations/ak_zip.py\", line 147, in zip\r\n    return _impl(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/operations/ak_zip.py\", line 241, in _impl\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1061, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1040, in apply_step\r\n    return continuation()\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 757, in continuation\r\n    outcontent = apply_step(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1040, in apply_step\r\n    return continuation()\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1018, in continuation\r\n    raise ak._errors.wrap_error(\r\nValueError: while calling\r\n\r\n    ak.zip(\r\n        arrays = [<Array [1, 2, 3] type='3 * int64'>, <Array [1, 2, 3] type='...\r\n        depth_limit = 2\r\n        parameters = None\r\n        with_name = None\r\n        right_broadcast = False\r\n        optiontype_outside_record = False\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: cannot broadcast: <class 'awkward.contents.numpyarray.NumpyArray'>, <class 'awkward.contents.numpyarray.NumpyArray'>\r\n\r\n```\r\n\r\nAccording to the [documentation](https://awkward-array.org/doc/main/reference/generated/ak.zip.html), `depth_limit` \"limit[s] the number of dimensions that get broadcasted\". Clearly it is not only _limiting_ how deep broadcasting can go but _requiring_ that broadcasting be possible at that depth. This is surprising to me based on both the name of the parameter and the description in the documentation.",
  "closed_at":"2023-03-30T19:19:44Z",
  "comments":0,
  "created_at":"2023-03-30T13:43:22Z",
  "id":1647655511,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5iNTpX",
  "number":2346,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`depth_limit` requires a broadcast depth in addition to setting an upper limit",
  "updated_at":"2023-03-30T19:19:44Z",
  "user":"MDQ6VXNlcjMyNzczMzA0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2346 by loosening the depth-limit test.",
  "closed_at":"2023-03-30T19:19:43Z",
  "comments":1,
  "created_at":"2023-03-30T16:20:21Z",
  "draft":false,
  "id":1647931736,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NR0ed",
  "number":2347,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-30T19:19:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: simplify depth limit test to support bigger-than-depth values",
  "updated_at":"2023-03-30T19:19:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-03-31T14:38:31Z",
  "comments":1,
  "created_at":"2023-03-31T12:30:46Z",
  "draft":false,
  "id":1649275456,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NWRCW",
  "number":2348,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-03-31T14:38:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use cppyy include",
  "updated_at":"2023-03-31T14:38:32Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"@ianna, this is a complete implementation of GrowableBuffer (with `dtype`, `append`, `extend`, `snapshot` public methods) in Numba. It's also a good example to follow, instead of the ArrayView iterators, for a mutable Numba object like (future) LayoutBuilder.\r\n\r\nThe public API doesn't exactly follow the one in C++ because we can provide more high-level conveniences here. The C++ ArrayBuilder has a multi-step process to provide a length to Python, let Python allocate arrays of the right length, and then fill them, but all of that can be a single `snapshot` method here because Numba can ensure that Python owns the output arrays.\r\n\r\nThe lowered `GrowableBuffer` object is actually immutable and passed by value (`StructModel`). In order to ensure identity among all the objects created from one `GrowableBuffer` by assignment, all of the mutable data are in NumPy arrays and a `numba.typed.List`. Numba maintains the reference counts and referential identity of these objects; we take advantage of the fact that they do so. This way, if you\r\n\r\n```python\r\n>>> @nb.njit\r\n>>> def f(x):\r\n...     return x, x\r\n...\r\n>>> growablebuffer1 = GrowableBuffer(np.float32)\r\n>>> growablebuffer2, growablebuffer3 = f(growablebuffer1)\r\n```\r\n\r\nthen all three `growablebuffer1`, `growablebuffer2`, `growablebuffer3` share the same state: appending to any one of them appends to all of them.\r\n\r\nIn order to do this, I had to put two attributes, `_length` and `_pos`, into a 2-element NumPy array. If it weren't for trying to avoid confusions about mutability, they would have been simple attributes.\r\n\r\nThe `numba.typed.List` for a growable list of NumPy array `_panels` is also essential. This Python implementation of `GrowableBuffer` can't be used without Numba. I didn't like that conclusion, but the _only_ reason we'd have a pure Python version of these things is to provide an outside-of-Numba playground for practicing before moving things to Numba, so I guess it's not that bad.\r\n\r\nThe Numba implementations of `_add_panel`, `append`, `extend`, and `snapshot` (the only \"substantial\" functions) are all implemented in Numba's high-level extension API. I used the high-level API as much as possible. Quite a few underscored/hidden attributes and methods also exist in Numba, some of them implemented with the low-level API, and they're not all the same as the ones in Python. For instance, we have `_length_get()` in Numba and `_length` in Python.\r\n\r\nThe interpretation of the `resize` parameter might be different from how it is in C++. If so, it's because we never finished updating that. Now that we have panels, it no longer makes sense to grow an array exponentially with `resize` close to the golden ratio (we approximated with `1.5`); it would be much better for `resize` to only change the size once:\r\n\r\n  * the first panel has size `initial` (1024 items)\r\n  * _all subsequent panels_ (2nd, 3rd, 4th, ...) all have the same size `initial*resize` (8192 items)\r\n\r\nbecause (1) many buffers are never going to exceed their first panel and (2) having a bunch of same-sized chunks in memory space is less likely to get fragmented. If the C++ `GrowableBuffer` doesn't have this behavior yet, it should\u2014not having that was an oversight.\r\n\r\nI checked all of the reference-counting and they're correct. I couldn't do it in the test because pytest seemed to be changing the reference counts\u2014could it be that it's holding onto objects so that it can prepare a richer error message?",
  "closed_at":"2023-04-03T13:47:15Z",
  "comments":2,
  "created_at":"2023-03-31T17:14:53Z",
  "draft":false,
  "id":1649733745,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NX0LS",
  "number":2349,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-03T13:47:15Z"
  },
  "reactions":{
   "rocket":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: implemented GrowableBuffer in Numba as a start toward LayoutBuilder",
  "updated_at":"2023-04-03T13:47:16Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak._do` serves a particular purpose; to provide entrypoints to L3 functions in the `Content` class. I briefly outlined how this should ultimately be organised (in my view) [here](https://github.com/scikit-hep/awkward/issues/2108).\r\n\r\nFor now, the only user of this L3 function is `ak_concatenate`, so I'm placing it in that module.\r\n\r\nAlso, this PR removes an unused L3 function.",
  "closed_at":"2023-04-03T15:56:13Z",
  "comments":1,
  "created_at":"2023-04-03T13:28:53Z",
  "draft":false,
  "id":1652076229,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NfZC2",
  "number":2351,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-03T15:56:13Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move `merge_as_union` to `ak_concatenate`",
  "updated_at":"2023-04-03T15:56:15Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak.from_iter` should not (at least nominally) accept non-iterable types. Additionally, we ban Python scalars, but support 0D arrays. This PR ensures that `to_layout` only supports non-scalar numbers, and `from_iter` only accepts iterables.\r\n\r\nWe still accept strings in `from_iter`, and return a character array.\r\n",
  "closed_at":"2023-04-18T14:36:37Z",
  "comments":0,
  "created_at":"2023-04-03T15:06:46Z",
  "draft":true,
  "id":1652259027,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NgAog",
  "number":2352,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't permit scalars in `to_layout` / `from_iter`",
  "updated_at":"2024-02-01T19:25:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Although `from_iter` can understand non-iterables, I think we really want to restrict it to *only* returning layouts/arrays.",
  "closed_at":"2023-04-05T22:37:07Z",
  "comments":1,
  "created_at":"2023-04-03T16:54:30Z",
  "draft":false,
  "id":1652428817,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NglOs",
  "number":2353,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-05T22:37:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: make `from_iter` require iterables!",
  "updated_at":"2023-04-05T22:37:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-04-03T18:26:18Z",
  "comments":1,
  "created_at":"2023-04-03T17:06:53Z",
  "draft":false,
  "id":1652448748,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NgpmS",
  "number":2354,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-03T18:26:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: convert ufunc arguments to same backend",
  "updated_at":"2023-04-03T18:26:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This introduces feature parity with `ak.contents.Content`, and will be useful in future PRs",
  "closed_at":"2023-04-04T19:58:57Z",
  "comments":1,
  "created_at":"2023-04-03T17:07:58Z",
  "draft":false,
  "id":1652450467,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ngp-y",
  "number":2355,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-04T19:58:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `to_backend` to `ak.record.Record`",
  "updated_at":"2023-04-04T19:58:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.1 to 1.8.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.5</h2>\n<h2>What's Improved</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> improved the user-facing documentation and logging to make use of the Trusted Publishing flow terminology cohesive with PyPI in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/143\">pypa/gh-action-pypi-publish#143</a>. Trusted Publishing used to be referred to as OpenID Connect (OIDC) \u2014 the underlying technology that is being used to make it work. He also made the action display the cause of the Trusted Publishing flow being selected by the action via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/142\">pypa/gh-action-pypi-publish#142</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.4...v1.8.5\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.4...v1.8.5</a></p>\n<h2>v1.8.4</h2>\n<h2>What's Improved</h2>\n<ul>\n<li><a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a> cleaned up the double whitespaces in the OIDC flow logging in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/140\">pypa/gh-action-pypi-publish#140</a></li>\n<li><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> added a title and a docs link to the OIDC error output in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/139\">pypa/gh-action-pypi-publish#139</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.3...v1.8.4\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.3...v1.8.4</a></p>\n<h2>v1.8.3</h2>\n<h2>What's New</h2>\n<p>This release improves the logging detalization of which authentication mode is selected when the action runs. It surfaces this detail to the workflow run summary page as annotations. The change was contributed by <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/136\">pypa/gh-action-pypi-publish#136</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.2...v1.8.3\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.2...v1.8.3</a></p>\n<h2>v1.8.2</h2>\n<h2>What's Changed</h2>\n<p>This release started printing out full OIDC error messages to console, instead of just one line -- by <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/134\">pypa/gh-action-pypi-publish#134</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.1...v1.8.2\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.1...v1.8.2</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/0bf742be3ebe032c25dd15117957dc15d0cfc38d\"><code>0bf742b</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/143\">#143</a> from trail-of-forks/tob-rewrite-oidc-refs</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/30c382209e2edb18e26e0cd15ea4ddbb62e4d249\"><code>30c3822</code></a> oidc-exchange: another link</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/89ddbeae048cf21191cb26cde13abd949438b484\"><code>89ddbea</code></a> README: retitle, add note</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a0f29a5690c3e59076bbc8d1349b7f872249ac83\"><code>a0f29a5</code></a> Apply suggestions from code review</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/0b567d5b015a5db43765f0ae2b3a215ea9d0150b\"><code>0b567d5</code></a> oidc-exchange, twine-upload: remove more OIDC refs</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/4372cb558524908cb34fcd57d7bc50d397daa875\"><code>4372cb5</code></a> README: replace OIDC with &quot;trusted publishing&quot;</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/69efb8cbfb5ff087b7145d695b90bba0c4a53029\"><code>69efb8c</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/142\">#142</a> from trail-of-forks/tob-indicate-oidc</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/dfde872acc38fce52eaf13748aaaa11845c89228\"><code>dfde872</code></a> Apply suggestions from code review</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/3d567f44ce3fb3bbcf9248d05726c6c9f811b67f\"><code>3d567f4</code></a> twine-upload: expound</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/67b747a9c83c5d2526d31259d1479f46210ffd0e\"><code>67b747a</code></a> oidc-exchange: more explanation</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.1...v1.8.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.1&new-version=1.8.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-04-11T17:26:37Z",
  "comments":1,
  "created_at":"2023-04-03T17:59:49Z",
  "draft":false,
  "id":1652517000,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ng4M7",
  "number":2356,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-11T17:26:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.1 to 1.8.5",
  "updated_at":"2023-04-11T17:26:38Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"I didn't find the link to https://mybinder.org/ very helpful here. I think it makes sense to like the mybinder where you can run awkward ",
  "closed_at":"2023-04-04T13:49:25Z",
  "comments":0,
  "created_at":"2023-04-04T00:53:25Z",
  "draft":false,
  "id":1652988997,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Nieki",
  "number":2357,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-04T13:49:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: update mybinder link to example notebook",
  "updated_at":"2023-04-04T13:49:25Z",
  "user":"MDQ6VXNlcjE3MTYyNzI0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Added a import statement here to make it more copy-pastable",
  "closed_at":"2023-04-04T12:54:18Z",
  "comments":2,
  "created_at":"2023-04-04T00:57:44Z",
  "draft":false,
  "id":1652992130,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NifP-",
  "number":2358,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-04T12:54:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add import statement",
  "updated_at":"2023-04-08T19:15:31Z",
  "user":"MDQ6VXNlcjE3MTYyNzI0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR splits the continuation in broadcasting into separate closures that we can more easily refactor.",
  "closed_at":"2023-04-06T05:44:08Z",
  "comments":1,
  "created_at":"2023-04-05T15:34:20Z",
  "draft":false,
  "id":1655852140,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NsGiy",
  "number":2359,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-06T05:44:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: improve broadcasting logic readability",
  "updated_at":"2023-04-06T05:44:10Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`jupyterlite-sphinx` requires `jupyterlite[piplite]` which does not seem to consider the `jupyterlite` constraint, leading to failing docs CI jobs. This PR updates our constraint to include the extra.",
  "closed_at":"2023-04-05T18:25:29Z",
  "comments":0,
  "created_at":"2023-04-05T15:43:21Z",
  "draft":false,
  "id":1655876209,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NsKS2",
  "number":2360,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-05T18:25:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix extra for pyodide",
  "updated_at":"2023-04-05T18:25:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"A bare minimum feature of `asarray` is the ability to build a typetracer from a rectilinear array comprised of Python sequences. This PR adds that limited capability, for use in future refactoring work.",
  "closed_at":"2023-04-05T18:55:56Z",
  "comments":1,
  "created_at":"2023-04-05T15:59:07Z",
  "draft":false,
  "id":1655902000,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NsP02",
  "number":2361,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-05T18:55:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support N-d sequences in `TypeTracer.asarray`",
  "updated_at":"2023-04-05T18:55:57Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"In dask-contrib/dask-awkward/issues/213, @masonproffitt asked for\r\n\r\n```python\r\n>>> a = ak.Array([1])\r\n>>> ak.zip({'a': a, 'b': {'c': a}})\r\n<Array [{a: 1, b: {...}}] type='1 * {a: int64, b: {c: var * int64}}'>\r\n```\r\n\r\nto work in dask-awkward as it does in Awkward. But `ak.zip` doesn't really do a nested zip; it just calls `ak.to_layout` on each of the values of the dict.\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/6a24ed0d436bcd158f634d9bd9f6d664fff6bd2b/src/awkward/operations/ak_zip.py#L174-L190\r\n\r\nFor a nested dict (general, non-Awkward, non-ndarray container), that means it switches over into `ak.from_iter`, which (1) is slow, (2) ignores numeric types, and (3) doesn't zip: it makes the difference between an array of structs and a struct of arrays in the data type that you get back.\r\n\r\n```python\r\n>>> array = ak.zip({\r\n...     \"a\": {\"b\": np.arange(10, dtype=np.int8), \"c\": np.arange(10, dtype=np.int16)},\r\n...     \"d\": {\"e\": np.arange(10, dtype=np.int32), \"f\": np.arange(10, dtype=np.float32)},\r\n... })\r\n>>> array.show(type=True)\r\ntype: {\r\n    a: {\r\n        b: var * int64,\r\n        c: var * int64\r\n    },\r\n    d: {\r\n        e: var * int64,\r\n        f: var * float64\r\n    }\r\n}\r\n{a: {b: [0, 1, 2, 3, 4, ..., 6, 7, 8, 9], c: [0, 1, ..., 9]},\r\n d: {e: [0, 1, 2, 3, 4, ..., 6, 7, 8, 9], f: [0, 1, ..., 9]}}\r\n```\r\n\r\nwhereas\r\n\r\n```python\r\n>>> array2 = ak.zip({\"b\": np.arange(10, dtype=np.int8), \"c\": np.arange(10, dtype=np.int16)})\r\n>>> array2.show(type=True)\r\ntype: 10 * {\r\n    b: int8,\r\n    c: int16\r\n}\r\n[{b: 0, c: 0},\r\n {b: 1, c: 1},\r\n {b: 2, c: 2},\r\n {b: 3, c: 3},\r\n {b: 4, c: 4},\r\n {b: 5, c: 5},\r\n {b: 6, c: 6},\r\n {b: 7, c: 7},\r\n {b: 8, c: 8},\r\n {b: 9, c: 9}]\r\n```\r\n\r\nYou see all of the integer types turn into `int64` and `float32` into `float64` because `ak.from_iter` treats them as Python `int` and `float`, which loses dtype. You also see a different structure for the nested object.\r\n\r\nIt's not obvious to me what the correct behavior is. Treating any expected array-like uniformly with `ak.to_layout` is good for consistency, but @masonproffitt's interpretation is natural, too.\r\n\r\n_Originally posted by @jpivarski in https://github.com/dask-contrib/dask-awkward/issues/213#issuecomment-1497887851_",
  "closed_at":null,
  "comments":2,
  "created_at":"2023-04-05T17:57:17Z",
  "id":1656054088,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5itWFI",
  "number":2363,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"ak.zip seems to work recursively, but it doesn't really",
  "updated_at":"2023-05-31T16:09:02Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\n```python\r\n>>> array = ak.Array([\"one\", \"two\", \"three\"])\r\n\r\n>>> ak.to_numpy(array)\r\narray(['one', 'two', 'three'], dtype='<U5')\r\n\r\n>>> array[0:0].type.show()\r\n0 * string\r\n\r\n>>> ak.to_numpy(array[0:0])\r\narray([], dtype=float64)\r\n```\r\n\r\nSame for bytestrings.",
  "closed_at":"2023-05-10T08:50:41Z",
  "comments":0,
  "created_at":"2023-04-05T18:20:50Z",
  "id":1656087329,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5iteMh",
  "number":2364,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.to_numpy turns an empty array of type string into an empty array of type float64",
  "updated_at":"2023-05-10T08:50:41Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> **Warning**\r\n> Depends upon #2424 and #2425\r\n\r\nCloses #1805, closes #2338 (?) by adding a function `ak.enforce_type` that converts an existing layout to a new high-level type. The following rules apply:\r\n\r\n- Indexed layouts are projected out if their type changes.\r\n- Option types can be either:\r\n  - added\r\n  - removed (if there are no missing values)\r\n- Unions can either:\r\n  - grow\r\n  - shrink (if the lost content(s) are not referenced by any tags)\r\n  - remain equivalent\r\n  - change by a single content\r\n  - project to a single type\r\n  - convert to a single type\r\n- Records can be converted:\r\n  - tuple\u2192tuple \r\n     - N contents to M types (N < M) if the trailing (M-N) types are options\r\n     - N contents to M types (N > M) drops the trailing (N-M) contents\r\n  - record\u2192record\r\n      - matching fields are kept, missing fields dropped, new fields added (but must be option types)\r\n- List types can become regular/irregular (regularity is validated with known data) \r\n- NumPy arrays can change dtypes\r\n- Unknown contents (`EmptyArray`) can:\r\n  - be removed at any node,\r\n  - be added at any node, provided that they're wrapped in an option",
  "closed_at":"2023-05-05T15:31:49Z",
  "comments":26,
  "created_at":"2023-04-05T21:57:08Z",
  "draft":false,
  "id":1656346636,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ntuk7",
  "number":2365,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-05T15:31:49Z"
  },
  "reactions":{
   "heart":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.enforce_type`",
  "updated_at":"2023-05-05T15:31:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-04-07T12:48:56Z",
  "comments":3,
  "created_at":"2023-04-06T08:28:08Z",
  "draft":false,
  "id":1656916923,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NvmVf",
  "number":2366,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-07T12:48:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: avoid stack overflow with std::unique_ptr linked list",
  "updated_at":"2023-04-07T12:48:57Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\n\nI was surprised to find that this doesn't work for `Record`s or `RecordArray`s:\r\n\r\n```python\r\n>>> import awkward as ak\r\n>>> record = ak.Record({'a': 1})\r\n>>> record == record\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/numpy/lib/mixins.py\", line 21, in func\r\n    return ufunc(self, other)\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/highlevel.py\", line 2028, in __array_ufunc__\r\n    return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_connect/numpy.py\", line 294, in array_ufunc\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1061, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1040, in apply_step\r\n    return continuation()\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 757, in continuation\r\n    outcontent = apply_step(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1040, in apply_step\r\n    return continuation()\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 473, in continuation\r\n    return apply_step(\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 1040, in apply_step\r\n    return continuation()\r\n  File \"/home/user/miniconda3/envs/func_adl_uproot_rc/lib/python3.10/site-packages/awkward/_broadcasting.py\", line 953, in continuation\r\n    raise ak._errors.wrap_error(\r\nValueError: while calling\r\n\r\n    numpy.equal.__call__(\r\n        <Record {a: 1} type='{a: int64}'>\r\n        <Record {a: 1} type='{a: int64}'>\r\n    )\r\n\r\nError details: cannot broadcast records in equal\r\n```\r\n\r\nIt looks like this traces back to <https://github.com/scikit-hep/awkward/issues/457>. To quote from there:\r\n\r\n\r\n> Note that NumPy does not define such an operation on [structured arrays](https://numpy.org/doc/stable/user/basics.rec.html):\r\n> \r\n> ```python\r\n> >>> np_array = np.array([(1, 1.1), (2, 2.2), (3, 3.3)], [(\"x\", int), (\"y\", float)])\r\n> >>> np_array\r\n> array([(1, 1.1), (2, 2.2), (3, 3.3)], dtype=[('x', '<i8'), ('y', '<f8')])\r\n> \r\n> >>> np_array + 1\r\n> Traceback (most recent call last):\r\n>   File \"<stdin>\", line 1, in <module>\r\n> TypeError: invalid type promotion\r\n> ```\r\n\r\nThis is true for most ufuncs, but NumPy *does* support this for equality and inequality:\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> np_array = np.array([(1, 1.1), (2, 2.2), (3, 3.3)], [(\"x\", int), (\"y\", float)])\r\n>>> np_array == np_array\r\narray([ True,  True,  True])\r\n>>> np_array != np_array\r\narray([False, False, False])\r\n```",
  "closed_at":null,
  "comments":4,
  "created_at":"2023-04-06T13:17:16Z",
  "id":1657412442,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5iyhta",
  "number":2367,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`Record` support for `==` and `!=`",
  "updated_at":"2024-01-20T00:21:24Z",
  "user":"MDQ6VXNlcjMyNzczMzA0"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In general, we have more ways of comparing types than the argument-less `__eq__` protocol permits. This PR adds support for comparison of just the nominal parameters, or all parameters.\r\n\r\nIf we're happy with this idea, I'd want to gradually rework the `Content.is_equal_to` and add a form equivalent too, probably.\r\n\r\nIn future, we can extend this signature to e.g. allow same-kind numeric comparisons.",
  "closed_at":"2023-04-07T19:49:22Z",
  "comments":5,
  "created_at":"2023-04-06T15:05:43Z",
  "draft":false,
  "id":1657601589,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Nxzug",
  "number":2368,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-07T19:49:22Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add type equality `is_equal_to` member",
  "updated_at":"2023-04-07T19:49:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nPython's `hasattr` function works by catching an `AttributeError`. We intercept missing attributes for `ak.Array` and `ak.Record`, and throw a rewritten exception in its place.\r\n\r\ni.e.\r\n```python\r\nhasattr(array, \"no-key\")\r\n```\r\ninvokes the array-repr machinery due to traceback formatting.\r\n\r\nThis is bad for several reasons (performance, typetracer, ...)",
  "closed_at":"2023-04-07T19:26:21Z",
  "comments":0,
  "created_at":"2023-04-06T16:51:54Z",
  "id":1657753769,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5iz1Cp",
  "number":2369,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Duck-type operations on `ak.Array` and `ak.Record` stringify the array",
  "updated_at":"2023-04-07T19:26:21Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2369 by deferring stringifying until the top-level exception is caught by the error context. These exceptions leave Awkward's scope, and therefore count as true exceptions. Otherwise, we're decorating exceptions that might not be shown to the user, doing more busywork as a result!\r\n\r\nNB, there are other ways to fix #2369, but this one also removes a lot of boilerplate!\r\n\r\n",
  "closed_at":"2023-04-07T19:26:20Z",
  "comments":12,
  "created_at":"2023-04-06T16:52:38Z",
  "draft":false,
  "id":1657755010,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5NyS0q",
  "number":2370,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-07T19:26:20Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: wrap exceptions at catch time",
  "updated_at":"2023-04-07T19:26:21Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Although records and unions have a canonical `contents` order that they preserve, it would be correct to say that two records or two unions are equal if they have the same set of `contents`, regardless of order (`zip(fields, contents)` in the case of records, which puts an ordering back in for tuples).\r\n\r\nI was trying some examples with our new canonicalization rules to see if we'd have to distinguish between types like\r\n\r\n```\r\nA = union[option[X], Y]\r\n```\r\n\r\nand\r\n\r\n```\r\nB = union[X, option[Y]]\r\n```\r\n\r\nI found that an attempt to create\r\n\r\n```\r\nC = option[union[X, Y]]\r\n```\r\n\r\nforces you to go through `simplified` and makes\r\n\r\n```\r\nD = union[option[X], option[Y]]\r\n```\r\n\r\nbut it's still possible to create an asymmetric case (`A` or `B`). How about if we squash that avenue as well? That is, an attempt to construct\r\n\r\n```python\r\nUnionArray(tags, index, [option_type_array, non_option_type_array])\r\n```\r\n\r\nwould (with a future rule) fail and force you to use `UnionArray.simplified` (already required wherever the codebase makes `UnionArray`, and then `UnionArray.simplified` would wrap all the non-option type arrays in an `UnmaskedArray` if any one of the provided `contents` is option-type.\r\n\r\nHow about it? Then you'd have fewer cases to consider when checking equality of types: you wouldn't have to worry about whether `A` and `B` should be considered equivalent because they can't exist (they always be `D`).\r\n\r\nThis comment can become a new issue, if you like that idea.\r\n\r\n_Originally posted by @jpivarski in https://github.com/scikit-hep/awkward/pull/2368#discussion_r1160806288_\r\n            ",
  "closed_at":"2023-04-25T22:46:45Z",
  "comments":0,
  "created_at":"2023-04-07T16:20:46Z",
  "id":1658975402,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i4fSq",
  "number":2371,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`union[X, ?Y]` should be canonicalized to `union[?X, ?Y]`",
  "updated_at":"2023-04-25T22:46:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD, after #2370\n\n### Description and code to reproduce\n\nEven after applying #2370 (which fixes a similar bug), the following code:\r\n\r\n```python\r\nimport json\r\nimport awkward as ak\r\n\r\n\r\ndef delta_r2(a, b):\r\n    return (a.eta - b.eta) ** 2 + (a.phi - b.phi) ** 2\r\n\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\", \"jet\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list!\",\r\n        },\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"jet_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"jet_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"jet_list!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form)\r\n\r\nttarray = ak.Array(ttlayout)\r\n\r\na, b = ak.unzip(ak.cartesian([ttarray.muon, ttarray.jet], axis=1, nested=True))\r\n\r\nprint(\"ab>>>\", report.data_touched, \"\\n\")\r\n\r\nmval = delta_r2(a, b)\r\n\r\nprint(\"dr>>>>\", report.data_touched, \"\\n\")\r\n\r\nmmin = ak.argmin(mval, axis=2)\r\n\r\nprint(\"mmin>>\", report.data_touched, \"\\n\")\r\n\r\nak.firsts(b[mmin], axis=2).pt\r\n\r\nprint(\"pt>>>>\", report.data_touched, \"\\n\")\r\n```\r\n\r\nproduces the following output:\r\n\r\n```\r\nab>>> ['muon_list!', 'jet_list!', 'muon_crossref_index!', 'jet_crossref_index!'] \r\n\r\ndr>>>> ['muon_list!', 'jet_list!', 'muon_crossref_index!', 'jet_crossref_index!', 'muon_eta!', 'jet_eta!', 'muon_phi!', 'jet_phi!'] \r\n\r\nmmin>> ['muon_list!', 'jet_list!', 'muon_crossref_index!', 'jet_crossref_index!', 'muon_eta!', 'jet_eta!', 'muon_phi!', 'jet_phi!'] \r\n\r\npt>>>> ['muon_list!', 'jet_list!', 'muon_crossref_index!', 'jet_crossref_index!', 'muon_eta!', 'jet_eta!', 'muon_phi!', 'jet_phi!', 'jet_pt!', 'jet_crossref_content!', 'jet_thing1!'] \r\n```\r\n\r\nIt's a little mysterious (but not a major pain point) that the \"crossref indexes\" are touched by the `ak.cartesian` step, which ought to treat the muons and jets as opaque objects. A little mysterious, and maybe related.\r\n\r\nBut the real problem is represented by the \"jet thing\" in the final output. The \"jet thing\" should never have been accessed by any of these operations: `delta_r2`, `ak.argmin`, the `b[mmin]` slice, or `ak.firsts`. It's also a stand-in for dozens of large fields, so it's a real pain point that needs to be addressed.",
  "closed_at":"2023-04-07T18:59:41Z",
  "comments":6,
  "created_at":"2023-04-07T17:08:38Z",
  "id":1659013166,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i4ogu",
  "number":2372,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.unzip` touches all contents whilst typetracing",
  "updated_at":"2023-04-07T18:59:41Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This fixes #2372 by arresting recursion at the first record or union. I think this was the original intention, but the codebase was in a lot of flux at this point, and so it was likely missed.\r\n\r\nNote that, in #2372 there are additional cases below the `unzip` that might also need addressing. We should raise these as new bugs.",
  "closed_at":"2023-04-07T18:59:39Z",
  "comments":10,
  "created_at":"2023-04-07T17:42:56Z",
  "draft":false,
  "id":1659037624,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5N2Ydx",
  "number":2373,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-07T18:59:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `ak.unzip` visits all contents",
  "updated_at":"2023-04-07T19:07:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\nmain + #2370 & #2373\r\n\r\n### Description and code to reproduce\r\n\r\n```python3\r\nimport json\r\nimport awkward as ak\r\n\r\n\r\ndef delta_r2(a, b):\r\n    return (a.eta - b.eta) ** 2 + (a.phi - b.phi) ** 2\r\n\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\", \"jet\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list!\",\r\n        },\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"jet_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"jet_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"jet_list!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form)\r\n\r\nttarray = ak.Array(ttlayout)\r\n\r\na = ak.cartesian([ttarray.muon, ttarray.jet], axis=1, nested=True)\r\n\r\nprint(\"ab>>>\", report.data_touched, \"\\n\")\r\n\r\nmval = delta_r2(a[\"0\"], a[\"1\"])\r\n\r\nprint(\"dr>>>>\", report.data_touched, \"\\n\")\r\n\r\nmmin = ak.argmin(mval, axis=2)\r\n\r\nprint(\"mmin>>\", report.data_touched, \"\\n\")\r\n\r\nak.firsts(a[\"1\"][mmin], axis=2).pt\r\n\r\nprint(\"pt>>>>\", report.data_touched, \"\\n\")\r\n```\r\n\r\nproduces:\r\n```\r\nab>>> ['muon_list!', 'jet_list!'] \r\n\r\ndr>>>> ['muon_list!', 'jet_list!', 'muon_eta!', 'jet_eta!', 'muon_phi!', 'jet_phi!'] \r\n\r\nmmin>> ['muon_list!', 'jet_list!', 'muon_eta!', 'jet_eta!', 'muon_phi!', 'jet_phi!'] \r\n\r\npt>>>> ['muon_list!', 'jet_list!', 'muon_eta!', 'jet_eta!', 'muon_phi!', 'jet_phi!', 'jet_pt!', 'jet_crossref_index!', 'jet_crossref_content!', 'jet_thing1!'] \r\n\r\n```\r\n\r\nWhich is touching everything in the \"jet\" object in this case. It should only touch \"jet_pt!\" in addition to what is required for the matching criteria (delta_r in this case, could be anything).\r\nFollow up to #2372",
  "closed_at":"2023-04-08T16:51:38Z",
  "comments":0,
  "created_at":"2023-04-07T18:30:13Z",
  "id":1659072978,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i43HS",
  "number":2374,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.cartesian` followed by indexing operation over-touches data",
  "updated_at":"2023-04-08T16:51:38Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Partially fixes #2374 \r\n\r\nThis looks like a bug; our current logic should always propagate backends without needing to manually convert things. Even though this result is already a typetracer, calling `to_typetracer` visits all buffers (it doesn't check, which keeps the deliberate path faster)",
  "closed_at":"2023-04-08T16:51:37Z",
  "comments":2,
  "created_at":"2023-04-07T19:25:04Z",
  "draft":false,
  "id":1659117908,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5N2osV",
  "number":2375,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-08T16:51:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: remove spurious typetracer conversion",
  "updated_at":"2023-04-08T16:51:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.1.1\r\n\r\n### Description and code to reproduce\r\n\r\nSo, this is a somewhat silly edge case, but I'd rather not write exceptions for it. \r\n\r\nIn awkward 1.8.0 I could do;\r\n```python3\r\nimport awkward as ak\r\nassert ak.__version__ == '1.8.0'\r\nak.to_list(['mystring'])\r\n```\r\n\r\nSometimes I want a function to accept any list-like object, either an awkward array, a numpy array or a list, so it's convenient if `ak.to_list` works the same on all of those.\r\n\r\nHowever, now in awkward 2.1.1\r\n\r\n```python3\r\nimport awkward as ak\r\nassert ak.__version__ == '2.1.1'\r\nak.to_list(['mystring'])\r\n```\r\nleads to\r\n```\r\n                                                                                                                    \r\n    [... skipping similar frames: <listcomp> at line 80 (1487 times), _impl at line 80 (1487 times)]                \r\n                                                                                                                    \r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/operations/ak_to_list.py:80, in _impl(array)\r\n     77     return {k: _impl(v) for k, v in array.items()}                                                          \r\n     79 elif isinstance(array, Iterable):                 \r\n---> 80     return [_impl(x) for x in array]              \r\n     82 else:                                             \r\n     83     return array                                  \r\n\r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/operations/ak_to_list.py:80, in <listcomp>(.0)\r\n     77     return {k: _impl(v) for k, v in array.items()}                                                          \r\n     79 elif isinstance(array, Iterable):                 \r\n---> 80     return [_impl(x) for x in array]              \r\n     82 else:                                             \r\n     83     return array                                  \r\n\r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/operations/ak_to_list.py:49, in _impl(array)\r\n     48 def _impl(array):                                 \r\n---> 49     if isinstance(                                \r\n     50         array,                                    \r\n     51         (                                         \r\n     52             ak.highlevel.Array,                   \r\n     53             ak.highlevel.Record,                  \r\n     54             ak.highlevel.ArrayBuilder,            \r\n     55         ),                                        \r\n     56     ):                                            \r\n     57         return array.to_list()                    \r\n     59     elif isinstance(array, (ak.contents.Content, ak.record.Record)):                                        \r\n\r\nFile <frozen abc>:119, in __instancecheck__(cls, instance)                                                          \r\n\r\nRecursionError: maximum recursion depth exceeded in comparison               \r\n```\r\n\r\nThe problem is almost certainly that a char (string length 1) is still iterable.\r\nIf it is considered reasonable to handle such a silly edge case, I will make a pull request?\r\n",
  "closed_at":"2023-07-02T17:08:23Z",
  "comments":2,
  "created_at":"2023-04-08T11:41:40Z",
  "id":1659497099,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i6eqL",
  "number":2376,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.to_list` has stopped working on some edge cases between awkward 1.8.0 and 2.1.1",
  "updated_at":"2023-07-02T17:08:23Z",
  "user":"MDQ6VXNlcjEyOTk2NzYz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.1\n\n### Description and code to reproduce\n\nTo reproduce the problem;\r\n```python3\r\n[ins] In [1]: import awkward as ak\r\n         ...: ak.__version__\r\nOut[1]: '2.1.1'\r\n\r\n[ins] In [3]: empty = ak.Array([])\r\n         ...: ak.flatten(empty[empty])\r\n---------------------------------------------------------------------------\r\nAxisError                                 Traceback (most recent call last)\r\nCell In[3], line 1\r\n----> 1 ak.flatten(empty[empty])\r\n\r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/operations/ak_flatten.py:164, in flatten(array, axis, highlevel, behavior)\r\n     12 \"\"\"\r\n     13 Args:\r\n     14     array: Array-like data (anything #ak.to_layout recognizes).\r\n   (...)\r\n    158      999]\r\n    159 \"\"\"\r\n    160 with ak._errors.OperationErrorContext(\r\n    161     \"ak.flatten\",\r\n    162     {\"array\": array, \"axis\": axis, \"highlevel\": highlevel, \"behavior\": behavior},\r\n    163 ):\r\n--> 164     return _impl(array, axis, highlevel, behavior)\r\n\r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/operations/ak_flatten.py:232, in _impl(array, axis, highlevel, behavior)\r\n    229     return wrap_layout(out, behavior, highlevel, like=array)\r\n    231 else:\r\n--> 232     out = ak._do.flatten(layout, axis)\r\n    233     return wrap_layout(out, behavior, highlevel, like=array)\r\n\r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/_do.py:253, in flatten(layout, axis)\r\n    252 def flatten(layout: Content, axis: int = 1) -> Content:\r\n--> 253     offsets, flattened = layout._offsets_and_flattened(axis, 1)\r\n    254     return flattened\r\n\r\nFile ~/Programs/anaconda3/envs/tree2/lib/python3.11/site-packages/awkward/contents/numpyarray.py:415, in NumpyArray._offsets_and_flattened(self, axis, depth)\r\n    412     return self.to_RegularArray()._offsets_and_flattened(axis, depth)\r\n    414 else:\r\n--> 415     raise ak._errors.wrap_error(\r\n    416         np.AxisError(f\"axis={axis} exceeds the depth of this array ({depth})\")\r\n    417     )\r\n\r\nAxisError: while calling\r\n\r\n    ak.flatten(\r\n        array = <Array [] type='0 * int64'>\r\n        axis = 1\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n\r\nError details: axis=1 exceeds the depth of this array (1)\r\n```\r\n\r\nwhere as by contrast, in the older versions;\r\n\r\n```python3\r\n\r\n[ins] In [1]: import awkward as ak\r\n         ...: print(ak.__version__)\r\n1.8.0\r\n\r\n[nav] In [2]: empty = ak.Array([])\r\n         ...: ak.flatten(empty[empty])\r\nOut[2]: <Array [] type='0 * unknown'>\r\n```\r\n\r\nThis does seem like a bug to me, we can't guarantee that every list that we call flatten on will have items in.\r\n\r\nNot impossible that it's related to this bug; https://github.com/scikit-hep/awkward/issues/2207 \r\nI will check out the repo some time and see if that fix solves it.\r\n",
  "closed_at":null,
  "comments":2,
  "created_at":"2023-04-08T13:13:10Z",
  "id":1659520200,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i6kTI",
  "number":2377,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`ak.flatten` raises `np.AxisError` for `unknown[unknown]`, but not for `unknown`",
  "updated_at":"2023-07-02T18:04:35Z",
  "user":"MDQ6VXNlcjEyOTk2NzYz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Adds @raybellwaves as a contributor for doc.\n\nThis was requested by jpivarski [in this comment](https://github.com/scikit-hep/awkward/pull/2358#issuecomment-1500959298)\n\n[skip ci]",
  "closed_at":"2023-04-08T19:15:52Z",
  "comments":0,
  "created_at":"2023-04-08T19:15:28Z",
  "draft":false,
  "id":1659618902,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5N4Jbm",
  "number":2379,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-08T19:15:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add raybellwaves as a contributor for doc",
  "updated_at":"2023-04-08T19:15:53Z",
  "user":"MDM6Qm90NDY0NDczMjE="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nWe should re-use the logic from `to_layout` in `to_list`, rather than maintaining highly similar variants of the same code.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-04-08T21:43:56Z",
  "id":1659654249,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i7FBp",
  "number":2382,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Use `to_layout` in `to_list`",
  "updated_at":"2024-01-19T23:56:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"Hello! \n\nI hope you are doing well! \n\nWe are a security research team. Our tool automatically detected a vulnerability in this repository. We want to disclose it responsibly.  GitHub has a feature called **Private vulnerability reporting**, which enables security research to privately disclose a vulnerability. Unfortunately, it is not enabled for this repository. \n\nCan you enable it, so that we can report it? \n\nThanks in advance! \n\nPS: you can read about how to enable private vulnerability reporting here: https://docs.github.com/en/code-security/security-advisories/repository-security-advisories/configuring-private-vulnerability-reporting-for-a-repository",
  "closed_at":"2023-05-15T09:46:49Z",
  "comments":3,
  "created_at":"2023-04-10T13:25:39Z",
  "id":1660784647,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i_ZAH",
  "number":2383,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Reporting a vulnerability",
  "updated_at":"2023-05-15T09:46:49Z",
  "user":"MDQ6VXNlcjQ2MjE2NDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.2\n\n### Description and code to reproduce\n\nThe following reproducer should only need to touch ```'jet_list_outer!'``` and ```jet_pt!```:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\", \"jet\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"jet_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {\"__record__\": \"TestBehavior\"},\r\n                \"form_key\": \"jet_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"jet_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\n\r\n@ak.mixin_class(ak.behavior)\r\nclass TestBehavior:\r\n    @ak.mixin_class_method(np.add, {\"TestBehavior\"})\r\n    def add(self, other):\r\n        return ak.zip(\r\n            {\r\n                \"pt\": self.pt + other.pt,\r\n            },\r\n            with_name=\"TestBehavior\",\r\n            behavior=self.behavior,\r\n        )\r\n\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\na = ak.combinations(ttarray.jet, 3, fields=[\"j1\", \"j2\", \"j3\"])\r\n\r\nprint(\"combo: \", report.data_touched)\r\n\r\na[\"something\"] = a.j1 + a.j2 + a.j3\r\n\r\nprint(\"assign:\", report.data_touched)\r\n```\r\nHowever, its outcome is:\r\n```\r\ncombo:  ['jet_list_outer!']\r\nassign: ['jet_list_outer!', 'jet_pt!', 'jet_eta!', 'jet_phi!', 'jet_crossref_index!', 'jet_thing1!']\r\n```\r\n\r\nWhich is everything in this mock jet object. This means that, as things are, using behaviors in dask awkward becomes data-inefficient very quickly.\r\n\r\n@agoose77 @alexander-held ",
  "closed_at":"2023-04-12T18:59:26Z",
  "comments":1,
  "created_at":"2023-04-10T14:36:21Z",
  "id":1660881988,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5i_wxE",
  "number":2384,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Using a behavior override on whole object touches whole object",
  "updated_at":"2023-04-12T18:59:27Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nOne should be able to add new fields to a `RecordArray` with no fields:\r\n\r\n```python\r\n>>> no_fields = ak.Array([{}, {}, {}, {}, {}])\r\n>>> no_fields[\"new_field\"] = ak.Array([1, 2, 3, 4, 5])\r\n```\r\n\r\nbut there's an error:\r\n\r\n```\r\nValueError: no tuples or records in array; cannot add a new field\r\n\r\nThis error occurred while calling\r\n\r\n    ak.Array.__setitem__(\r\n        self = <Array [{}, {}, {}, {}, {}] type='5 * {}'>\r\n        field_name = 'new_field'\r\n        field_value = <Array [1, 2, 3, 4, 5] type='5 * int64'>\r\n    )\r\n```\r\n\r\nThis happens because\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/be60b5330f7f872fd01b34c44d2686eeafa9bbfc/src/awkward/operations/ak_with_field.py#L86-L87\r\n\r\nis protecting the subsequent code from having to check for the case that `base` doesn't even have a `RecordArray`, but `base.fields == []` isn't the way to do it: you can also get that from a `RecordArray` with no fields.\r\n\r\nInstead, that guard needs to check for the existence of a `RecordArray` some other way. Perhaps the following?\r\n\r\n```python\r\ntry:\r\n    ak._do.recursively_apply(no_fields.layout, lambda x, **kwargs: None, allow_records=False)\r\nexcept ValueError:\r\n    pass\r\nelse:\r\n    raise ValueError(\"no tuples or records in array; cannot add a new field\") from None\r\n```\r\n\r\nI'm not entirely happy about repurposing an anti-guard for one function as a guard for another. Also, it should complain if any of the branches of a `UnionArray` are not `RecordArrays`.",
  "closed_at":"2023-04-10T20:38:01Z",
  "comments":4,
  "created_at":"2023-04-10T19:12:05Z",
  "id":1661222174,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5jBD0e",
  "number":2385,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.with_field is has an overzealous check for excluding RecordArrays",
  "updated_at":"2023-04-10T20:38:01Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nFilling out the previous bug report, the full error message was\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_with_field.py\", line 47, in with_field\r\n    return _impl(array, what, where, highlevel, behavior)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_with_field.py\", line 87, in _impl\r\n    raise ValueError(\"no tuples or records in array; cannot add a new field\")\r\nValueError: no tuples or records in array; cannot add a new field\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1025, in __setitem__\r\n    self._layout = ak.operations.with_field(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_with_field.py\", line 47, in with_field\r\n    return _impl(array, what, where, highlevel, behavior)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 54, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 64, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nValueError: no tuples or records in array; cannot add a new field\r\n\r\nThis error occurred while calling\r\n\r\n    ak.with_field(\r\n        array = <Array [[{}, {}], [], [{}]] type='3 * var * {}'>\r\n        what = 123\r\n        where = 'new_field'\r\n        highlevel = False\r\n        behavior = None\r\n    )\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1028, in __setitem__\r\n    self._numbaview = None\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 54, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 64, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nValueError: no tuples or records in array; cannot add a new field\r\n\r\nThis error occurred while calling\r\n\r\n    ak.with_field(\r\n        array = <Array [[{}, {}], [], [{}]] type='3 * var * {}'>\r\n        what = 123\r\n        where = 'new_field'\r\n        highlevel = False\r\n        behavior = None\r\n    )\r\n\r\nThis error occurred while calling\r\n\r\n    ak.Array.__setitem__(\r\n        self = <Array [[{}, {}], [], [{}]] type='3 * var * {}'>\r\n        field_name = 'new_field'\r\n        field_value = 123\r\n    )\r\n```\r\n\r\nThe `ak.Array.__setitem__` call is calling `ak.with_field`, but only the outermost Awkward call should be printing its context. We generally try to avoid having Awkward high-level functions call other high-level functions (biggest exception: `ak.to_layout`), but when we do, only the first entry into an Awkward high-level function from the outside (`ErrorContext.primary()`) should count.\r\n\r\nConsidering that Python also prints a chained exception, the notes upon notes dominate the stack trace text, making it hard to see which information is not a duplicate/triplicate/quadruplicate.\r\n\r\n(This was introduced by #2370.)",
  "closed_at":"2023-04-10T20:41:35Z",
  "comments":1,
  "created_at":"2023-04-10T19:19:59Z",
  "id":1661236212,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5jBHP0",
  "number":2386,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Error message handling should only show the primary `ErrorContext`",
  "updated_at":"2023-04-10T20:41:35Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2385 \r\n\r\nI didn't yet add `purelist_is_record`; this feels like a very niche function, so we can start with it only as a local function to see whether its need crops up again.",
  "closed_at":"2023-04-10T20:38:00Z",
  "comments":1,
  "created_at":"2023-04-10T19:39:55Z",
  "draft":false,
  "id":1661257556,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5N9Zrn",
  "number":2387,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-10T20:37:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support empty records in `ak.with_field`",
  "updated_at":"2023-04-10T20:38:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We were previously formatting exceptions for each context manager, which is clearly wrong! (oops)\r\n\r\nThis PR course corrects, and ensures that only the primary context actually tries to format the exception.\r\n\r\nFixes #2386 ",
  "closed_at":"2023-04-10T20:41:33Z",
  "comments":2,
  "created_at":"2023-04-10T19:49:37Z",
  "draft":false,
  "id":1661268337,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5N9b9R",
  "number":2388,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-10T20:41:33Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: only format exception for primary context",
  "updated_at":"2023-04-10T20:41:35Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\nThis PR replaces a hard-coded loop-based search with a faster per-type lookup for each nplike.\r\n\r\n## TL\r\n### Context\r\nWe have an `nplike_of` L3 function in Awkward so that we can determine the most suitable array library among a set of complex input objects. This mechanism needs to extend beyond identifying the array library for the array type to layouts, builders, and potentially other objects.\r\n\r\nOur existing mechanism for finding the appropriate nplike for a given object is flawed, due to the following points:\r\n1. Our L1 API should not expose `backend` or `nplike`\r\n2. Our L2 APIs cannot all be made homogeneous, e.g. `_ext.ArrayBuilder` should not have a backend (it has no concept of such a thing)\r\n3. Each call to `nplike_for` performs a non-cached lookup of several attributes. For array types, it loops over each nplike\r\n4. The set of nplikes is hard-coded\r\n\r\nExtending `nplike_for` to include `ArrayBuilder` would require more customisation of this logic. At the same time, PRs like #2305 would benefit from the search for an nplike being as fast as possible.\r\n\r\n### Details\r\nIn general, we can do better by generalising the search mechanism. This PR makes such a change, by introducing a type-cache that allows us to short-circuit the existing for loop (unless there is a cache miss):\r\n\r\n1. There is now a `register_nplike` function that lets the caller register an nplike. This replaces the need to explicitly enumerate the nplikes with the need to explicitly import all nplikes. Therefore, this is mainly an aesthetic change.\r\n2. `nplike_of` is now only defined for individual array objects operated upon by nplikes, i.e. not `ak.index.Index`.\r\n3. `nplike_of` is memoized by the array type.\r\n\r\n## Changes\r\n- `ak.index.Index(ak.index.Index(...))` is no longer supported\r\n- `nplike_of(obj)` fails for objects that are not `np.ndarray`, or `cp.ndarray`, ..., or `TypeTracerArray`.",
  "closed_at":"2023-04-11T20:59:18Z",
  "comments":2,
  "created_at":"2023-04-11T17:46:27Z",
  "draft":false,
  "id":1662957860,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ODIyB",
  "number":2389,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-11T20:59:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: implement `nplike` registry (1 of 2)",
  "updated_at":"2023-04-11T20:59:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## TL;DR\r\n\r\n> **Warning** \r\n> Depends upon #2389\r\n\r\n#2389 implements a cached lookup for nplikes. This PR implements a similar mechanism for backends. Unlike #2389, this PR implements a lookup registry; types can register a factory function that accepts a type, and returns a finder. This is used to locate backends for e.g. `Content`.\r\n\r\n## TL\r\nThis PR intends to clarify which objects support `Backend` resolution, and to improve the performance of the search. Although the existing mechanism is trivial, it is called frequently throughout the codebase, so it is important to keep it simple. \r\nThe existing implementation attempts to duck-type our way to find the backends. However, in practice we are constrained in what kind of interface we can define, such that this approach is not scalable. \r\n\r\nThis PR replaces kludgy logic with an explicit lookup mechanism that can be specialised per type.",
  "closed_at":"2023-04-12T09:54:57Z",
  "comments":5,
  "created_at":"2023-04-11T17:57:08Z",
  "draft":false,
  "id":1662970127,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ODLZ8",
  "number":2390,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-12T09:54:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: implement `Backend` registry (2 of 2)",
  "updated_at":"2023-04-12T09:54:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-04-12T19:01:18Z",
  "comments":1,
  "created_at":"2023-04-12T12:50:59Z",
  "draft":false,
  "id":1664506234,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OIZgy",
  "number":2391,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-12T19:01:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: use existing `unset` sentinel",
  "updated_at":"2023-04-12T19:01:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Unifies scalar type handling in `ak.to_layout` such that scalars are _always_ promoted to 1D arrays. Where possible, e.g. `np.generic` objects, the dtype is preserved.",
  "closed_at":"2023-06-16T12:07:52Z",
  "comments":0,
  "created_at":"2023-04-12T14:32:32Z",
  "draft":true,
  "id":1664689531,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OJBHy",
  "number":2393,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: clarify scalar promotion in `to_layout`",
  "updated_at":"2023-09-17T16:18:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Here is a memory allocation comparison by two algorithms: `move_to` and `concatenate`: the first releases each panel after it copies the data from it, the second copies all the data, then clears all the panels at the end.\r\n<img width=\"1150\" alt=\"Screenshot 2023-04-12 at 16 34 50\" src=\"https://user-images.githubusercontent.com/1390682/231492938-f9f58171-d781-44e7-8e0e-08a8358b5637.png\">\r\n",
  "closed_at":"2023-04-12T19:03:12Z",
  "comments":1,
  "created_at":"2023-04-12T14:39:26Z",
  "draft":false,
  "id":1664701519,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OJDuZ",
  "number":2394,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-12T19:03:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update `GrowableBuffer::move_to` algorithm",
  "updated_at":"2023-04-12T19:03:13Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`nplike.asarray` needs to copy data (and therefore look at buffers) iff. the array dtype doesn't match.\r\n\r\nPartially fixes #2384",
  "closed_at":"2023-04-12T18:59:25Z",
  "comments":1,
  "created_at":"2023-04-12T14:56:22Z",
  "draft":false,
  "id":1664731105,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OJKA7",
  "number":2395,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-12T18:59:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: only touch data in `nplike.asarray` if copy is required",
  "updated_at":"2023-04-12T18:59:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As discussed: a `GrowableBuffer::extend` algorithm should add a single panel of a data size. The next panel added after that one should be a size of `initial*resize`.\r\n\r\nNote, the first panel is always a size of `initial`. All next panels added after the first one should be a size of `initial*resize`. ",
  "closed_at":"2023-04-13T23:31:29Z",
  "comments":2,
  "created_at":"2023-04-13T08:56:48Z",
  "draft":false,
  "id":1666007593,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ONcjD",
  "number":2396,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-13T23:31:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: unify C++ and Python `GrowableBuffer::extend` algorithm",
  "updated_at":"2023-04-13T23:31:30Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This is because touching should really only occur if the operation result _depends_ upon the array value, which it does not in this instance.\r\n\r\nThis PR \r\n1. allows `dask-awkward` to set `pretend_contiguous` on the `ndarray.dtype` for our \"fake\" buffers, ensuring that nplikes do not force them to become contiguous.\r\n2. does not touch arrays in `ascontiguousarray`\r\n\r\nThe plan is to remove (1) later, once `dask-awkward` passes in its own special content types.",
  "closed_at":"2023-04-13T17:19:50Z",
  "comments":4,
  "created_at":"2023-04-13T13:05:30Z",
  "draft":false,
  "id":1666385973,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OOuID",
  "number":2397,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-13T17:19:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't touch for `ascontiguousarray`",
  "updated_at":"2023-04-13T17:19:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds a CI workflow that provides an indication of whether the C++ package is already on PyPI. A status badge has since been added to README.md:\r\n![image](https://user-images.githubusercontent.com/1248413/231800052-65ebd3a5-46c3-4f79-a1b9-8ebc9733be3b.png)\r\n",
  "closed_at":"2023-04-13T14:32:45Z",
  "comments":0,
  "created_at":"2023-04-13T14:30:18Z",
  "draft":false,
  "id":1666541737,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OPPwp",
  "number":2398,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-13T14:32:45Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: add workflow to ensure C++ is released",
  "updated_at":"2023-04-13T14:56:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"In https://github.com/scikit-hep/awkward/releases/tag/v2.1.3 or https://github.com/scikit-hep/awkward/releases/tag/v2.1.2",
  "closed_at":"2023-04-18T15:31:36Z",
  "comments":3,
  "created_at":"2023-04-13T17:43:58Z",
  "id":1666866897,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5jWl7R",
  "number":2402,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"The header-only.zip assets need to be automatically attached to new releases",
  "updated_at":"2023-04-18T15:31:36Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"@HDembinski - FYI \r\nHopefully, this GrowableBuffer in Numba provides a solution for an issue discussed in https://github.com/scikit-hep/uproot5/discussions/307",
  "closed_at":"2023-04-20T14:01:32Z",
  "comments":5,
  "created_at":"2023-04-14T13:46:36Z",
  "draft":false,
  "id":1668279823,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OVBhq",
  "number":2403,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-20T14:01:32Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: make `ak.numba.GrowableBuffer` visible ",
  "updated_at":"2023-04-21T18:08:11Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n14\n\n### Description and code to reproduce\n\n```\r\n===>  Building for py39-awkward-cpp-14\r\n* Getting build dependencies for wheel...\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/pyproject_hooks/_impl.py\", line 321, in _call_hook\r\n    raise BackendUnavailable(data.get('traceback', ''))\r\npyproject_hooks._impl.BackendUnavailable: Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 77, in _build_backend\r\n    obj = import_module(mod_path)\r\n  File \"/usr/local/lib/python3.9/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 972, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\r\n  File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 680, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 850, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\r\n  File \"/usr/local/lib/python3.9/site-packages/scikit_build_core/__init__.py\", line 10, in <module>\r\n    from ._version import __version__\r\nImportError: cannot import name '__version__' from 'scikit_build_core._version' (/usr/local/lib/python3.9/site-packages/scikit_build_core/_version.py)\r\n```\r\n\r\n```\r\n$ cat /usr/local/lib/python3.9/site-packages/scikit_build_core/_version.py\r\n# coding: utf-8\r\n# file generated by setuptools_scm\r\n# don't change, don't track in version control\r\nversion = '0.3.0'\r\nversion_tuple = (0, 3, 0)\r\n```\r\n\r\nWhat is wrong?\r\n",
  "closed_at":"2023-04-20T13:48:41Z",
  "comments":9,
  "created_at":"2023-04-15T05:00:46Z",
  "id":1669151568,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5jfTtQ",
  "number":2404,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"awkward-cpp-14 fails to build: ImportError: cannot import name '__version__' from 'scikit_build_core._version'",
  "updated_at":"2023-04-20T13:48:41Z",
  "user":"MDQ6VXNlcjI3MTkwNg=="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nSee https://pypi.org/project/pytest-github-actions-annotate-failures/",
  "closed_at":"2023-05-10T09:51:40Z",
  "comments":0,
  "created_at":"2023-04-16T17:06:21Z",
  "id":1670049114,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5jiu1a",
  "number":2405,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Use pytest plugin to annotate failures on GHA",
  "updated_at":"2023-05-10T09:51:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I've tested this in a [playground repo](https://github.com/agoose77/github-action-playground/actions/runs/4722005250), and it works. It's unfortunate that we have to rebuild the zip, but in this instance, we don't need the zip to have the same SHA or anything like that.",
  "closed_at":"2023-04-17T14:34:25Z",
  "comments":1,
  "created_at":"2023-04-17T13:58:52Z",
  "draft":false,
  "id":1671250955,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OezKj",
  "number":2406,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-17T14:34:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: attach header-only artifact to release",
  "updated_at":"2023-04-17T14:34:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak._broadcasting.broadcast_and_apply` expects at least one argument that has a backend, which is not satisfied if no arrays are passed. It also fails if no array-like objects are passed, but that's for another PR.",
  "closed_at":"2023-04-18T14:04:52Z",
  "comments":1,
  "created_at":"2023-04-17T21:38:38Z",
  "draft":false,
  "id":1672008168,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OhX5t",
  "number":2407,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-18T14:04:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: return empty list if broadcasting no arrays",
  "updated_at":"2023-04-18T14:04:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- [x] `BitMaskedType`: `append`, `extend`, `append_null` (0 args), `extend_null` (1 int arg)\r\n- [x] `ByteMaskedType`: `append`, `extend`, `append_null` (0 args), `extend_null` (1 int arg)\r\n- [x] Remove `EmptyRecordType`:  \r\n- [x] `RecordType` must have at least one content\r\n- [x] `TupleType` must have at least one content\r\n<strike>- [ ] also remember to remove it from C++</strike> - as a separate PR\r\n- [x] `EmptyType`\r\n- [x] `IndexedOptionType`: `append`, `extend`, `append_null` (0 args), `extend_null`(1 int arg). (`append_index` and `extend_index`?)\r\n- [x] `IndexedType`: `append`, `extend`. (`append_index` and `extend_index`?)\r\n- [x] `ListOffsetType`: `begin_list`->content, `end_list` (<strike>both</strike> modify offsets)\r\n- [x] `ListType`: `begin_list`->content (modify starts), `end_list` (modify stops) <strike>(both modify offsets)</strike>\r\n- [x] `NumpyType`: `append`, `extend`\r\n- [x] `RecordType`: `field` (Literal string) alias, `content` (Literal int and string) method\r\n- [x] `RegularType`: `begin_list`->content, `end_list` (does nothing?), content property, size 0 is not allowed\r\n- [x] `TupleType`: `index` (Literal int) alias, `content` (Literal int) method\r\n- [x] `UnionType`: `append_index` (Literal int) updates tags and index -> content, and `content` (Literal int) method\r\n- [x] `UnmaskedType`: `append`, `extend`",
  "closed_at":"2023-06-29T20:53:05Z",
  "comments":5,
  "created_at":"2023-04-18T11:26:22Z",
  "draft":false,
  "id":1672911551,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OkX29",
  "number":2408,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-29T20:53:05Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: LayoutBuilder in Numba",
  "updated_at":"2023-06-29T20:53:06Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Issue #2303 raises a couple of important points;\r\n- We don't need to build a layout only to immediately convert it to a backend array\r\n- We should not convert to NumPy eagerly; it's possible to use NEP18 on cuda `cp.ndarray,` the same should hold for `ak.Array` with `backend=\"cuda\"`.\r\n\r\nThis PR fixes #2303 by \r\n- Only converting to layouts if we identify a backend, and the object is not a backend array\r\n- Convert all arguments to a common backend\r\n\r\n> **Note**\r\n> This PR replaces https://github.com/scikit-hep/awkward/pull/2305, which became stale somehow.",
  "closed_at":"2023-04-18T15:23:56Z",
  "comments":1,
  "created_at":"2023-04-18T14:30:13Z",
  "draft":false,
  "id":1673260083,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Olivx",
  "number":2409,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-18T15:23:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: only convert NEP18 arguments to layouts if required",
  "updated_at":"2023-04-18T15:23:57Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Partially fixes #1683 for the trivial string-string (same depth) case. The other cases will take longer, so for now we just add xfail tests.",
  "closed_at":"2023-04-18T19:20:15Z",
  "comments":4,
  "created_at":"2023-04-18T15:07:33Z",
  "draft":false,
  "id":1673333098,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Olygt",
  "number":2410,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-18T19:20:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: partially fix string broadcasting",
  "updated_at":"2023-04-18T19:20:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"There are probably other functions that have this problem, but I'll start with `ak.cartesian`!\r\n\r\nCurrently, `ak.cartesian` accepts any axis that `>0`, as long as the negative depth is not ambiguous, or disagrees with the value for other layouts. This PR ensures that `axis` lies within the range `0 <= axis < max_depth`, where `max_depth` is the maximum `purelist_depth` of all layouts.",
  "closed_at":"2023-04-19T19:47:14Z",
  "comments":1,
  "created_at":"2023-04-19T12:20:58Z",
  "draft":false,
  "id":1674792099,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Oqpp0",
  "number":2411,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-19T19:47:14Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: raise error for out-of-bounds axis in `ak.cartesian`",
  "updated_at":"2023-04-19T19:47:15Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> **Warning**\r\n> This PR needs to be finalised to account for #2411 \r\n\r\nErgonomically, I'd prefer to import an exception from our errors module, instead of raising `np.AxisError`. This doesn't have to be a new class; we could just import the name from `numpy`. However, we should probably prefer to define our own exception types instead of directly re-using NumPy's. For most people, this won't change anything, but it means that we can detect axis errors in Awkward's code vs those from NumPy. This might not be a useful feature, though.\r\n\r\nI haven't yet figured out how we should export these exceptions for public use.",
  "closed_at":"2023-04-19T21:42:53Z",
  "comments":1,
  "created_at":"2023-04-19T12:36:12Z",
  "draft":false,
  "id":1674816208,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Oqu4R",
  "number":2412,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-19T21:42:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: add custom axis error",
  "updated_at":"2023-04-19T21:42:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Currently, we're too eager to convert `EmptyArray`s into known `NumpyArray`s. This PR starts the process of unwinding this, making `ak.broadcast_arrays` preserve the unknown array.\r\n\r\nThe planned existence of `ak.enforce_type` should ensure that we can deprecate this logic (in this PR), so that e.g. ufunc operations on unknown arrays throw warnings.\r\n\r\nAt a high level, we should permit `EmptyArray`s instead of `NumpyArray`s where it is not required that the programmer choose an arbitrary dtype. i.e., if the code requires a boolean dtype, it can accept an `EmptyArray`, whereas if the code supports many dtypes (reducers) it fails.",
  "closed_at":"2024-01-03T16:06:30Z",
  "comments":6,
  "created_at":"2023-04-19T13:02:56Z",
  "draft":true,
  "id":1674862915,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Oq5B7",
  "number":2413,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: don't broadcast `EmptyArray` in `broadcast_and_apply`",
  "updated_at":"2024-02-01T19:25:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.3\n\n### Description and code to reproduce\n\nThe following code:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\", \"jet\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {\"__record__\": \"TestBehavior1\"},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"jet_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"jet_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {\"__record__\": \"TestBehavior2\"},\r\n                \"form_key\": \"jet_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"jet_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\n\r\n@ak.mixin_class(ak.behavior)\r\nclass TestBehavior:\r\n    @ak.mixin_class_method(np.add, {\"TestBehavior\"})\r\n    def add(self, other):\r\n        return ak.zip(\r\n            {\r\n                \"pt\": self.pt + other.pt,\r\n            },\r\n            with_name=\"TestBehavior\",\r\n            behavior=self.behavior,\r\n        )\r\n\r\n\r\n@ak.mixin_class(ak.behavior)\r\nclass TestBehavior1(TestBehavior):\r\n    pass\r\n    \r\n@ak.mixin_class(ak.behavior)\r\nclass TestBehavior2(TestBehavior):\r\n    pass\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\nstack = ak.concatenate([ttarray.muon, ttarray.jet], axis=1)\r\n\r\nadd = stack + stack\r\n```\r\n\r\nfails with this trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/highlevel.py\", line 1360, in __array_ufunc__\r\n    return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_connect/numpy.py\", line 289, in array_ufunc\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1065, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1044, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1017, in continuation\r\n    return broadcast_any_list()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 563, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1044, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1017, in continuation\r\n    return broadcast_any_list()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 609, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1044, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1009, in continuation\r\n    return broadcast_any_union()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 827, in broadcast_any_union\r\n    assert length is not unknown_length\r\nAssertionError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness6.py\", line 154, in <module>\r\n    add = stack + stack\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/numpy/lib/mixins.py\", line 21, in func\r\n    return ufunc(self, other)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/highlevel.py\", line 1360, in __array_ufunc__\r\n    return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 54, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 64, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nAssertionError: \r\n\r\nSee if this has been reported at https://github.com/scikit-hep/awkward/issues\r\n```\r\n\r\n@agoose77 ",
  "closed_at":"2023-04-20T17:21:22Z",
  "comments":0,
  "created_at":"2023-04-19T16:01:17Z",
  "id":1675204034,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5j2ZXC",
  "number":2414,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ufuncs on UnionArray[RecordArray1, RecordArray2] hit an assertion against unknown_lengths",
  "updated_at":"2023-04-20T17:21:22Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.12.1 to 2.12.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.12.3</h2>\n<ul>\n<li>\ud83d\udc1b Fix an import error when running on Python 3.7. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1479\">#1479</a>)</li>\n</ul>\n<h2>v2.12.2</h2>\n<ul>\n<li>\ud83d\udc1b Fix a bug that caused an extra empty config-setting to be passed to the backend when CIBW_BUILD_FRONTEND is set to <code>build</code>. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1474\">#1474</a>)</li>\n<li>\ud83d\udc1b Fix a crash that occurred when overwriting an existing wheel on Windows. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1464\">#1464</a>)</li>\n<li>\ud83d\udee0 Pinned version updates, including CPython 3.10.11, 3.11.3, pip 23.1 and wheel 0.40.0.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.12.3</h3>\n<p><em>19 April 2023</em></p>\n<ul>\n<li>\ud83d\udc1b Fix an import error when running on Python 3.7. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1479\">#1479</a>)</li>\n</ul>\n<h3>v2.12.2</h3>\n<p><em>18 April 2023</em></p>\n<ul>\n<li>\ud83d\udc1b Fix a bug that caused an extra empty config-setting to be passed to the backend when CIBW_BUILD_FRONTEND is set to <code>build</code>. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1474\">#1474</a>)</li>\n<li>\ud83d\udc1b Fix a crash that occurred when overwriting an existing wheel on Windows. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1464\">#1464</a>)</li>\n<li>\ud83d\udee0 Pinned version updates, including CPython 3.10.11, 3.11.3, pip 23.1 and wheel 0.40.0.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/5e15bb25b428e1bf2daf2215f173d2b40135f56f\"><code>5e15bb2</code></a> Bump version: v2.12.3</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/52572ccdd01fcde11603283bcfda090086a7d11c\"><code>52572cc</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1479\">#1479</a> from henryiii/henryiii/fix/py37</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/c6027e4fc72eee01851e06b1cd173aabeb3abfe0\"><code>c6027e4</code></a> docs: fix options.md typos (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1477\">#1477</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/aff6dd5adc49114f1ee49c82bcb386a142fc614a\"><code>aff6dd5</code></a> refactor: tomllib in _compat</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/31bd9c91743e09f5b48c4def38c255c14c00d1af\"><code>31bd9c9</code></a> refactor: restore typing for non-backports</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/d996af554ae21435028e538e417e403e8db7433e\"><code>d996af5</code></a> fix: restore Python 3.7 support</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/e42f243b523a93352f0686ba2f4a62b7bf5f7d34\"><code>e42f243</code></a> ci: add Python 3.7</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9f18d385cbb38b9c24f46a2c798f361ecea8fd5c\"><code>9f18d38</code></a> Bump version: v2.12.2</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/dfbc6c3902b689c250f9d9dd10ce8f88db8e2b7b\"><code>dfbc6c3</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1476\">#1476</a> from henryiii/henryiii/chore/ruff_ex</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8c5f89c035ba6ac81794ed5a5d6cd2110957f181\"><code>8c5f89c</code></a> chore: update typing to be generic on function args</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.12.1...v2.12.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.12.1&new-version=2.12.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-04-19T21:47:13Z",
  "comments":1,
  "created_at":"2023-04-19T17:59:16Z",
  "draft":false,
  "id":1675367675,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Osmrw",
  "number":2415,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-19T21:47:13Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.12.1 to 2.12.3",
  "updated_at":"2023-04-19T21:47:14Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.3\n\n### Description and code to reproduce\n\nThe following script:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\nsgltns_idx = ak.singletons(ak.argmin(ttarray.muon.pt, axis=1))\r\n```\r\n\r\nresults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_singletons.py\", line 47, in singletons\r\n    return _impl(array, axis, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_singletons.py\", line 85, in _impl\r\n    out = ak._do.recursively_apply(layout, action, behavior, numpy_to_regular=True)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_do.py\", line 34, in recursively_apply\r\n    return layout._recursively_apply(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/bytemaskedarray.py\", line 1082, in _recursively_apply\r\n    result = action(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_singletons.py\", line 76, in action\r\n    ak.index.Index64(offsets), layout.project()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/bytemaskedarray.py\", line 626, in project\r\n    mask_length - numnull[0], nplike=self._backend.index_nplike\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/numpy/lib/mixins.py\", line 31, in func\r\n    return ufunc(other, self)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 532, in __array_ufunc__\r\n    return self.nplike._apply_ufunc(ufunc, *inputs)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 570, in _apply_ufunc\r\n    broadcasted = self.broadcast_arrays(*inputs)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 1003, in broadcast_arrays\r\n    x = self.promote_scalar(x)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 843, in promote_scalar\r\n    raise TypeError(f\"expected scalar type, received {obj}\")\r\nTypeError: expected scalar type, received ##\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness7.py\", line 77, in <module>\r\n    sgltns_idx = ak.singletons(ak.argmin(ttarray.muon.pt, axis=1))\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_singletons.py\", line 47, in singletons\r\n    return _impl(array, axis, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 54, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 64, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nTypeError: expected scalar type, received ##\r\n\r\nThis error occurred while calling\r\n\r\n    ak.singletons(\r\n        array = <Array-typetracer [...] type='## * ?int64'>\r\n        axis = 0\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n```",
  "closed_at":"2023-04-20T15:08:51Z",
  "comments":0,
  "created_at":"2023-04-20T00:33:43Z",
  "id":1675812405,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5j4t41",
  "number":2416,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.singletons fails on certain typetracers",
  "updated_at":"2023-04-20T15:08:51Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2416 ",
  "closed_at":"2023-04-20T15:08:50Z",
  "comments":1,
  "created_at":"2023-04-20T12:20:33Z",
  "draft":false,
  "id":1676612926,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Owx_m",
  "number":2417,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-20T15:08:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: correctly convert unknown scalar from kernel to a length",
  "updated_at":"2023-04-20T15:08:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2414",
  "closed_at":"2023-04-20T17:21:21Z",
  "comments":3,
  "created_at":"2023-04-20T13:38:33Z",
  "draft":false,
  "id":1676747608,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5OxOwD",
  "number":2418,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-20T17:21:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support unknown lengths when broadcasting unions",
  "updated_at":"2023-04-20T17:21:22Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nSince GrowableBuffer now interprets `resize` as the difference in size between panel 1 and all subsequent panels:\r\n\r\n<!-- \\mbox{panel}_i = \\left\\{ \\begin{array}{l l} \\mbox{initial} & \\mbox{if } i = 0 \\\\ \\mbox{initial} \\times \\mbox{resize} & \\mbox{if } i > 0 \\\\ \\end{array} \\right. -->\r\n\r\n![equation](https://user-images.githubusercontent.com/1852447/233456786-587d1886-d56e-4aaa-a835-51bf3e1ea781.png)\r\n\r\ninstead of\r\n\r\n<!-- \\mbox{panel}_i = \\left\\{ \\begin{array}{l l} \\mbox{initial} & \\mbox{if } i = 0 \\\\ \\mbox{panel}_{i - 1} \\times \\mbox{resize} & \\mbox{if } i > 0 \\\\ \\end{array} \\right. -->\r\n\r\n![equation](https://user-images.githubusercontent.com/1852447/233456829-544f7a1f-0487-4ae8-a1e3-feeca9b63bc7.png)\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/3fc5f65554b1e35d4a4eab7a81b418b80e99fc58/header-only/growable-buffer/awkward/GrowableBuffer.h#L449-L455\r\n\r\nThe default value for `resize` should now be `16` (or what optimal value did you find, @ianna?), rather than `1.5`. Unfortunately, it is assigned all over the place, because it has to be a default for a lot of \"user starts here\" functions.\r\n\r\n```bash\r\n% fgrep -r 1.5 awkward-cpp/src src\r\nawkward-cpp/src/python/content.cpp:      }), py::arg(\"initial\") = 1024, py::arg(\"resize\") = 1.5)\r\nawkward-cpp/src/python/forth.cpp:               py::arg(\"output_resize_factor\") = 1.5)\r\nsrc/awkward/highlevel.py:    def __init__(self, *, behavior=None, initial=1024, resize=1.5):\r\nsrc/awkward/operations/ak_mean.py:        <Array [1.5, nan, 4.5] type='3 * float64'>\r\nsrc/awkward/operations/ak_mean.py:    because there are three lists, the first has mean `1.5`, the second is\r\nsrc/awkward/operations/ak_from_json.py:    resize=1.5,\r\nsrc/awkward/operations/ak_from_iter.py:    resize=1.5,\r\n```\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/3fc5f65554b1e35d4a4eab7a81b418b80e99fc58/awkward-cpp/src/python/content.cpp#L198-L200\r\n\r\n(The awkward-cpp/src/python/forth.cpp one shouldn't change yet because `ForthOutputBuffer` is not based on `GrowableBuffer`.)\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/3fc5f65554b1e35d4a4eab7a81b418b80e99fc58/src/awkward/highlevel.py#L2238\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/3fc5f65554b1e35d4a4eab7a81b418b80e99fc58/src/awkward/operations/ak_from_json.py#L31\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/3fc5f65554b1e35d4a4eab7a81b418b80e99fc58/src/awkward/operations/ak_from_iter.py#L21",
  "closed_at":"2023-04-21T17:02:04Z",
  "comments":0,
  "created_at":"2023-04-20T18:36:46Z",
  "id":1677226657,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5j-HKh",
  "number":2419,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"Default value of resize needs to be set consistently for the new GrowableBuffer algorithm",
  "updated_at":"2023-04-21T17:02:04Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\n\n * `limit=NONNEGATIVE-INT` should be passed to C++ to stop the JSON-reading as soon as the number of entries in the `ArrayBuilder` reaches `limit`.\r\n * `limit=(NONNEGATIVE-INT, NONNEGATIVE-INT)` should pass both values; the first is a lower limit. They're both non-negative: they do not/cannot count from the end of a JSON document or stream. The lower limit doesn't prevent any reading or parsing, but it prevents data from being passed into the `ArrayBuilder`, which can save a lot of memory.\r\n\r\nThese should apply equally well to single-document and line-delimited mode.\r\n\r\nA similar feature for `ak.from_iter` is not needed because Python already has an `itertools.islice` that users can use. (If we were to implement `limit` on Python iterators for symmetry, we'd just use `itertools.islice` internally.)\r\n\r\n`ak.from_parquet` has a way to select row groups, but it would be more intuitive to be able to work with the same sort of `limit` argument; we'd just need to look in the Parquet metadata to translate entry `limit` into row group numbers (and then slice the unwanted parts of the first and last row groups... like Uproot already does with `entry_start` and `entry_stop`). For a format like Parquet, negative limits, counting from the end of the file, would be doable.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-04-20T18:43:01Z",
  "id":1677234390,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5j-JDW",
  "number":2420,
  "performed_via_github_app":null,
  "reactions":{
   "rocket":1,
   "total_count":1
  },
  "state":"open",
  "state_reason":null,
  "title":"ak.from_json should take a `limit` parameter to only read what is necessary",
  "updated_at":"2023-04-20T18:43:01Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The new GrowableBuffer algorithm resizes its panels once. The plots show that 8 is a good compromise.\r\n<img width=\"774\" alt=\"Screenshot 2023-04-21 at 16 50 13\" src=\"https://user-images.githubusercontent.com/1390682/233674643-162b9ba9-3407-49e7-bc1a-ee6abbf6681b.png\">\r\n<img width=\"774\" alt=\"Screenshot 2023-04-21 at 16 44 43\" src=\"https://user-images.githubusercontent.com/1390682/233674698-566b5152-a2ff-4e31-8aa7-15a7dc8930ee.png\">\r\n\r\n\r\nfixes issue #2419 ",
  "closed_at":"2023-04-21T17:02:03Z",
  "comments":1,
  "created_at":"2023-04-21T15:24:06Z",
  "draft":false,
  "id":1678703021,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5O3zZE",
  "number":2421,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-21T17:02:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: consistently set a `resize` default value to 8 - that is passed to GrowableBuffer",
  "updated_at":"2023-04-21T17:02:04Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Which documentation?\n\nPython docstrings\n\n### What needs to be documented?\n\nI vaguely remember implementing something like this, and @nsmith- just asked about it, so I looked at [the documentation](https://awkward-array.org/doc/main/reference/generated/ak.to_parquet.html) (which is passing through the docstring). It says,\r\n\r\n![image](https://user-images.githubusercontent.com/1852447/234060788-87a3acef-21f3-4c0b-a267-729819453793.png)\r\n\r\nwhich would be hiding this special feature if it, in fact, exists. If I'm wrong, then this issue should become a feature request to make it possible to\r\n\r\n```python\r\ndef generator(data, num_entries):\r\n    start = stop = 0\r\n    while stop < len(data):\r\n        stop = min(stop + num_entries, len(data))\r\n        yield data[start:stop]\r\n        start = stop\r\n\r\nak.to_parquet(generator(data, 1000), \"output.parquet\")\r\n```\r\n\r\n(for arbitrarily defined iterables, without necessarily loading everything into memory).\r\n\r\nIf I'm right, then we just need a note in the documentation saying that this is possible, and maybe also a small example to highlight it.",
  "closed_at":"2023-04-25T17:42:58Z",
  "comments":4,
  "created_at":"2023-04-24T16:42:45Z",
  "id":1681664922,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kPCua",
  "number":2422,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Is it the case that ak.to_parquet partitions row_groups if the \"array\" argument is a non-Awkward iterable?",
  "updated_at":"2023-04-25T17:42:58Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.261 \u2192 v0.0.262](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.261...v0.0.262)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-04-25T19:21:42Z",
  "comments":1,
  "created_at":"2023-04-25T01:04:53Z",
  "draft":false,
  "id":1682255828,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PDkHl",
  "number":2423,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-25T19:21:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-04-25T19:21:44Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak.almost_equal` made some poor assumptions about content orderings, which this PR fixes. Now, unions are considered equal against unions with different content orders (as long as the tags align equally). Records are compared by field for non-tuples, addressing the same problem with records.",
  "closed_at":"2023-04-25T18:50:52Z",
  "comments":1,
  "created_at":"2023-04-25T09:28:49Z",
  "draft":false,
  "id":1682790621,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PFWRn",
  "number":2424,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-25T18:50:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: handle reordered contents in `ak.almost_equal`",
  "updated_at":"2023-04-25T18:50:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Add a new `ak.forms.from_type` function that can convert an `ak.types.Type` object to an `ak.forms.Form` object. As this is a one-to-many function, we choose to build forms that match those of `ArrayBuilder`.\r\n\r\nAs a part of this PR, `ak.types.Type` objects now implement the `.copy` interface that we have for contents and forms",
  "closed_at":"2023-04-26T08:23:33Z",
  "comments":2,
  "created_at":"2023-04-25T09:42:18Z",
  "draft":false,
  "id":1682814377,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PFbX9",
  "number":2425,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-26T08:23:33Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.forms.from_type`",
  "updated_at":"2023-04-26T08:23:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The tags were being compared by identity, not equality.",
  "closed_at":"2023-04-25T18:44:47Z",
  "comments":1,
  "created_at":"2023-04-25T10:14:34Z",
  "draft":false,
  "id":1682868097,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PFm2C",
  "number":2426,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-25T18:44:47Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `is_equal_to` bug in `UnionArray`",
  "updated_at":"2023-04-25T18:44:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #2371 ",
  "closed_at":"2023-04-25T22:46:44Z",
  "comments":1,
  "created_at":"2023-04-25T16:18:13Z",
  "draft":false,
  "id":1683479731,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PHq8O",
  "number":2427,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-25T22:46:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: canonicalise `union[?X, Y]` into `union[?X, ?Y]`",
  "updated_at":"2023-04-25T22:46:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.3\n\n### Description and code to reproduce\n\nThe following script:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\nmuons = ttarray.muon\r\n\r\n# both of the following fail individually and are required\r\nmuons = ak.with_field(ttarray.muon, 0.4, \"something\")\r\n\r\nmuons[\"somethingelse\"] = 0.5\r\n```\r\n\r\nFails with a NotImplemented error. This is needed for convenient shorthands to work in dask_awkward:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/highlevel.py\", line 1027, in __setitem__\r\n    self._layout = ak.operations.with_field(\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/operations/ak_with_field.py\", line 47, in with_field\r\n    return _impl(array, what, where, highlevel, behavior)\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/operations/ak_with_field.py\", line 150, in _impl\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 1062, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 1041, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 1014, in continuation\r\n    return broadcast_any_list()\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 563, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 1041, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 1014, in continuation\r\n    return broadcast_any_list()\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 609, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_broadcasting.py\", line 1027, in apply_step\r\n    result = action(\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/operations/ak_with_field.py\", line 127, in action\r\n    backend.nplike.repeat(what, len(base))\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_nplikes/typetracer.py\", line 1121, in repeat\r\n    raise NotImplementedError\r\nNotImplementedError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness10.py\", line 79, in <module>\r\n    muons[\"somethingelse\"] = 0.5\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/highlevel.py\", line 1030, in __setitem__\r\n    self._numbaview = None\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_errors.py\", line 56, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/coffea-dev/awkward/src/awkward/_errors.py\", line 66, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nNotImplementedError: \r\n\r\nSee if this has been reported at https://github.com/scikit-hep/awkward/issues\r\n```",
  "closed_at":"2023-04-25T22:38:48Z",
  "comments":0,
  "created_at":"2023-04-25T16:22:54Z",
  "id":1683486503,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kV_cn",
  "number":2428,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Assigning single numbers to typetracers fails",
  "updated_at":"2023-04-25T22:38:48Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes a set of miscellaneous typetracer bugs. It doesn't implement a full `repeat` implementation, but it's a start.",
  "closed_at":"2023-04-25T22:38:47Z",
  "comments":3,
  "created_at":"2023-04-25T18:57:02Z",
  "draft":false,
  "id":1683690713,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PIYd1",
  "number":2429,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-25T22:38:47Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: typetracer `nplike.repeat` & `ak.with_field`",
  "updated_at":"2023-04-25T22:38:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n3.1.4\n\n### Description and code to reproduce\n\n@martindurant @douglasdavis @jpivarski @agoose77 \r\n\r\nRelated to https://github.com/dask-contrib/dask-awkward/issues/223\r\n\r\nThis might not be a bug, depending on what is expected (I think below is actually correct, as I understand).\r\nRight now this causes some problems in dask_awkward since `dak.with_field` cannot be optimized away as an operation, so with_field gets called without the data it needs loaded from file, resulting in failure if the data assigned via with_field is not specifically used later on.\r\n\r\nI suspect this should be fixed in dask_awkward so those operations can simply be culled.\r\n\r\nthe following script:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\", \"flatlist\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n        {\r\n            \"class\": \"NumpyArray\",\r\n            \"primitive\": \"float64\",\r\n            \"inner_shape\": [],\r\n            \"parameters\": {},\r\n            \"form_key\": \"flat_list!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout)\r\n\r\nmuons = ttarray.muon\r\n\r\nmuons[\"flatlist\"] = ttarray.flatlist\r\n\r\nprint(report.data_touched)\r\n\r\nmuons.flatlist\r\n\r\nprint(report.data_touched)\r\n```\r\nprints out:\r\n```\r\n['muon_list_outer!']\r\n['muon_list_outer!']\r\n```\r\n\r\n",
  "closed_at":"2023-06-16T12:17:04Z",
  "comments":2,
  "created_at":"2023-04-26T02:37:53Z",
  "id":1684165926,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kYlUm",
  "number":2431,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"with_field on typetracer doesn't touch assigned data (may not be a bug but needs addressing)",
  "updated_at":"2023-06-16T12:17:05Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\r\n\r\nThere has been a long-standing awareness that our string abstraction is both a special case (privileged in our codebase) and also something that users might want to customise. Consequently, we have mechanisms like custom broadcasting that users can hook into to implement the same features.\r\n\r\nNow that Awkward is more mature, we can more conclusively say that few/no users are actually making use of these mechanisms (@jpivarski might have data on this, or I can grep it!)\r\nHowever, this might be a chicken-and-egg problem; the extension system is not sufficiently mature or comprehensive that users could implement strings without Awkward's special casing.\r\n\r\nSpecifically, we have known bugs that are trickier to solve for our extension mechanisms, such as string-string broadcasting. \r\n\r\nThere are clear use cases for extending strings, e.g. IP addresses:\r\n- Users want IP addresses to broadcast like strings (string-like)\r\n- Users want IP addresses to have IP address methods (IP address-like)\r\n\r\nNow, IP addresses could be implemented as tuples (@jpivarski could you expand on the reason not to do this?), but let's consider that we want to implement them as strings. Really, as @jpivarski pointed out in a meeting today, strings are a special example of binary data (an escape hatch, of sorts). \r\n\r\nIt would appear that the best path forward is to simplify our extension mechanisms to make string-like custom types _easier_, whilst removing the kinds of dials that users can turn.\r\nNamely, we could introduce a string-like table to `ak.behavior` that enumerates the string-like type names (that are used with `__array__`). This enables other types to gain string-like broadcasting, without opening the door to esoteric broadcasting rules. Note that to gain string-like _methods_, the names placed in this table should correspond to array classes that _inherit_ from the string behaviour classes. Note that, only some of Awkward's logic is implemented in behaviour classes \u2014 much is implemented inside the Awkward code base.\r\n\r\nSpecifically, string-like names imply the following 2D list containing a 1D `NumpyArray` of `uint8`. Concretely the \"string-like\" typeclass (borrowed from Haskell) means that the list of list of `uint8` should be treated as a list of atoms. By applying such a restrictive definition, we can avoid ambiguity when handling all of the string-related Awkward rules.\r\n\r\nThis relates to another conversion on type _inheritance_. That will be discussed separately.\r\n\r\n## Related Issues\r\n- #1682",
  "closed_at":"2023-06-30T12:25:30Z",
  "comments":9,
  "created_at":"2023-04-26T16:18:23Z",
  "id":1685336146,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kdDBS",
  "number":2432,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Simplify customisation that is used to implement strings",
  "updated_at":"2023-06-30T12:25:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nLibrary authors are currently required to do a reasonable amount of work to extend the types of other libraries. For example, to extend the `vector` types, one must both inherit from the Python classes and register them under new names, but also re-define all of the ufunc overloads in `ak.behavior`.\r\n\r\nA related discussion is happening in #2432, whereby a new \"typeclass\" mechanism is proposed for string-like types. It's my belief #2432 is proposing a solution to the question \"is this type like another type\". We could implement such logic by defining type inheritance. For example, consider a custom vector type:\r\n```python\r\nak.behavior[\"__supertype__\", \"CustomVector\"] = \"Vector\"\r\n```\r\n\r\nDespite the motivations above, I can't think of many concrete use cases, yet. One example would be if the user evaluates `CustomVector + Vector`. Right now, that's an error. With the concept of super and subtypes, the result of `CustomVector + Vector` is now clearly defined; it should invoke the overload for `Vector + Vector`, i.e. return a `Vector`.\r\n\r\nThis issue is mainly book-keeping; I don't think it's a pressing issue, and I'd want to think it through more before deeming it a sensible direction to take things.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-04-26T16:45:24Z",
  "id":1685381278,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kdOCe",
  "number":2433,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Implement nominal type inheritance",
  "updated_at":"2023-04-26T18:41:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In general, we want to avoid copying data unnecessarily during Awkward layout transformations. At the same time, there is a benefit to not evaluating computations on unreferenced data, e.g. sublists of a `ListArray` that aren't actually contained with a `(start, stop)` pair.\r\n\r\nThe boundary between \"always pack layouts that operate upon data\" and \"sometimes it's faster to do some extra work instead of a copy\" is arguably not well defined.\r\n\r\nThis question has yet to be answered with any kind of guiding policy, and it comes up in a few places (`to_ListOffsetArray(False)` in `_slicing.py`, `recursively_apply` operations, etc).\r\n",
  "closed_at":"2023-07-02T17:05:07Z",
  "comments":1,
  "created_at":"2023-04-27T18:10:59Z",
  "id":1687341953,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kksuB",
  "number":2434,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Define packing policy for recursive visitors that operate on buffers",
  "updated_at":"2023-07-02T17:05:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\r\n\r\nIt seems to me that `Form.length_zero_array` is an L2 function, and therefore doesn't need to be concerned with behaviours or `ak.Array`s. I propose that we deprecate the `highlevel=True` variant of this function, to keep the separation of concerns.",
  "closed_at":"2023-04-29T07:44:24Z",
  "comments":1,
  "created_at":"2023-04-28T08:03:26Z",
  "id":1688095026,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5knkky",
  "number":2435,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Deprecate `highlevel=True` for `Form.length_zero_array`",
  "updated_at":"2023-04-29T07:44:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This was forgotten about when adding `ak.broadcast_fields` in #2267 ",
  "closed_at":"2023-04-29T02:10:08Z",
  "comments":0,
  "created_at":"2023-04-28T09:19:05Z",
  "draft":false,
  "id":1688207668,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PXjYb",
  "number":2436,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-29T02:10:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add `broadcast_fields` to toctree",
  "updated_at":"2023-04-29T02:10:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #2435 ",
  "closed_at":"2023-04-29T07:44:23Z",
  "comments":2,
  "created_at":"2023-04-28T09:44:33Z",
  "draft":false,
  "id":1688243911,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PXrEG",
  "number":2437,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-04-29T07:44:23Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate `length_zero_array` highlevel argument",
  "updated_at":"2023-04-29T07:44:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nThis is a function that I found useful during my analysis, and @lgray mentioned that it is also used in coffea. ",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-04-28T14:26:07Z",
  "id":1688654852,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kptQE",
  "number":2438,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add `searchsorted`",
  "updated_at":"2024-01-20T21:12:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.4\n\n### Description and code to reproduce\n\nThe following script:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout)\r\n\r\nttmuons = ttarray.muon\r\n\r\narray = ak.Array(ttlayout.form.length_zero_array(highlevel=False))\r\n\r\narray[\"emptydict\"] = {}\r\n\r\nmuons = array.muon\r\n\r\nmuons[\"emptydict\"] = {}\r\n\r\narray[\"emptylist\"] = []\r\n\r\nmuons[\"emptylist\"] = []\r\n\r\n# all four of the following fail\r\n\r\nttarray[\"emptydict\"] = {}\r\n\r\nttmuons[\"emptydict\"] = {}\r\n\r\nttarray[\"emptylist\"] = []\r\n\r\nttmuons[\"emptylist\"] = []\r\n```\r\nresults in (and similar variants for different types being assigned):\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/highlevel.py\", line 1027, in __setitem__\r\n    self._layout = ak.operations.with_field(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_with_field.py\", line 47, in with_field\r\n    return _impl(array, what, where, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_with_field.py\", line 153, in _impl\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1062, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1041, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1014, in continuation\r\n    return broadcast_any_list()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 563, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1027, in apply_step\r\n    result = action(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_with_field.py\", line 144, in action\r\n    out = ak.contents.RecordArray(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/recordarray.py\", line 161, in __init__\r\n    raise TypeError(\r\nTypeError: RecordArray 'contents' must use the same array library (backend): TypeTracerBackend vs NumpyBackend\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness12.py\", line 59, in <module>\r\n    ttarray[\"emptylist\"] = []\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/highlevel.py\", line 1030, in __setitem__\r\n    self._numbaview = None\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 56, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 66, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nTypeError: RecordArray 'contents' must use the same array library (backend): TypeTracerBackend vs NumpyBackend\r\n\r\nThis error occurred while calling\r\n\r\n    ak.Array.__setitem__(\r\n        self = <Array-typetracer [...] type='## * {muon: var * {pt: int64}}'>\r\n        field_name = 'emptylist'\r\n        field_value = []\r\n    )\r\n```",
  "closed_at":"2023-05-03T11:52:57Z",
  "comments":0,
  "created_at":"2023-04-28T15:12:23Z",
  "id":1688729973,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5kp_l1",
  "number":2439,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Assigning `[]` or `{}` into RecordArray typetracer fails",
  "updated_at":"2023-05-03T11:52:57Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.1.4\n\n### Description and code to reproduce\n\nLong story short in the `trijet[\"p4\"] = trijet.j1 + trijet.j2 + trijet.j3` I am seeing up to a 2.5x longer execution time in ak2 in the following code. \r\n\r\nI see also about 2x more peak RSS usage in top, but using python's internal max RSS monitor from resource they show nearly the same in terms of max RSS (but that may not count something?). I'll see if I can get a better measure.\r\n\r\nHere's the code (you will need to `pip install pyinstrument`):\r\n```python3\r\nimport numpy as np\r\nimport awkward as ak\r\n\r\nfrom pyinstrument import Profiler\r\n\r\nnp.random.seed(1)\r\n\r\nbehavior = {}\r\n\r\n@ak.mixin_class(behavior)\r\nclass LorentzVector:\r\n    @property\r\n    def mass2(self):\r\n        \"\"\"Squared `mass`\"\"\"\r\n        return self.t**2 - self.x**2 - self.y**2 - self.z**2\r\n\r\n    @property\r\n    def mass(self):\r\n        r\"\"\"Invariant mass (+, -, -, -)\r\n        :math:`\\sqrt{t^2-x^2-y^2-z^2}`\r\n        \"\"\"\r\n        return np.sqrt(self.mass2)\r\n    \r\n    @ak.mixin_class_method(np.add, {\"LorentzVector\"})\r\n    def add(self, other):\r\n        \"\"\"Add two vectors together elementwise using `x`, `y`, `z`, and `t` components\"\"\"\r\n        return ak.zip(\r\n            {\r\n                \"x\": self.x + other.x,\r\n                \"y\": self.y + other.y,\r\n                \"z\": self.z + other.z,\r\n                \"t\": self.t + other.t,\r\n            },\r\n            with_name=\"LorentzVector\",\r\n            behavior=self.behavior,\r\n        )\r\n\r\nrows = 2_000_000\r\n\r\ncounts = np.rint(np.random.lognormal(mean=1.0, sigma=0.8, size=rows)).astype(np.int64)\r\ntotal = np.sum(counts)\r\nprint(np.mean(counts), np.min(counts), np.max(counts))\r\nx = np.random.uniform(low=-250.0/1.74, high=250.0/1.74, size=total)\r\ny = np.random.uniform(low=-250.0/1.74, high=250.0/1.74, size=total)\r\nz = np.random.uniform(low=-250.0/1.74, high=250.0/1.74, size=total)\r\nt = np.random.uniform(low=250.0, high=500.0, size=total)\r\nbtag = np.random.uniform(low=0.0, high=1.0, size=total)\r\n\r\njets = ak.zip(\r\n    {\r\n        \"x\": ak.unflatten(x, counts),\r\n        \"y\": ak.unflatten(y, counts),\r\n        \"z\": ak.unflatten(z, counts),\r\n        \"t\": ak.unflatten(t, counts),\r\n        \"btag\": ak.unflatten(btag, counts),\r\n    },\r\n    with_name=\"LorentzVector\",\r\n    behavior=behavior,\r\n)\r\n\r\nprof = Profiler()\r\n\r\nprof.start()\r\ntrijet = ak.combinations(jets, 3, fields=[\"j1\", \"j2\", \"j3\"])\r\nprof.stop()\r\n\r\nprint(prof.output_text(unicode=True, color=True, show_all=True))\r\n\r\nprof = Profiler()\r\n\r\nprof.start()\r\ntrijet[\"p4\"] = trijet.j1 + trijet.j2 + trijet.j3\r\nprof.stop()\r\n\r\nprint(prof.output_text(unicode=True, color=True, show_all=True))\r\n\r\nprof = Profiler()\r\n\r\nprof.start()\r\ntrijet = ak.flatten(\r\n    trijet[ak.singletons(ak.argmin(abs(trijet.p4.mass - 172.5), axis=1))]\r\n)\r\nprof.stop()\r\n\r\nprint(prof.output_text(unicode=True, color=True, show_all=True))\r\n```\r\nproduces the following profiles in ak2:\r\n```\r\n(coffea-dev) lgray@Lindseys-MBP dask-demo-day-20042023 % python regression_repro.py\r\n3.7437375 0 112\r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 17:05:59  Samples:  24\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 1.174     CPU time: 1.173\r\n/   _/                      v4.3.0\r\n\r\nProgram: regression_repro.py\r\n\r\n1.174 <module>  regression_repro.py:1\r\n\u2514\u2500 1.174 combinations  awkward/operations/ak_combinations.py:11\r\n   \u2514\u2500 1.174 _impl  awkward/operations/ak_combinations.py:205\r\n      \u2514\u2500 1.174 combinations  awkward/_do.py:125\r\n         \u251c\u2500 1.138 _combinations  awkward/contents/listoffsetarray.py:1353\r\n         \u2502  \u251c\u2500 0.574 __call__  awkward/_kernels.py:89\r\n         \u2502  \u2514\u2500 0.560 _carry  awkward/contents/recordarray.py:496\r\n         \u2502     \u251c\u2500 0.300 [self]  \r\n         \u2502     \u251c\u2500 0.239 ndarray.copy  <built-in>:0\r\n         \u2502     \u2514\u2500 0.021 any  awkward/_nplikes/array_module.py:349\r\n         \u2502        \u2514\u2500 0.021 any  <__array_function__ internals>:177\r\n         \u2502           \u2514\u2500 0.021 any  numpy/core/fromnumeric.py:2307\r\n         \u2502              \u2514\u2500 0.021 _wrapreduction  numpy/core/fromnumeric.py:69\r\n         \u2502                 \u2514\u2500 0.021 ufunc.reduce  <built-in>:0\r\n         \u2514\u2500 0.036 [self]  \r\n\r\n\r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 17:06:01  Samples:  37\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 9.148     CPU time: 6.215\r\n/   _/                      v4.3.0\r\n\r\nProgram: regression_repro.py\r\n\r\n9.148 <module>  regression_repro.py:1\r\n\u2514\u2500 9.143 func  numpy/lib/mixins.py:18\r\n   \u2514\u2500 9.143 __array_ufunc__  awkward/highlevel.py:1289\r\n      \u2514\u2500 9.143 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2514\u2500 9.143 broadcast_and_apply  awkward/_broadcasting.py:1046\r\n            \u2514\u2500 9.143 apply_step  awkward/_broadcasting.py:369\r\n               \u2514\u2500 9.143 continuation  awkward/_broadcasting.py:991\r\n                  \u2514\u2500 9.143 broadcast_any_list  awkward/_broadcasting.py:499\r\n                     \u2514\u2500 9.143 apply_step  awkward/_broadcasting.py:369\r\n                        \u2514\u2500 9.143 continuation  awkward/_broadcasting.py:991\r\n                           \u2514\u2500 9.143 broadcast_any_list  awkward/_broadcasting.py:499\r\n                              \u2514\u2500 9.137 apply_step  awkward/_broadcasting.py:369\r\n                                 \u2514\u2500 9.137 continuation  awkward/_broadcasting.py:991\r\n                                    \u2514\u2500 9.074 broadcast_any_indexed  awkward/_broadcasting.py:947\r\n                                       \u251c\u2500 5.246 apply_step  awkward/_broadcasting.py:369\r\n                                       \u2502  \u2514\u2500 5.246 action  awkward/_connect/numpy.py:228\r\n                                       \u2502     \u2514\u2500 5.246 _array_ufunc_adjust  awkward/_connect/numpy.py:168\r\n                                       \u2502        \u2514\u2500 5.246 add  regression_repro.py:24\r\n                                       \u2502           \u251c\u2500 4.914 func  numpy/lib/mixins.py:18\r\n                                       \u2502           \u2502  \u2514\u2500 4.914 __array_ufunc__  awkward/highlevel.py:1289\r\n                                       \u2502           \u2502     \u2514\u2500 4.914 array_ufunc  awkward/_connect/numpy.py:219\r\n                                       \u2502           \u2502        \u2514\u2500 4.914 broadcast_and_apply  awkward/_broadcasting.py:1046\r\n                                       \u2502           \u2502           \u2514\u2500 4.914 apply_step  awkward/_broadcasting.py:369\r\n                                       \u2502           \u2502              \u2514\u2500 4.914 continuation  awkward/_broadcasting.py:991\r\n                                       \u2502           \u2502                 \u2514\u2500 4.914 broadcast_any_list  awkward/_broadcasting.py:499\r\n                                       \u2502           \u2502                    \u2514\u2500 4.914 apply_step  awkward/_broadcasting.py:369\r\n                                       \u2502           \u2502                       \u2514\u2500 4.914 action  awkward/_connect/numpy.py:228\r\n                                       \u2502           \u2502                          \u2514\u2500 4.914 apply_ufunc  awkward/_backends/backend.py:46\r\n                                       \u2502           \u2514\u2500 0.332 zip  awkward/operations/ak_zip.py:11\r\n                                       \u2502              \u2514\u2500 0.332 _impl  awkward/operations/ak_zip.py:159\r\n                                       \u2502                 \u2514\u2500 0.332 broadcast_and_apply  awkward/_broadcasting.py:1046\r\n                                       \u2502                    \u2514\u2500 0.332 apply_step  awkward/_broadcasting.py:369\r\n                                       \u2502                       \u2514\u2500 0.332 continuation  awkward/_broadcasting.py:991\r\n                                       \u2502                          \u2514\u2500 0.332 broadcast_any_list  awkward/_broadcasting.py:499\r\n                                       \u2502                             \u2514\u2500 0.332 apply_step  awkward/_broadcasting.py:369\r\n                                       \u2514\u2500 3.827 <listcomp>  awkward/_broadcasting.py:948\r\n                                          \u2514\u2500 3.797 project  awkward/contents/indexedarray.py:408\r\n                                             \u251c\u2500 3.352 _carry  awkward/contents/recordarray.py:496\r\n                                             \u2502  \u2514\u2500 3.352 <listcomp>  awkward/contents/recordarray.py:517\r\n                                             \u2502     \u2514\u2500 3.348 _carry  awkward/contents/numpyarray.py:315\r\n                                             \u2514\u2500 0.445 __call__  awkward/_kernels.py:89\r\n\r\n\r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 17:06:10  Samples:  37\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 7.386     CPU time: 5.410\r\n/   _/                      v4.3.0\r\n\r\nProgram: regression_repro.py\r\n\r\n7.386 <module>  regression_repro.py:1\r\n\u251c\u2500 6.550 mass  regression_repro.py:17\r\n\u2502  \u251c\u2500 4.398 mass2  regression_repro.py:12\r\n\u2502  \u2502  \u2514\u2500 4.398 func  numpy/lib/mixins.py:18\r\n\u2502  \u2502     \u2514\u2500 4.398 __array_ufunc__  awkward/highlevel.py:1289\r\n\u2502  \u2502        \u2514\u2500 4.398 array_ufunc  awkward/_connect/numpy.py:219\r\n\u2502  \u2502           \u251c\u2500 4.013 recursively_apply  awkward/_do.py:20\r\n\u2502  \u2502           \u2502  \u2514\u2500 4.013 _recursively_apply  awkward/contents/listoffsetarray.py:2069\r\n\u2502  \u2502           \u2502     \u2514\u2500 4.006 continuation  awkward/contents/listoffsetarray.py:2084\r\n\u2502  \u2502           \u2502        \u2514\u2500 4.006 _recursively_apply  awkward/contents/numpyarray.py:1261\r\n\u2502  \u2502           \u2502           \u2514\u2500 4.006 unary_action  awkward/_connect/numpy.py:309\r\n\u2502  \u2502           \u2502              \u2514\u2500 4.006 action  awkward/_connect/numpy.py:228\r\n\u2502  \u2502           \u2502                 \u2514\u2500 4.006 apply_ufunc  awkward/_backends/backend.py:46\r\n\u2502  \u2502           \u2514\u2500 0.385 broadcast_and_apply  awkward/_broadcasting.py:1046\r\n\u2502  \u2502              \u2514\u2500 0.385 apply_step  awkward/_broadcasting.py:369\r\n\u2502  \u2502                 \u2514\u2500 0.385 continuation  awkward/_broadcasting.py:991\r\n\u2502  \u2502                    \u2514\u2500 0.385 broadcast_any_list  awkward/_broadcasting.py:499\r\n\u2502  \u2502                       \u2514\u2500 0.385 apply_step  awkward/_broadcasting.py:369\r\n\u2502  \u2502                          \u2514\u2500 0.385 continuation  awkward/_broadcasting.py:991\r\n\u2502  \u2502                             \u2514\u2500 0.385 broadcast_any_list  awkward/_broadcasting.py:499\r\n\u2502  \u2502                                \u2514\u2500 0.379 apply_step  awkward/_broadcasting.py:369\r\n\u2502  \u2502                                   \u2514\u2500 0.379 action  awkward/_connect/numpy.py:228\r\n\u2502  \u2502                                      \u2514\u2500 0.379 apply_ufunc  awkward/_backends/backend.py:46\r\n\u2502  \u2514\u2500 2.152 __array_ufunc__  awkward/highlevel.py:1289\r\n\u2502     \u2514\u2500 2.152 array_ufunc  awkward/_connect/numpy.py:219\r\n\u2502        \u2514\u2500 2.152 recursively_apply  awkward/_do.py:20\r\n\u2502           \u2514\u2500 2.152 _recursively_apply  awkward/contents/listoffsetarray.py:2069\r\n\u2502              \u2514\u2500 2.150 continuation  awkward/contents/listoffsetarray.py:2084\r\n\u2502                 \u2514\u2500 2.150 _recursively_apply  awkward/contents/numpyarray.py:1261\r\n\u2502                    \u2514\u2500 2.150 unary_action  awkward/_connect/numpy.py:309\r\n\u2502                       \u2514\u2500 2.150 action  awkward/_connect/numpy.py:228\r\n\u2502                          \u2514\u2500 2.150 apply_ufunc  awkward/_backends/backend.py:46\r\n\u251c\u2500 0.406 func  numpy/lib/mixins.py:18\r\n\u2502  \u2514\u2500 0.406 __array_ufunc__  awkward/highlevel.py:1289\r\n\u2502     \u2514\u2500 0.406 array_ufunc  awkward/_connect/numpy.py:219\r\n\u2502        \u2514\u2500 0.406 recursively_apply  awkward/_do.py:20\r\n\u2502           \u2514\u2500 0.406 _recursively_apply  awkward/contents/listoffsetarray.py:2069\r\n\u2502              \u251c\u2500 0.222 __getitem__  awkward/contents/content.py:536\r\n\u2502              \u2502  \u2514\u2500 0.222 _getitem  awkward/contents/content.py:539\r\n\u2502              \u2502     \u2514\u2500 0.222 _getitem_range  awkward/contents/numpyarray.py:295\r\n\u2502              \u2502        \u2514\u2500 0.222 __init__  awkward/contents/numpyarray.py:97\r\n\u2502              \u2502           \u2514\u2500 0.222 __instancecheck__  typing.py:1009\r\n\u2502              \u2514\u2500 0.179 continuation  awkward/contents/listoffsetarray.py:2084\r\n\u2502                 \u2514\u2500 0.179 _recursively_apply  awkward/contents/numpyarray.py:1261\r\n\u2502                    \u2514\u2500 0.179 unary_action  awkward/_connect/numpy.py:309\r\n\u2502                       \u2514\u2500 0.179 action  awkward/_connect/numpy.py:228\r\n\u2502                          \u2514\u2500 0.179 apply_ufunc  awkward/_backends/backend.py:46\r\n\u251c\u2500 0.279 argmin  awkward/operations/ak_argmin.py:14\r\n\u2502  \u2514\u2500 0.279 _impl  awkward/operations/ak_argmin.py:152\r\n\u2502     \u2514\u2500 0.279 reduce  awkward/_do.py:259\r\n\u2502        \u2514\u2500 0.267 _reduce_next  awkward/contents/listoffsetarray.py:1464\r\n\u2502           \u251c\u2500 0.167 _reduce_next  awkward/contents/numpyarray.py:1074\r\n\u2502           \u2502  \u2514\u2500 0.119 apply_reducer  awkward/_backends/backend.py:37\r\n\u2502           \u2502     \u2514\u2500 0.119 apply  awkward/_reducers.py:81\r\n\u2502           \u2502        \u2514\u2500 0.119 __call__  awkward/_kernels.py:89\r\n\u2502           \u2514\u2500 0.099 __call__  awkward/_kernels.py:89\r\n\u2514\u2500 0.107 func  numpy/lib/mixins.py:53\r\n   \u2514\u2500 0.107 __array_ufunc__  awkward/highlevel.py:1289\r\n      \u2514\u2500 0.107 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2514\u2500 0.107 recursively_apply  awkward/_do.py:20\r\n            \u2514\u2500 0.107 _recursively_apply  awkward/contents/listoffsetarray.py:2069\r\n               \u2514\u2500 0.104 continuation  awkward/contents/listoffsetarray.py:2084\r\n                  \u2514\u2500 0.104 _recursively_apply  awkward/contents/numpyarray.py:1261\r\n                     \u2514\u2500 0.104 unary_action  awkward/_connect/numpy.py:309\r\n                        \u2514\u2500 0.104 action  awkward/_connect/numpy.py:228\r\n                           \u2514\u2500 0.104 apply_ufunc  awkward/_backends/backend.py:46\r\n```\r\nand in ak1:\r\n```\r\n(coffea-testing) lgray@Lindseys-MBP dask-demo-day-20042023 % python regression_repro.py\r\n3.7437375 0 112\r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 17:06:25  Samples:  1\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 0.570     CPU time: 0.568\r\n/   _/                      v4.4.0\r\n\r\nProgram: regression_repro.py\r\n\r\n0.570 <module>  regression_repro.py:1\r\n\u2514\u2500 0.570 combinations  awkward/operations/structure.py:3679\r\n\r\n\r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 17:06:26  Samples:  19\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 3.171     CPU time: 2.911\r\n/   _/                      v4.4.0\r\n\r\nProgram: regression_repro.py\r\n\r\n3.171 <module>  regression_repro.py:1\r\n\u251c\u2500 3.133 LorentzVectorArray.func  numpy/lib/mixins.py:18\r\n\u2502  \u2514\u2500 3.133 LorentzVectorArray.__array_ufunc__  awkward/highlevel.py:1353\r\n\u2502     \u2514\u2500 3.133 array_ufunc  awkward/_connect/_numpy.py:54\r\n\u2502        \u2514\u2500 3.133 broadcast_and_apply  awkward/_util.py:619\r\n\u2502           \u2514\u2500 3.132 apply  awkward/_util.py:695\r\n\u2502              \u2514\u2500 3.132 apply  awkward/_util.py:695\r\n\u2502                 \u251c\u2500 2.976 apply  awkward/_util.py:695\r\n\u2502                 \u2502  \u251c\u2500 1.627 [self]  None\r\n\u2502                 \u2502  \u2514\u2500 1.350 apply  awkward/_util.py:695\r\n\u2502                 \u2502     \u2514\u2500 1.350 <lambda>  awkward/_connect/_numpy.py:177\r\n\u2502                 \u2502        \u2514\u2500 1.350 adjust  awkward/_connect/_numpy.py:70\r\n\u2502                 \u2502           \u2514\u2500 1.350 LorentzVectorArray.add  regression_repro.py:24\r\n\u2502                 \u2502              \u2514\u2500 1.350 Array.func  numpy/lib/mixins.py:18\r\n\u2502                 \u2502                 \u2514\u2500 1.350 Array.__array_ufunc__  awkward/highlevel.py:1353\r\n\u2502                 \u2502                    \u2514\u2500 1.350 array_ufunc  awkward/_connect/_numpy.py:54\r\n\u2502                 \u2502                       \u2514\u2500 1.350 broadcast_and_apply  awkward/_util.py:619\r\n\u2502                 \u2502                          \u2514\u2500 1.350 apply  awkward/_util.py:695\r\n\u2502                 \u2502                             \u2514\u2500 1.350 getfunction  awkward/_connect/_numpy.py:150\r\n\u2502                 \u2514\u2500 0.153 [self]  None\r\n\u2514\u2500 0.036 [self]  None\r\n\r\n\r\n\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 17:06:29  Samples:  27\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 4.520     CPU time: 4.517\r\n/   _/                      v4.4.0\r\n\r\nProgram: regression_repro.py\r\n\r\n4.519 <module>  regression_repro.py:1\r\n\u251c\u2500 4.079 LorentzVectorArray.mass  regression_repro.py:17\r\n\u2502  \u251c\u2500 3.987 LorentzVectorArray.mass2  regression_repro.py:12\r\n\u2502  \u2502  \u251c\u2500 3.932 Array.func  numpy/lib/mixins.py:18\r\n\u2502  \u2502  \u2502  \u2514\u2500 3.932 Array.__array_ufunc__  awkward/highlevel.py:1353\r\n\u2502  \u2502  \u2502     \u2514\u2500 3.932 array_ufunc  awkward/_connect/_numpy.py:54\r\n\u2502  \u2502  \u2502        \u2514\u2500 3.932 broadcast_and_apply  awkward/_util.py:619\r\n\u2502  \u2502  \u2502           \u2514\u2500 3.932 apply  awkward/_util.py:695\r\n\u2502  \u2502  \u2502              \u2514\u2500 3.930 apply  awkward/_util.py:695\r\n\u2502  \u2502  \u2502                 \u2514\u2500 3.926 apply  awkward/_util.py:695\r\n\u2502  \u2502  \u2502                    \u2514\u2500 3.926 getfunction  awkward/_connect/_numpy.py:150\r\n\u2502  \u2502  \u2514\u2500 0.055 [self]  None\r\n\u2502  \u2514\u2500 0.083 Array.__array_ufunc__  awkward/highlevel.py:1353\r\n\u2502     \u2514\u2500 0.083 array_ufunc  awkward/_connect/_numpy.py:54\r\n\u2502        \u2514\u2500 0.083 broadcast_and_apply  awkward/_util.py:619\r\n\u2502           \u2514\u2500 0.083 apply  awkward/_util.py:695\r\n\u2502              \u2514\u2500 0.083 apply  awkward/_util.py:695\r\n\u2502                 \u2514\u2500 0.083 apply  awkward/_util.py:695\r\n\u2502                    \u2514\u2500 0.083 getfunction  awkward/_connect/_numpy.py:150\r\n\u251c\u2500 0.234 argmin  awkward/operations/reducers.py:691\r\n\u251c\u2500 0.070 Array.func  numpy/lib/mixins.py:18\r\n\u2502  \u2514\u2500 0.070 Array.__array_ufunc__  awkward/highlevel.py:1353\r\n\u2502     \u2514\u2500 0.070 array_ufunc  awkward/_connect/_numpy.py:54\r\n\u2502        \u2514\u2500 0.070 broadcast_and_apply  awkward/_util.py:619\r\n\u2502           \u2514\u2500 0.070 apply  awkward/_util.py:695\r\n\u2502              \u2514\u2500 0.070 apply  awkward/_util.py:695\r\n\u2502                 \u2514\u2500 0.070 apply  awkward/_util.py:695\r\n\u2502                    \u2514\u2500 0.070 getfunction  awkward/_connect/_numpy.py:150\r\n\u2514\u2500 0.068 Array.func  numpy/lib/mixins.py:53\r\n   \u2514\u2500 0.068 Array.__array_ufunc__  awkward/highlevel.py:1353\r\n      \u2514\u2500 0.068 array_ufunc  awkward/_connect/_numpy.py:54\r\n         \u2514\u2500 0.068 broadcast_and_apply  awkward/_util.py:619\r\n            \u2514\u2500 0.068 apply  awkward/_util.py:695\r\n               \u2514\u2500 0.068 apply  awkward/_util.py:695\r\n                  \u2514\u2500 0.068 apply  awkward/_util.py:695\r\n                     \u2514\u2500 0.068 getfunction  awkward/_connect/_numpy.py:150\r\n```\r\nOn an m1 max macbook pro with 32GB of memory.",
  "closed_at":"2023-05-02T13:09:58Z",
  "comments":18,
  "created_at":"2023-04-28T22:17:31Z",
  "id":1689198466,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5krx-C",
  "number":2440,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Performance regressions compared to ak1",
  "updated_at":"2023-05-02T13:13:05Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"test if releasing memory earlier helps with https://github.com/scikit-hep/awkward/issues/2440",
  "closed_at":"2023-09-04T15:24:14Z",
  "comments":3,
  "created_at":"2023-05-01T13:27:45Z",
  "draft":true,
  "id":1690810463,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PgGnf",
  "number":2441,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"test: growablebuffer move_to",
  "updated_at":"2024-02-01T21:40:01Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Might fix #2440 by ensuring that the instance methods stored in `ErrorContent._kwargs` do not introduce a reference cycle that exists beyond the scope of the context manager. Python eventually frees these, but it may be some time before this happens.",
  "closed_at":"2023-05-02T13:09:56Z",
  "comments":3,
  "created_at":"2023-05-01T15:17:18Z",
  "draft":false,
  "id":1690941222,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Pgic3",
  "number":2442,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-02T13:09:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: avoid reference cycles with the error-handling machinery",
  "updated_at":"2023-05-02T13:09:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.262 \u2192 v0.0.263](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.262...v0.0.263)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-05-02T12:59:31Z",
  "comments":0,
  "created_at":"2023-05-02T01:21:08Z",
  "draft":false,
  "id":1691641560,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Pi8aN",
  "number":2443,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-02T12:59:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-05-02T12:59:32Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR touches the fairly important broadcasting logic to fix some of the unknown-length cases.\r\n\r\nIn general, it removes `if backend.nplike.known_data` blocks in favour of logic that explicitly handles unknown lengths.\r\n\r\nFixes #2439",
  "closed_at":"2023-05-03T11:52:56Z",
  "comments":1,
  "created_at":"2023-05-02T14:09:54Z",
  "draft":false,
  "id":1692503021,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Pl00-",
  "number":2444,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-03T11:52:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: proper unknown size broadcasting for all-regular",
  "updated_at":"2023-05-03T11:52:57Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.5 to 1.8.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.6</h2>\n<h2>What's Updated</h2>\n<ul>\n<li><a href=\"https://github.com/sponsors/woodruffw\"><code>@\u200bwoodruffw</code></a> dropped the references to a \u201cprivate beta\u201d from the project docs and runtime in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/147\">pypa/gh-action-pypi-publish#147</a>. He also clarified that the API tokens are still more secure than passwords in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/150\">pypa/gh-action-pypi-publish#150</a>.</li>\n<li><a href=\"https://github.com/sponsors/asherf\"><code>@\u200basherf</code></a> noticed that the action metadata incorrectly marked the <code>password</code> field as required and contributed a correction in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/151\">pypa/gh-action-pypi-publish#151</a></li>\n<li><a href=\"https://github.com/sponsors/webknjaz\"><code>@\u200bwebknjaz</code></a> moved the Trusted Publishing example to the top of the README in hopes that new users would default to using it via <a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f47b34707fd264d5ddb1ef322ca74cf8e4cf351b\">https://github.com/pypa/gh-action-pypi-publish/commit/f47b34707fd264d5ddb1ef322ca74cf8e4cf351b</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/sponsors/asherf\"><code>@\u200basherf</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/151\">pypa/gh-action-pypi-publish#151</a></li>\n</ul>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.6\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.6</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a56da0b891b3dc519c7ee3284aff1fad93cc8598\"><code>a56da0b</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/151\">#151</a> from asherf/trusted</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e4b903174144ed1ae155796f72e117b95cf30c3f\"><code>e4b9031</code></a> password input is no longer required, since not specifying it implies trusted...</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/5a085bf49e449ba94cc551efdc03b14b2be3788c\"><code>5a085bf</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/150\">#150</a> from trail-of-forks/tob-doc-tweaks</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/0811f991bd3b72bc79a131736a1966d9df922f60\"><code>0811f99</code></a> README: small doc tweaks</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f47b34707fd264d5ddb1ef322ca74cf8e4cf351b\"><code>f47b347</code></a> \ud83d\udcdd\ud83c\udfa8 Put OIDC on pedestal @ README</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/7a1a355fb5ad6afb4e8f748ad036708c1c61c396\"><code>7a1a355</code></a> \ud83c\udfa8 Show GH environments use in README examples</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/3b6670b0bd04d54039641fb3b2ac878aad9d70fc\"><code>3b6670b</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/147\">#147</a> from trail-of-forks/tob-stabilize-oidc</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/c008c2f40abc7b85467b393f3b78e67391ffa7f8\"><code>c008c2f</code></a> README: re-add OIDC note</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/fe431ff9ad22d027a59d866e45c4e40d93d8ce57\"><code>fe431ff</code></a> README, oidc-exchange: remove beta references</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/c542b72dc68d2280248f2d864ba901e0c31a3ee7\"><code>c542b72</code></a> Bump WPS flake8 plugin set to v0.17.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.5...v1.8.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.5&new-version=1.8.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-05-09T13:12:53Z",
  "comments":1,
  "created_at":"2023-05-03T17:58:50Z",
  "draft":false,
  "id":1694547305,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5PsvNV",
  "number":2445,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-09T13:12:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.5 to 1.8.6",
  "updated_at":"2023-05-09T13:12:54Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.263 \u2192 v0.0.265](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.263...v0.0.265)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-05-09T13:19:27Z",
  "comments":1,
  "created_at":"2023-05-09T01:41:50Z",
  "draft":false,
  "id":1701169008,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QDH7X",
  "number":2446,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-09T13:19:27Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-05-09T13:19:28Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #2296",
  "closed_at":"2023-05-10T08:51:27Z",
  "comments":1,
  "created_at":"2023-05-09T12:42:54Z",
  "draft":false,
  "id":1701948617,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QFucK",
  "number":2447,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-10T08:51:27Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add validity error for duplicate record field",
  "updated_at":"2023-05-10T08:51:28Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #2405",
  "closed_at":"2023-05-10T09:51:39Z",
  "comments":5,
  "created_at":"2023-05-09T12:56:56Z",
  "draft":false,
  "id":1701980207,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QF1cs",
  "number":2448,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-10T09:51:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: annotate pytest failures on GHA",
  "updated_at":"2023-05-10T09:51:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2364",
  "closed_at":"2023-05-10T08:50:40Z",
  "comments":1,
  "created_at":"2023-05-09T13:18:24Z",
  "draft":false,
  "id":1702022279,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QF-mS",
  "number":2449,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-10T08:50:40Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `ak.to_numpy` does not properly convert lists of empty string",
  "updated_at":"2023-05-10T08:50:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR introduces two new environments for releasing packages on PyPI. There's no strong reason to use multiple environments, but in general it's better to avoid sharing any kind of state / credentials between unrelated workflows.\r\n\r\nLeverages [new PyPI Trusted Publishers feature](https://blog.pypi.org/posts/2023-04-20-introducing-trusted-publishers/).",
  "closed_at":"2023-05-09T18:04:42Z",
  "comments":1,
  "created_at":"2023-05-09T17:50:46Z",
  "draft":false,
  "id":1702474142,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QHf5Y",
  "number":2450,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-09T18:04:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: publish to PyPI with OIDC",
  "updated_at":"2023-05-09T18:04:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR applies the scheduled deprecations from [our wiki](https://github.com/scikit-hep/awkward/wiki#api-breaking-changes-after-20), in anticipation of our 2.2.0 release.",
  "closed_at":"2023-05-10T07:58:12Z",
  "comments":1,
  "created_at":"2023-05-10T06:53:11Z",
  "draft":false,
  "id":1703241961,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QKD3R",
  "number":2451,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-10T07:58:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: prepare 2.2.0 release",
  "updated_at":"2023-05-10T07:58:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-05-10T08:41:16Z",
  "comments":0,
  "created_at":"2023-05-10T08:40:41Z",
  "draft":false,
  "id":1703401579,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QKlzg",
  "number":2453,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-10T08:41:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: update contributing guide",
  "updated_at":"2023-05-10T08:41:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Awkward associates `(\"__typestr__\", \"name\")` behavior keys with custom typestrings for named types (records, arrays). Right now, that's implemented using a `typestr` argument. \r\n\r\nThis PR drops `typestr` (deprecates), and instead introduces a `behavior` dict on the highlevel type, mirroring what already happens for arrays/records. Custom typestrings are resolved from this dict.\r\n\r\n@jpivarski and I discussed this, and I was initially in favour of just building out the `typestr` argument usage. However, it feels to me that passing the behaviour to mirror our array/content implementation seems nicer (and keeps typestrings as contextual properties, rather than an intrinsic part of the type object)\r\n\r\nThis PR does the following:\r\n- Remove string special casing in typestring resolution\r\n- Simplifies typestring resolution\r\n- Fixes a bug in `ak.types.from_datashape` (doesn't use new `ScalarType`)\r\n- Changes typestring of regular strings to `string[N]` \r\n\r\nI also noticed some quirks that we should raise now:\r\n- Awkward seems to support fixed-length strings (e.g. `ak.to_regular([\"hell\", \"worl\"]).type.show()`), but this pathway is never seen as we usually pass in a custom `typestr`.  \r\n  I think the rule here is that typestrings are always used in favour of the type's default format, but the type can embellish that e.g. with fixed-length information?\r\n- `repr(type)` shows custom typestrings. I think this should not be the case; typestrings are an aesthetic thing, not a fundamental part of the representation.\r\n\r\nCloses #1945",
  "closed_at":"2023-05-15T22:17:04Z",
  "comments":5,
  "created_at":"2023-05-11T11:59:26Z",
  "draft":false,
  "id":1705683481,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QSSdB",
  "number":2454,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-15T22:17:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: remove use of `typestr` in `ak.types.Type`",
  "updated_at":"2023-05-15T22:17:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nWe are leaning towards strings being a robust abstraction \u2014 if you want to erase a string, remove the parameters (or use `ak.enforce_type`). \r\n\r\nHowever, there are some holes in this, notably with `ak.flatten`:\r\n```python\r\n>>> ak.flatten([\"hello\", \"moto\"], axis=1)\r\n'hellomoto'\r\n```\r\n\r\nWe should ensure that this raises an error.",
  "closed_at":"2023-05-26T17:51:54Z",
  "comments":0,
  "created_at":"2023-05-11T14:24:57Z",
  "id":1705930177,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5lrm3B",
  "number":2455,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.flatten` flattens strings with `axis != None`",
  "updated_at":"2023-05-26T17:51:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #2432 \r\n\r\n- [x] Support for string-likes in `getitem`\r\n- [x] Support for string-likes in `_remove_structure`\r\n- [x] Support for string-likes in `_to_backend_array`\r\n- [x] Support for string-likes in `_combinations`\r\n- [x] Support for string-likes in `_argsort_next`\r\n- [x] Support for string-likes in `_sort_next`\r\n- [x] Support for string-likes in `_unique`\r\n- [x] Support for string-likes in `_is_unique`\r\n- [x] Support for string-likes in `_numbers_to_type`\r\n- [x] Support for string-likes in `_to_arrow`\r\n- [x] Support for string-likes in `_reduce_next`\r\n- [ ] Validity error for string-likes (list of numpy invariant) [^1]\r\n- [ ] Figure out whether to make `behavior: Mapping` internally \r\n\r\n[^1]: should we allow overloading validity error for any type name?",
  "closed_at":"2023-06-20T10:59:59Z",
  "comments":6,
  "created_at":"2023-05-11T14:32:21Z",
  "draft":true,
  "id":1705945580,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QTKw-",
  "number":2456,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: rework string abstraction",
  "updated_at":"2023-09-17T16:18:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nAt present, we have [code that implies `NumpyArray` can be a string](https://github.com/scikit-hep/awkward/blob/f3ce29e0a6014ebbce8a722826abc6fc7ae14791/src/awkward/contents/numpyarray.py#L665) (list of char/byte). Whilst this is only a single line of code, it makes me realise that we don't have a clear policy here. Without the ability to store parameters on a child content, we would need to implement this _at present_ with special logic on `NumpyArray` to add these parameters when e.g. pulling out a string. \r\n\r\nI don't think this is necessary; 2D `NumpyArray`s are only really useful if you have a non-contiguous layout, as it defers the need to render it contiguous. Given that strings are already converted into `ListArray` layouts with `from_numpy`, I think we could impose the restriction that `NumpyArray` cannot have `__array__ = \"string\"`, and simply require that a `RegularArray` be used for such a purpose.\r\n\r\nThoughts? @jpivarski ",
  "closed_at":"2023-06-27T00:58:59Z",
  "comments":0,
  "created_at":"2023-05-12T11:19:50Z",
  "id":1707444231,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5lxYgH",
  "number":2457,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`NumpyArray` should not be string-like",
  "updated_at":"2023-06-27T00:58:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #1423\r\n\r\n- [x] Implement non-positional reducer support\r\n- [x] Implement positional reducer support\r\n- [x] Changed the `ak.behavior` documentation to use MyST Markdown",
  "closed_at":"2023-05-19T12:10:58Z",
  "comments":6,
  "created_at":"2023-05-12T13:56:31Z",
  "draft":false,
  "id":1707685582,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QZBpr",
  "number":2458,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-19T12:10:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: support record reducer overloads",
  "updated_at":"2023-05-19T12:11:00Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"For a while we've wanted a `Sentinel` class, but it's not been clear where to put it such that our imports don't tangle. After #2131 and friends, we have much leaner modules, and it's safe to put this in `ak._util`.\r\n\r\nAlso, generally PEP8 encourages uppercase constants, which I consider sentinels to be.",
  "closed_at":"2023-05-15T18:32:49Z",
  "comments":1,
  "created_at":"2023-05-15T12:12:54Z",
  "draft":false,
  "id":1709974878,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Qge_q",
  "number":2459,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-15T18:32:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: reorganise sentinel definitions",
  "updated_at":"2023-05-15T18:32:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR:\r\n- Adds handling of `IndexedArray` nodes to `ak.almost_equal` (these come from carrying a `RecordArray`)\r\n- Replaces use of `layout.to_packed()` with explicit packing logic\r\n\r\n(2) makes our code more predictable; there are exemptions to packing rules that make it more of an obfuscation than code re-use to rely on `to_packed()`.\r\n\r\nBy simplifying the switch case, we now don't explicitly catch non-implemented cases. I think, however, this logic is already exhaustive in the valid combinations (`list-list`, `option-option`, etc.)",
  "closed_at":"2023-05-16T09:52:09Z",
  "comments":1,
  "created_at":"2023-05-15T22:59:27Z",
  "draft":false,
  "id":1710958907,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Qj0br",
  "number":2460,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-16T09:52:09Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: handle indexed nodes in `ak.almost_equal`",
  "updated_at":"2023-05-16T09:52:10Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.265 \u2192 v0.0.267](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.265...v0.0.267)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-05-17T12:13:29Z",
  "comments":1,
  "created_at":"2023-05-16T01:09:10Z",
  "draft":false,
  "id":1711051672,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QkHyD",
  "number":2461,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-17T12:13:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-05-17T12:13:30Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.2.0\r\n\r\n### Description and code to reproduce\r\n\r\nN.B.: This is lower priority, but it scales with analysis size/complexity!\r\n\r\nWhen running column optimization in dask awkward a typetracer is passed through the whole analysis code.\r\nThis triggers all relevant function calls for the analysis and produces an accurate accounting of data needs which is great, but as analyses grow larger (especially with systematics overhead!) the tracing begins to take quite some time for processing no data.\r\n\r\nI understand this is only so reducible, but responsiveness is definitely part of user experience and it would be sad if we lost users because of really excellent core functionality taking too long.\r\n\r\nHere is a pyinstrument trace showing what functions stacks are grabbing the most time in a mostly realistic analysis with full systematics:\r\n```\r\n  _     ._   __/__   _ _  _  _ _/_   Recorded: 08:25:40  Samples:  3840\r\n /_//_/// /_\\ / //_// / //_'/ //     Duration: 3.983     CPU time: 3.988\r\n/   _/                      v4.3.0\r\n\r\nProgram: yimu_test5.py\r\n\r\n3.983 <module>  yimu_test5.py:1\r\n\u2514\u2500 3.983 necessary_columns  dask_awkward/lib/inspect.py:11\r\n   \u2514\u2500 3.983 _necessary_columns  dask_awkward/lib/optimize.py:392\r\n      \u2514\u2500 3.979 _get_column_reports  dask_awkward/lib/optimize.py:335\r\n         \u251c\u2500 3.900 get_sync  dask/local.py:551\r\n         \u2502  \u2514\u2500 3.898 get_async  dask/local.py:350\r\n         \u2502     \u251c\u2500 3.382 fire_tasks  dask/local.py:452\r\n         \u2502     \u2502  \u2514\u2500 3.331 submit  dask/local.py:539\r\n         \u2502     \u2502     \u2514\u2500 3.292 batch_execute_tasks  dask/local.py:234\r\n         \u2502     \u2502        \u2514\u2500 3.292 <listcomp>  dask/local.py:238\r\n         \u2502     \u2502           \u2514\u2500 3.287 execute_task  dask/local.py:214\r\n         \u2502     \u2502              \u2514\u2500 3.279 _execute_task  dask/core.py:82\r\n         \u2502     \u2502                 \u2514\u2500 3.254 __call__  dask/optimization.py:987\r\n         \u2502     \u2502                    \u2514\u2500 3.246 get  dask/core.py:128\r\n         \u2502     \u2502                       \u2514\u2500 3.211 _execute_task  dask/core.py:82\r\n         \u2502     \u2502                          \u251c\u2500 1.186 __array_ufunc__  awkward/highlevel.py:1289\r\n         \u2502     \u2502                          \u2502  \u2514\u2500 1.138 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2502     \u2502                          \u2502     \u251c\u2500 0.496 _array_ufunc_custom_cast  awkward/_connect/numpy.py:147\r\n         \u2502     \u2502                          \u2502     \u2502  \u2514\u2500 0.449 find_custom_cast  awkward/_behavior.py:60\r\n         \u2502     \u2502                          \u2502     \u2502     \u251c\u2500 0.271 __iter__  _collections_abc.py:742\r\n         \u2502     \u2502                          \u2502     \u2502     \u2502  \u251c\u2500 0.146 [self]  \r\n         \u2502     \u2502                          \u2502     \u2502     \u2502  \u2514\u2500 0.106 __getitem__  collections/__init__.py:892\r\n         \u2502     \u2502                          \u2502     \u2502     \u2514\u2500 0.121 [self]  \r\n         \u2502     \u2502                          \u2502     \u251c\u2500 0.382 broadcast_and_apply  awkward/_broadcasting.py:1078\r\n         \u2502     \u2502                          \u2502     \u2502  \u2514\u2500 0.356 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502     \u2502     \u2514\u2500 0.336 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502     \u2502        \u2514\u2500 0.332 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502     \u2502           \u2514\u2500 0.299 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502     \u2502              \u2514\u2500 0.275 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502     \u2502                 \u251c\u2500 0.222 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502  \u2514\u2500 0.189 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502     \u251c\u2500 0.126 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502     \u2502  \u2514\u2500 0.105 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502     \u2502     \u2514\u2500 0.085 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502     \u2502        \u2514\u2500 0.066 action  awkward/_connect/numpy.py:228\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502     \u2502           \u2514\u2500 0.055 find_ufunc  awkward/_behavior.py:109\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502     \u2514\u2500 0.055 action  awkward/_connect/numpy.py:228\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2502        \u2514\u2500 0.043 find_ufunc  awkward/_behavior.py:109\r\n         \u2502     \u2502                          \u2502     \u2502                 \u2514\u2500 0.049 broadcast_any_indexed  awkward/_broadcasting.py:979\r\n         \u2502     \u2502                          \u2502     \u2514\u2500 0.213 recursively_apply  awkward/_do.py:20\r\n         \u2502     \u2502                          \u2502        \u251c\u2500 0.148 _recursively_apply  awkward/contents/listoffsetarray.py:2069\r\n         \u2502     \u2502                          \u2502        \u2502  \u2514\u2500 0.144 continuation  awkward/contents/listoffsetarray.py:2084\r\n         \u2502     \u2502                          \u2502        \u2502     \u2514\u2500 0.106 _recursively_apply  awkward/contents/numpyarray.py:1261\r\n         \u2502     \u2502                          \u2502        \u2502        \u2514\u2500 0.105 unary_action  awkward/_connect/numpy.py:309\r\n         \u2502     \u2502                          \u2502        \u2502           \u2514\u2500 0.105 action  awkward/_connect/numpy.py:228\r\n         \u2502     \u2502                          \u2502        \u2502              \u2514\u2500 0.085 find_ufunc  awkward/_behavior.py:109\r\n         \u2502     \u2502                          \u2502        \u2502                 \u2514\u2500 0.043 __iter__  _collections_abc.py:742\r\n         \u2502     \u2502                          \u2502        \u2514\u2500 0.045 _recursively_apply  awkward/contents/indexedarray.py:1030\r\n         \u2502     \u2502                          \u2502           \u2514\u2500 0.043 continuation  awkward/contents/indexedarray.py:1055\r\n         \u2502     \u2502                          \u251c\u2500 0.558 __call__  dask_awkward/lib/core.py:1894\r\n         \u2502     \u2502                          \u2502  \u251c\u2500 0.407 pt  coffea/nanoevents/methods/vector.py:121\r\n         \u2502     \u2502                          \u2502  \u2502  \u2514\u2500 0.407 r  coffea/nanoevents/methods/vector.py:85\r\n         \u2502     \u2502                          \u2502  \u2502     \u251c\u2500 0.361 r2  coffea/nanoevents/methods/vector.py:111\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502  \u2514\u2500 0.336 func  numpy/lib/mixins.py:18\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502     \u2514\u2500 0.335 __array_ufunc__  awkward/highlevel.py:1289\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502        \u2514\u2500 0.323 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u251c\u2500 0.222 broadcast_and_apply  awkward/_broadcasting.py:1078\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502  \u2514\u2500 0.213 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502     \u2514\u2500 0.205 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502        \u2514\u2500 0.203 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502           \u2514\u2500 0.191 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502              \u2514\u2500 0.181 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                 \u251c\u2500 0.113 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                 \u2502  \u2514\u2500 0.099 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                 \u2502     \u2514\u2500 0.087 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                 \u2502        \u2514\u2500 0.067 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                 \u2502           \u2514\u2500 0.057 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                 \u2514\u2500 0.067 broadcast_any_indexed  awkward/_broadcasting.py:979\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                    \u2514\u2500 0.051 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                       \u2514\u2500 0.050 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                          \u2514\u2500 0.050 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                             \u2514\u2500 0.048 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                                \u2514\u2500 0.048 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2502                                   \u2514\u2500 0.048 broadcast_any_indexed  awkward/_broadcasting.py:979\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502           \u2514\u2500 0.092 _array_ufunc_custom_cast  awkward/_connect/numpy.py:147\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502              \u2514\u2500 0.088 find_custom_cast  awkward/_behavior.py:60\r\n         \u2502     \u2502                          \u2502  \u2502     \u2502                 \u2514\u2500 0.049 __iter__  _collections_abc.py:742\r\n         \u2502     \u2502                          \u2502  \u2502     \u2514\u2500 0.047 __array_ufunc__  awkward/highlevel.py:1289\r\n         \u2502     \u2502                          \u2502  \u2502        \u2514\u2500 0.044 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2502     \u2502                          \u2502  \u2514\u2500 0.140 eta  coffea/nanoevents/methods/vector.py:512\r\n         \u2502     \u2502                          \u2502     \u2514\u2500 0.100 r  coffea/nanoevents/methods/vector.py:85\r\n         \u2502     \u2502                          \u2502        \u2514\u2500 0.088 r2  coffea/nanoevents/methods/vector.py:111\r\n         \u2502     \u2502                          \u2502           \u2514\u2500 0.075 func  numpy/lib/mixins.py:18\r\n         \u2502     \u2502                          \u2502              \u2514\u2500 0.075 __array_ufunc__  awkward/highlevel.py:1289\r\n         \u2502     \u2502                          \u2502                 \u2514\u2500 0.074 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2502     \u2502                          \u2502                    \u2514\u2500 0.047 broadcast_and_apply  awkward/_broadcasting.py:1078\r\n         \u2502     \u2502                          \u2502                       \u2514\u2500 0.045 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u251c\u2500 0.408 apply  dask/utils.py:41\r\n         \u2502     \u2502                          \u2502  \u251c\u2500 0.201 sum  awkward/operations/ak_sum.py:13\r\n         \u2502     \u2502                          \u2502  \u2502  \u2514\u2500 0.180 _impl  awkward/operations/ak_sum.py:267\r\n         \u2502     \u2502                          \u2502  \u2502     \u2514\u2500 0.174 reduce  awkward/_do.py:259\r\n         \u2502     \u2502                          \u2502  \u2502        \u2514\u2500 0.126 _reduce_next  awkward/contents/listoffsetarray.py:1464\r\n         \u2502     \u2502                          \u2502  \u2502           \u2514\u2500 0.040 _reduce_next  awkward/contents/listoffsetarray.py:1464\r\n         \u2502     \u2502                          \u2502  \u251c\u2500 0.061 count  awkward/operations/ak_count.py:12\r\n         \u2502     \u2502                          \u2502  \u2502  \u2514\u2500 0.052 _impl  awkward/operations/ak_count.py:110\r\n         \u2502     \u2502                          \u2502  \u2502     \u2514\u2500 0.049 reduce  awkward/_do.py:259\r\n         \u2502     \u2502                          \u2502  \u2514\u2500 0.057 mean  awkward/operations/ak_mean.py:13\r\n         \u2502     \u2502                          \u2502     \u2514\u2500 0.057 _impl  awkward/operations/ak_mean.py:152\r\n         \u2502     \u2502                          \u251c\u2500 0.399 __call__  dask_awkward/lib/structure.py:861\r\n         \u2502     \u2502                          \u2502  \u2514\u2500 0.398 with_field  awkward/operations/ak_with_field.py:19\r\n         \u2502     \u2502                          \u2502     \u2514\u2500 0.381 _impl  awkward/operations/ak_with_field.py:55\r\n         \u2502     \u2502                          \u2502        \u2514\u2500 0.360 broadcast_and_apply  awkward/_broadcasting.py:1078\r\n         \u2502     \u2502                          \u2502           \u2514\u2500 0.353 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502              \u2514\u2500 0.351 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502                 \u2514\u2500 0.350 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502                    \u2514\u2500 0.338 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502                       \u251c\u2500 0.276 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502                       \u2502  \u2514\u2500 0.260 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502                       \u2502     \u2514\u2500 0.246 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502                       \u2502        \u251c\u2500 0.151 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u251c\u2500 0.092 broadcast_any_indexed  awkward/_broadcasting.py:979\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2502  \u2514\u2500 0.082 <listcomp>  awkward/_broadcasting.py:980\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2502     \u2514\u2500 0.082 project  awkward/contents/indexedarray.py:408\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2502        \u2514\u2500 0.080 _carry  awkward/contents/recordarray.py:496\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2502           \u2514\u2500 0.079 <listcomp>  awkward/contents/recordarray.py:517\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2502              \u2514\u2500 0.071 _carry  awkward/contents/numpyarray.py:315\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2502                 \u2514\u2500 0.046 __getitem__  awkward/_nplikes/typetracer.py:378\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502  \u2514\u2500 0.059 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502     \u2514\u2500 0.056 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502        \u2514\u2500 0.053 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502           \u2514\u2500 0.052 broadcast_any_indexed  awkward/_broadcasting.py:979\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502              \u2514\u2500 0.047 <listcomp>  awkward/_broadcasting.py:980\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502                 \u2514\u2500 0.047 project  awkward/contents/indexedarray.py:408\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502                    \u2514\u2500 0.045 _carry  awkward/contents/recordarray.py:496\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2502                       \u2514\u2500 0.042 <listcomp>  awkward/contents/recordarray.py:517\r\n         \u2502     \u2502                          \u2502                       \u2502        \u2514\u2500 0.093 action  awkward/operations/ak_with_field.py:123\r\n         \u2502     \u2502                          \u2502                       \u2502           \u2514\u2500 0.081 <listcomp>  awkward/operations/ak_with_field.py:156\r\n         \u2502     \u2502                          \u2502                       \u2502              \u2514\u2500 0.079 __getitem__  awkward/contents/content.py:535\r\n         \u2502     \u2502                          \u2502                       \u2502                 \u2514\u2500 0.076 _getitem  awkward/contents/content.py:538\r\n         \u2502     \u2502                          \u2502                       \u2502                    \u2514\u2500 0.051 _getitem_field  awkward/contents/recordarray.py:458\r\n         \u2502     \u2502                          \u2502                       \u2502                       \u2514\u2500 0.048 content  awkward/contents/recordarray.py:396\r\n         \u2502     \u2502                          \u2502                       \u2514\u2500 0.058 action  awkward/operations/ak_with_field.py:123\r\n         \u2502     \u2502                          \u2502                          \u2514\u2500 0.052 <listcomp>  awkward/operations/ak_with_field.py:156\r\n         \u2502     \u2502                          \u2502                             \u2514\u2500 0.052 __getitem__  awkward/contents/content.py:535\r\n         \u2502     \u2502                          \u2502                                \u2514\u2500 0.051 _getitem  awkward/contents/content.py:538\r\n         \u2502     \u2502                          \u251c\u2500 0.324 __getitem__  awkward/highlevel.py:518\r\n         \u2502     \u2502                          \u2502  \u2514\u2500 0.256 __getitem__  awkward/contents/content.py:535\r\n         \u2502     \u2502                          \u2502     \u2514\u2500 0.255 _getitem  awkward/contents/content.py:538\r\n         \u2502     \u2502                          \u2502        \u251c\u2500 0.156 _getitem  awkward/contents/content.py:538\r\n         \u2502     \u2502                          \u2502        \u2502  \u2514\u2500 0.142 _getitem  awkward/contents/content.py:538\r\n         \u2502     \u2502                          \u2502        \u2502     \u2514\u2500 0.094 _getitem_next  awkward/contents/regulararray.py:451\r\n         \u2502     \u2502                          \u2502        \u2502        \u2514\u2500 0.080 _getitem_next_jagged  awkward/contents/listoffsetarray.py:416\r\n         \u2502     \u2502                          \u2502        \u2502           \u2514\u2500 0.071 _getitem_next_jagged  awkward/contents/listarray.py:389\r\n         \u2502     \u2502                          \u2502        \u2514\u2500 0.058 _getitem_next  awkward/contents/regulararray.py:451\r\n         \u2502     \u2502                          \u251c\u2500 0.187 __call__  dask_awkward/lib/core.py:1886\r\n         \u2502     \u2502                          \u2502  \u2514\u2500 0.187 delta_r  coffea/nanoevents/methods/vector.py:602\r\n         \u2502     \u2502                          \u2502     \u251c\u2500 0.095 eta  coffea/nanoevents/methods/vector.py:512\r\n         \u2502     \u2502                          \u2502     \u2502  \u2514\u2500 0.068 r  coffea/nanoevents/methods/vector.py:85\r\n         \u2502     \u2502                          \u2502     \u2502     \u2514\u2500 0.061 r2  coffea/nanoevents/methods/vector.py:111\r\n         \u2502     \u2502                          \u2502     \u2502        \u2514\u2500 0.056 func  numpy/lib/mixins.py:18\r\n         \u2502     \u2502                          \u2502     \u2502           \u2514\u2500 0.056 __array_ufunc__  awkward/highlevel.py:1289\r\n         \u2502     \u2502                          \u2502     \u2502              \u2514\u2500 0.053 array_ufunc  awkward/_connect/numpy.py:219\r\n         \u2502     \u2502                          \u2502     \u2514\u2500 0.050 delta_phi  coffea/nanoevents/methods/vector.py:199\r\n         \u2502     \u2502                          \u2514\u2500 0.058 __call__  dask_awkward/lib/structure.py:807\r\n         \u2502     \u2502                             \u2514\u2500 0.058 where  awkward/operations/ak_where.py:14\r\n         \u2502     \u2502                                \u2514\u2500 0.056 _impl3  awkward/operations/ak_where.py:97\r\n         \u2502     \u2502                                   \u2514\u2500 0.052 broadcast_and_apply  awkward/_broadcasting.py:1078\r\n         \u2502     \u2502                                      \u2514\u2500 0.049 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u2502                                         \u2514\u2500 0.048 continuation  awkward/_broadcasting.py:1023\r\n         \u2502     \u2502                                            \u2514\u2500 0.048 broadcast_any_list  awkward/_broadcasting.py:500\r\n         \u2502     \u2502                                               \u2514\u2500 0.042 apply_step  awkward/_broadcasting.py:370\r\n         \u2502     \u251c\u2500 0.252 keys  dask/highlevelgraph.py:530\r\n         \u2502     \u2502  \u2514\u2500 0.252 to_dict  dask/highlevelgraph.py:522\r\n         \u2502     \u2502     \u2514\u2500 0.252 ensure_dict  dask/utils.py:1236\r\n         \u2502     \u2502        \u2514\u2500 0.234 __iter__  _collections_abc.py:719\r\n         \u2502     \u2502           \u2514\u2500 0.233 __iter__  dask/blockwise.py:493\r\n         \u2502     \u2502              \u2514\u2500 0.232 _dict  dask/blockwise.py:452\r\n         \u2502     \u2502                 \u251c\u2500 0.066 fuse  dask/optimization.py:450\r\n         \u2502     \u2502                 \u251c\u2500 0.060 dims  dask/blockwise.py:440\r\n         \u2502     \u2502                 \u2502  \u2514\u2500 0.059 _make_dims  dask/blockwise.py:1480\r\n         \u2502     \u2502                 \u2502     \u2514\u2500 0.058 broadcast_dimensions  dask/blockwise.py:1420\r\n         \u2502     \u2502                 \u2514\u2500 0.051 make_blockwise_graph  dask/blockwise.py:759\r\n         \u2502     \u251c\u2500 0.129 start_state_from_dask  dask/local.py:140\r\n         \u2502     \u2502  \u2514\u2500 0.113 reverse_dict  dask/core.py:307\r\n         \u2502     \u2502     \u2514\u2500 0.112 [self]  \r\n         \u2502     \u2514\u2500 0.052 order  dask/order.py:84\r\n         \u2514\u2500 0.042 mock  dask_awkward/layers/layers.py:94\r\n``` \r\n\r\nI am happy to provide this test code if it is needed! (this cannot really be made minimal as it's ~emergent behavior)",
  "closed_at":"2023-06-16T12:11:27Z",
  "comments":11,
  "created_at":"2023-05-16T13:32:38Z",
  "id":1712040703,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5mC6r_",
  "number":2462,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Running over zero-length arrays, time spent mostly in function overhead",
  "updated_at":"2023-06-16T14:06:59Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.2.0\n\n### Description and code to reproduce\n\nThe following script:\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout)\r\n\r\nmasked_pt = ak.mask(ttarray.muon.pt, ttarray.muon.eta > 0)\r\n\r\nnones = ak.is_none(masked_pt)\r\n\r\nprint(report.data_touched)\r\n```\r\n\r\nprints out:\r\n```\r\n['muon_list_outer!', 'muon_eta!']\r\n```\r\n\r\nShould it also include `muon_pt` once we ask for the is_none?\r\n\r\nA symptom of this is:\r\nhttps://github.com/dask-contrib/dask-awkward/issues/260\r\n\r\nWhere dak is touching some random data and not delivering `Muon_pt` as `events.Muon.pt` to the form.",
  "closed_at":"2023-05-24T10:33:15Z",
  "comments":5,
  "created_at":"2023-05-17T03:54:26Z",
  "id":1713055669,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5mGye1",
  "number":2463,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.is_none doesn't seem to touch input data? should it?",
  "updated_at":"2023-05-24T10:33:15Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Whilst it is not profitable for us to try and optimise Awkward's metadata performance too strongly, these fixes are ones that I've been thinking of making for a while, and #2462 justifies it.",
  "closed_at":"2023-05-17T23:16:15Z",
  "comments":1,
  "created_at":"2023-05-17T17:38:39Z",
  "draft":false,
  "id":1714354356,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5QvS53",
  "number":2464,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-17T23:16:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: improve performance of behavior lookups",
  "updated_at":"2023-05-17T23:16:16Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This bug was caught during dask-awkward development.",
  "closed_at":"2023-05-22T16:23:21Z",
  "comments":0,
  "created_at":"2023-05-22T13:39:51Z",
  "draft":false,
  "id":1719720750,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RBOqV",
  "number":2466,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-22T16:23:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: convert index to shape item",
  "updated_at":"2023-05-22T16:23:22Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.267 \u2192 v0.0.270](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.267...v0.0.270)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-06-02T18:03:59Z",
  "comments":1,
  "created_at":"2023-05-23T00:59:00Z",
  "draft":false,
  "id":1720945288,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RFhVr",
  "number":2467,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-02T18:03:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-06-02T18:04:00Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\n\n(Apologies if this is already supported in some way I didn't find it in the docs or in the suggested links when opening the issue)\r\n\r\nI am working with a data format in which each event is a row in a table and it's a ragged array.\r\n\r\nFor context, this is how each event is written to file:\r\n- some columns relate to the general properties of the event\r\n- 2 of these columns, say \"A\" and \"B\" are integers\r\n- a second set of columns pertaining to properties related to A\r\n- a third set of columns pertain to properties related to B\r\n\r\nAs you can guess:\r\n- columns of A contain arrays long how much A says and the same for B\r\n- each event is independent, so a column \"A_bla\" becomes automatically a ragged array\r\n- most columns describe physical quantities which have units stored in the header of the file\r\n\r\nI am currently opening this file as a dictionary of numpy arrays and building 3 [astropy QTables](https://docs.astropy.org/en/stable/table/): \"event_table\", \"A_table\", \"B_table\". Of course from there one can play around with masking, filtering, etc...so my (immediate) use case is kind of fixed.\r\n\r\nSaid this, I cannot stop thinking that one of these files is basically an \" awkward table\"!\r\n\r\nAt the same time:\r\n- astropy devs say that support for ragged arrays is a numpy problem (see e.g. astropy/astropy#14014)\r\n- numpy devs have no intention to support this use-case (see e.g. numpy/numpy#22603 - which is kind of the point of why awkward array exists!)\r\n\r\nSoooo....what about adding units, maybe compatible with [astropy quantities](https://docs.astropy.org/en/stable/api/astropy.units.Quantity.html#astropy.units.Quantity) or with a similar object? \ud83d\ude04  ",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-05-23T14:06:29Z",
  "id":1722161261,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5mphht",
  "number":2468,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Support for units",
  "updated_at":"2023-10-31T14:25:41Z",
  "user":"MDQ6VXNlcjE3ODM2NjEw"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This kernel reads the values of `offsets`, so it should trigger a touch.\r\n\r\nI recall seeing a place in awkward where we didn't make these touches before invoking this function; really, we should perform touches as-close-to the functions that would actually touch the ",
  "closed_at":"2023-05-23T19:41:02Z",
  "comments":4,
  "created_at":"2023-05-23T16:27:15Z",
  "draft":false,
  "id":1722425064,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RKktA",
  "number":2469,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-23T19:41:02Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: touch offsets in kernel call",
  "updated_at":"2023-05-23T19:41:03Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We consider strings to be a relatively strong abstraction, so we should error when trying to flatten them at axis=0. To be able to flatten these arrays, users should change their type, e.g. with `ak.ensure_type`\r\n\r\n```python\r\n>>> import awkward as ak\r\n>>> ak.flatten([\"this\", \"and\", \"that\"], axis=1)\r\nValueError: array of strings cannot be directly flattened. To flatten this array, drop the `\"__array__\"=\"string\"` parameter using `ak.enforce_type`, `ak.with_parameter`, or `ak.without_parameters`/\r\n\r\nThis error occurred while calling\r\n\r\n    ak.flatten(\r\n        array = ['this', 'and', 'that']\r\n        axis = 1\r\n        highlevel = True\r\n        behavior = None\r\n    )\r\n>>> ak.flatten(\r\n...     ak.enforce_type([\"this\", \"and\", \"that\"], \"var * char\"),\r\n... axis=1)\r\n'thisandthat'\r\n```\r\n\r\n\r\nFixes #2455 ",
  "closed_at":"2023-05-26T17:51:53Z",
  "comments":2,
  "created_at":"2023-05-24T11:03:55Z",
  "draft":false,
  "id":1723727197,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RO-Zn",
  "number":2471,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-26T17:51:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix!: raise error when flattening strings",
  "updated_at":"2023-05-26T17:51:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR ensures that any buffers passed into a kernel are always touched. In time, we can start removing the manual touching that is associated with kernel calls.",
  "closed_at":"2023-05-24T17:05:46Z",
  "comments":1,
  "created_at":"2023-05-24T11:42:04Z",
  "draft":false,
  "id":1723788216,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RPLwZ",
  "number":2472,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-24T17:05:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: always touch arguments to kernels",
  "updated_at":"2023-05-24T17:05:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We should keep adding type hints, so I made another pass.",
  "closed_at":"2023-05-24T17:13:34Z",
  "comments":1,
  "created_at":"2023-05-24T13:37:27Z",
  "draft":false,
  "id":1724022237,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RP-wM",
  "number":2473,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-24T17:13:34Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: add more type hints!",
  "updated_at":"2023-05-24T17:13:35Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We are planning to remove this feature and replace it with more string-focussed customisation. This PR removes the custom broadcasting in anticipation for that change.\r\n\r\nPartially addresses #2432",
  "closed_at":"2023-05-24T18:04:36Z",
  "comments":0,
  "created_at":"2023-05-24T15:01:29Z",
  "draft":false,
  "id":1724211894,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RQox3",
  "number":2474,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-24T18:04:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: drop string broadcasting overloading",
  "updated_at":"2023-05-24T18:04:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We have no internal need for this property, and I can see that we might want to avoid relying on such information being trivially available. It's not guaranteed that all backends implement this e.g. `jax.Array`.",
  "closed_at":"2023-05-25T07:57:30Z",
  "comments":1,
  "created_at":"2023-05-24T15:47:11Z",
  "draft":false,
  "id":1724296205,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RQ7Iy",
  "number":2475,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate `NumpyArray.strides`",
  "updated_at":"2023-09-17T16:18:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR is a bag of changes:\r\n- Add some additional type hints\r\n- Refactor logic that depends upon `NumpyArray.is_contiguous` (to be more explicit).\r\n- Replace use of `.strides` with nplike method",
  "closed_at":"2023-05-26T13:05:42Z",
  "comments":1,
  "created_at":"2023-05-25T07:49:33Z",
  "draft":false,
  "id":1725278397,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RUOn-",
  "number":2476,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-26T13:05:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: cleanup and type hints",
  "updated_at":"2023-05-26T13:05:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR \r\n- fixes `start_at_zero` in `_compact_offsets`\r\n- improves the performance of `to_ListOffsetArray64` via `_broadcast_tooffsets64`. \r\n- removes kernels that can be replaced with `nplike` calls[^perf]\r\n\r\nIn `origin/main`, calling `to_ListOffsetArray64` for an array that does not have `int64` `offsets` invokes `_broadcast_tooffsets64`, which performs a `carry` of the list content. In this instance, we do not need to carry; a simple range-slice is sufficient.\r\n\r\nAlong the way, some kernels that aren't strictly required have been replaced with nplike calls.\r\n\r\n[^perf]: n.b. this _may_ lead to a performance regression. We should re-introduce these kernels in such cases.",
  "closed_at":"2023-06-01T09:27:53Z",
  "comments":5,
  "created_at":"2023-05-25T14:12:17Z",
  "draft":false,
  "id":1725913964,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RWZZF",
  "number":2477,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-01T09:27:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: check `start_at_zero` in `_compact_offsets`",
  "updated_at":"2023-06-01T09:27:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This brings parity with `Content._touch_data`, slightly improving readability.",
  "closed_at":"2023-05-26T17:50:12Z",
  "comments":2,
  "created_at":"2023-05-26T13:23:36Z",
  "draft":false,
  "id":1727622944,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RcNGw",
  "number":2478,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-26T17:50:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `Index._touch_XXX` methods",
  "updated_at":"2023-05-26T17:50:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As a memory optimisation, `dask-awkward` needs to be able to introduce placeholder arrays for buffers whose typetracers never touch data. \r\n\r\nThis PR adds a placeholder array that is guaranteed to survive basic non-touching operations, with dtype and length metadata.\r\n\r\nA consequence of this PR is the expectation that these placeholders may have `unknown-length` shapes. Concrete nplikes like CuPy don't support this via e.g. `shape_item_as_index`, but it might be that this is acceptable.",
  "closed_at":"2023-06-01T22:20:42Z",
  "comments":4,
  "created_at":"2023-05-26T17:12:13Z",
  "draft":false,
  "id":1727973455,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5RdZOH",
  "number":2479,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-01T22:20:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add placeholder array",
  "updated_at":"2023-06-01T22:20:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.12.3 to 2.13.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.13.0</h2>\n<ul>\n<li>\n<p>\u2728 Adds CPython 3.12 support, under the prerelease flag <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#prerelease-pythons\">CIBW_PRERELEASE_PYTHONS</a>. This version of cibuildwheel uses 3.12.0b1.</p>\n<p>While CPython is in beta, the ABI can change, so your wheels might not be compatible with the final release. For this reason, we don't recommend distributing wheels until RC1, at which point 3.12 will be available in cibuildwheel without the flag. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1507\">#1507</a>)</p>\n</li>\n<li>\n<p>\u2728 Adds the ability to pass arguments to the container engine when the container is created, using the <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#container-engine\">CIBW_CONTAINER_ENGINE</a> option. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1499\">#1499</a>)</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.13.0</h3>\n<p><em>28 May 2023</em></p>\n<ul>\n<li>\n<p>\u2728 Adds CPython 3.12 support, under the prerelease flag <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#prerelease-pythons\">CIBW_PRERELEASE_PYTHONS</a>. This version of cibuildwheel uses 3.12.0b1.</p>\n<p>While CPython is in beta, the ABI can change, so your wheels might not be compatible with the final release. For this reason, we don't recommend distributing wheels until RC1, at which point 3.12 will be available in cibuildwheel without the flag. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1507\">#1507</a>)</p>\n</li>\n<li>\n<p>\u2728 Adds the ability to pass arguments to the container engine when the container is created, using the <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#container-engine\">CIBW_CONTAINER_ENGINE</a> option. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1499\">#1499</a>)</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/51f5c7fe68ff24694d5a6ac0eb3ad476ddd062a8\"><code>51f5c7f</code></a> Bump version: v2.13.0</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8499628a5b38525c047996750633a7f7536ada17\"><code>8499628</code></a> feat: add Python 3.12 beta 1 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1507\">#1507</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/b2bc6fdda6ac2f3e9da11e69d45aba17c7ebcbbd\"><code>b2bc6fd</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1499\">#1499</a> from pypa/docker-flags</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/754a47388d5e2dcddc8f98e7c36dc605818caa9e\"><code>754a473</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1503\">#1503</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f25c8a64f6ee92473583130e5ec30ea583b90e7b\"><code>f25c8a6</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1506\">#1506</a> from artfwo/patch-1</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9b904777d4c3dd275fa23ca567c4e1ec4fa2b951\"><code>9b90477</code></a> Apply suggestions from code review</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/e14b8e8e2f129cdacbd49564032a2d0579d30269\"><code>e14b8e8</code></a> Add aalink to examples</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/da9be0a27b525a61e5b418a86e5526a93e349220\"><code>da9be0a</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/301dca264f3e41b1f0d07e13019fccfaaaae6273\"><code>301dca2</code></a> chore: use PyPI Trusted Publisher for releases (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1500\">#1500</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/c74083cfdaa286dc3a30b46c098010a60dc6429e\"><code>c74083c</code></a> [Bot] Update dependencies (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1485\">#1485</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.12.3...v2.13.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.12.3&new-version=2.13.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-05-30T15:53:02Z",
  "comments":1,
  "created_at":"2023-05-29T17:59:39Z",
  "draft":false,
  "id":1731088055,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Rn8ns",
  "number":2481,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-05-30T15:53:02Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.12.3 to 2.13.0",
  "updated_at":"2023-05-30T15:53:03Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"as discussed with @jpivarski ",
  "closed_at":"2023-06-01T08:28:11Z",
  "comments":2,
  "created_at":"2023-06-01T07:54:46Z",
  "draft":false,
  "id":1735711288,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5R3o7s",
  "number":2482,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-01T08:28:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: rename tonumbatype function to conform",
  "updated_at":"2023-06-01T08:28:12Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.2.1\n\n### Description and code to reproduce\n\n```python\r\nimport awkward as ak\r\nmask = ak.Array([False, False])\r\narray = ak.mask(ak.unflatten(ak.mask(ak.unflatten([5, 6], [1,1]), [True, True]), [1,1]), mask)\r\n\r\nak.any(array, axis=2)\r\n```\r\nThe last line raises `IndexError: index 0 is out of bounds for axis 0 with size 0`. However, I would except it to return `<Array [None, None] type='2 * option[var * ?bool]'>`\r\nIf `mask` has any elements that are true, it works.\r\nI also tested this with `ak.all` and `ak.sum` with the same results.",
  "closed_at":"2023-06-05T17:55:54Z",
  "comments":0,
  "created_at":"2023-06-02T14:48:14Z",
  "id":1738340682,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5nnPlK",
  "number":2484,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Reducers raise IndexError on masked three dimensional array",
  "updated_at":"2023-06-05T17:55:54Z",
  "user":"MDQ6VXNlcjMwMDQxMDcz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This is a tiny, easy fix. I was looking at error messages like\r\n\r\n```\r\nValueError: cannot broadcast NumpyArray of length 14 with NumpyArray of length 2in equal\r\n```\r\n\r\nwhich clearly need a space between the `2` and the `in`. Go ahead and merge after review, @agoose77\u2014I'm done!",
  "closed_at":"2023-06-02T15:36:11Z",
  "comments":1,
  "created_at":"2023-06-02T15:15:58Z",
  "draft":false,
  "id":1738388920,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SA0vq",
  "number":2485,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-02T15:36:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: formatting error message (missing space).",
  "updated_at":"2023-06-02T15:36:13Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR brings `ListOffsetArray.starts` and `stops` in line with `ListArray.starts`, by returning length-1 arrays if the list is empty. \r\n\r\nFixes #2484",
  "closed_at":"2023-06-02T16:35:14Z",
  "comments":2,
  "created_at":"2023-06-02T16:23:45Z",
  "draft":false,
  "id":1738481559,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SBI4y",
  "number":2486,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: make starts and stops return length-1 arrays for empty lists",
  "updated_at":"2023-06-02T16:41:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nanything after 13aea6de849a794ccb35b4743edc1602dcd97f7a (#2477)\n\n### Description and code to reproduce\n\nSuppose that a `ListOffsetArray` contains unreachable elements, like\r\n\r\n```python\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\na = ak.Array(\r\n    ak.contents.ListOffsetArray(\r\n        ak.index.Index64(np.array([1, 2, 3], np.int64)),\r\n        ak.contents.NumpyArray(\r\n            np.array([1, 1, 2, 1, 2, 3, 1, 2, 3, 4, 1, 2, 3, 4, 5], np.int64)\r\n        ),\r\n    )\r\n)\r\n\r\nassert a.to_list() == [[1], [2]]\r\n```\r\n\r\n(We get exactly this structure in an [Uproot test](https://github.com/scikit-hep/uproot5/blob/366e3dcdca8fffb61f9c770897d71197809a96f4/tests/test_0662-rntuple-stl-containers.py#L42).)\r\n\r\nWhen a ufunc is applied to it, such as `np.equal` in\r\n\r\n```python\r\nassert ak.all(a == [[1], [2]])\r\n```\r\n\r\nbroadcasting fails to trim or project while descending:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1362, in __array_ufunc__\r\n    return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 321, in array_ufunc\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 1098, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 1077, in apply_step\r\n    return continuation()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 1050, in continuation\r\n    return broadcast_any_list()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 580, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 1077, in apply_step\r\n    return continuation()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 1050, in continuation\r\n    return broadcast_any_list()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 771, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 407, in apply_step\r\n    checklength(contents, options)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_broadcasting.py\", line 116, in checklength\r\n    raise ValueError(\r\nValueError: cannot broadcast NumpyArray of length 14 with NumpyArray of length 2in equal\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/irishep/awkward/testy.py\", line 15, in <module>\r\n    assert ak.all(a == [[1], [2]])\r\n  File \"/home/jpivarski/mambaforge/lib/python3.9/site-packages/numpy/lib/mixins.py\", line 21, in func\r\n    return ufunc(self, other)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1362, in __array_ufunc__\r\n    return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 56, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 71, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nValueError: cannot broadcast NumpyArray of length 14 with NumpyArray of length 2in equal\r\n\r\nThis error occurred while calling\r\n\r\n    numpy.equal.__call__(\r\n        <Array [[1], [2]] type='2 * var * int64'>\r\n        [[1], [2]]\r\n    )\r\n```\r\n\r\nI did a git bisect by hand and narrowed it down to PR #2477. (\"By hand\" because there's an awkward-cpp change that needs a recompilation, and I didn't want to recompile in every test.) It's fine before that change and fails with the above error afterward.\r\n\r\nFortunately, this didn't go into any release, and it will need to be fixed before the next release. Also, we apparently needed a test like this\u2014perhaps too many of our tests check equality with `to_list`.",
  "closed_at":"2023-06-05T18:04:54Z",
  "comments":0,
  "created_at":"2023-06-02T16:31:15Z",
  "id":1738489794,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5nnz_C",
  "number":2487,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"PR #2477 broke an Uproot test",
  "updated_at":"2023-06-05T18:04:54Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Unlike `offsets`, `starts` is not guaranteed to always have at least one element. This kind of bug has been dealt with elsewhere, but these are a few outstanding places.\r\n\r\nFixes #2484",
  "closed_at":"2023-06-05T17:55:52Z",
  "comments":6,
  "created_at":"2023-06-02T17:00:24Z",
  "draft":false,
  "id":1738522427,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SBRwM",
  "number":2488,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-05T17:55:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: use offsets for starts to handle length-0 arrays",
  "updated_at":"2023-06-05T17:55:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"#2477 changed broadcasting, and in doing so, relaxed the strictness of the returned content by leaving the list contents untrimmed. This PR tightens that constraint to fix #2487 ",
  "closed_at":"2023-06-05T18:04:53Z",
  "comments":1,
  "created_at":"2023-06-03T10:42:47Z",
  "draft":false,
  "id":1739397634,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SETbx",
  "number":2489,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-05T18:04:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: trim content when broadcasting",
  "updated_at":"2023-06-05T18:07:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\n```python\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nx = np.arange(2 * 3).reshape(2, 3)\r\n\r\ny = ak.from_numpy(x, regulararray=True)\r\ny.show()\r\n\r\nresult = ak.argmin(y, axis=0, keepdims=True)\r\nresult.show()\r\n```",
  "closed_at":"2023-06-05T19:40:31Z",
  "comments":0,
  "created_at":"2023-06-05T14:09:21Z",
  "id":1741873919,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5n0uL_",
  "number":2490,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Positional reducers produce strange results for `axis != -1` on regular types",
  "updated_at":"2023-06-05T19:40:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes #2490, which was caused by a bug that #1811 introduced.\r\n\r\nTo recap our reduction assumptions:\r\n- `parents` *must* be _locally_ contiguous, e.g. `[ 0 0 2 2 1 1 ]` or `[ 0 0 1 1 2 2 ]`\r\n- `parents` *may not* be _dense_, e.g. `[ 1 1 2 2 ]` or `[ 0 0 2 2 3 3 ]`\r\n\r\n:scream: Both of these assumptions were incorrectly applied in #1811. I won't make any excuses, it shouldn't have happened! #1811 introduced code that assumed `parents` are both globally contiguous (`[ 1 1 2 2 ]`) and dense (`[ 0 0 1 1 2 2 ]`). Under those constraints, we can use `arange`, but in the more general case, we need to use a kernel to compute this.\r\n\r\nThis PR introduces a new explicit assumption:\r\n- `starts` has exactly `len(starts) == max(parents)+1`\r\nIf this assumption fails, then we may over-allocate `starts`, but that would be a programming error.\r\n\r\nThis PR uses the `awkward_ListOffsetArray_reduce_nonlocal_nextstarts_64` kernel to compute `nextstarts`. It is likely possible to compute this more exactly, but for correctness and ease, I'm re-using the list kernel for this.",
  "closed_at":"2023-06-05T19:40:29Z",
  "comments":1,
  "created_at":"2023-06-05T15:38:59Z",
  "draft":false,
  "id":1742047477,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SNZKT",
  "number":2492,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-05T19:40:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: starts handling in `RegularArray._reduce_next`",
  "updated_at":"2023-06-05T19:40:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Our CI wasn't including the kernel specification in the wheel hash key computation. This led to a cached wheel failing in #2492 ",
  "closed_at":"2023-06-05T22:53:48Z",
  "comments":2,
  "created_at":"2023-06-05T18:30:07Z",
  "draft":false,
  "id":1742332615,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SOYcU",
  "number":2493,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: include `kernel-specification.yml` in hash",
  "updated_at":"2023-09-17T16:18:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-06-05T22:01:46Z",
  "comments":1,
  "created_at":"2023-06-05T18:43:42Z",
  "draft":false,
  "id":1742357691,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SOeGG",
  "number":2494,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-05T22:01:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: upgrade CI micromamba action",
  "updated_at":"2023-06-05T22:01:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.2.1\r\n\r\n### Description and code to reproduce\r\n\r\n```python3\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromdict = {\r\n    \"class\": \"RegularArray\",\r\n    \"size\": 100,\r\n    \"len\": 0,\r\n    \"content\": {\r\n        \"class\": \"NumpyArray\",\r\n        \"primitive\": \"float32\",\r\n        \"inner_shape\": [],\r\n        \"parameters\": {},\r\n        \"form_key\": \"\",\r\n    }\r\n}\r\n\r\n\r\nform = ak.forms.from_dict(fromdict)\r\n\r\nttarray = ak.Array(\r\n    form.length_zero_array(highlevel=False).to_typetracer(forget_length=True)\r\n)\r\n\r\n# neither of the following function, both are needed in typical\r\n# ak -> numpy -> ML algorithm -> numpy -> ak transformations\r\nak.concatenate([ttarray], axis=1)\r\n\r\nak.concatenate([ttarray[:, np.newaxis, :]], axis=1)\r\n```\r\n\r\nresults in:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_concatenate.py\", line 51, in concatenate\r\n    return _impl(arrays, axis, mergebool, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_concatenate.py\", line 279, in _impl\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1079, in broadcast_and_apply\r\n    out = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1058, in apply_step\r\n    return continuation()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1031, in continuation\r\n    return broadcast_any_list()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 581, in broadcast_any_list\r\n    outcontent = apply_step(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_broadcasting.py\", line 1044, in apply_step\r\n    result = action(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_concatenate.py\", line 193, in action\r\n    tags = ak.index.Index8(backend.index_nplike.tile(prototype, length))\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 1099, in tile\r\n    raise NotImplementedError\r\nNotImplementedError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness11.py\", line 25, in <module>\r\n    ak.concatenate([ttarray], axis=1)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_concatenate.py\", line 51, in concatenate\r\n    return _impl(arrays, axis, mergebool, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 56, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 71, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nNotImplementedError: \r\n\r\nSee if this has been reported at https://github.com/scikit-hep/awkward/issues\r\n```",
  "closed_at":"2023-06-07T21:29:32Z",
  "comments":1,
  "created_at":"2023-06-05T20:10:02Z",
  "id":1742536663,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5n3P_X",
  "number":2495,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.concatenate does not work on RegularArray typetracers",
  "updated_at":"2023-06-07T21:29:32Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Description of new feature\r\n\r\nWhen tracing ML algorithm evaluation meant for evaluation within dask_awkward it is often necessary to provide non-empty data to the ML algorithm to get a meaningful output array. A length-one array of zeros, like `form.length_one_array()`, is sufficient for this task and would significantly simplify code that needs to perform these kinds of evaluations. \r\n\r\nExample of where this would simplify library code: https://github.com/CoffeaTeam/coffea/pull/798/files#diff-f929094235cdc99a2b652540733611357165a0a3b99cb26aa74fea51907f8344R280-R341 \r\n\r\nAs with `ak.typetracer.empty_if_typetracer(array)`, when calling `ak.typetracer.length_one_if_typetracer(array)` the `array` argument should have its data recursively touched if `array` is a typetracer.",
  "closed_at":"2023-06-09T02:50:25Z",
  "comments":0,
  "created_at":"2023-06-05T21:09:00Z",
  "id":1742627218,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5n3mGS",
  "number":2496,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"request for `ak.typetracer.length_one_if_typetracer(array)`",
  "updated_at":"2023-06-09T02:50:25Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR closes #2495, changing the code-style for readability.",
  "closed_at":"2023-06-07T21:29:31Z",
  "comments":2,
  "created_at":"2023-06-05T22:40:15Z",
  "draft":false,
  "id":1742732067,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SPxds",
  "number":2497,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-07T21:29:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `ak.concatenate` for typetracer",
  "updated_at":"2023-06-07T21:29:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-06-06T07:31:59Z",
  "comments":0,
  "created_at":"2023-06-05T23:03:16Z",
  "draft":true,
  "id":1742760955,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SP3Rq",
  "number":2498,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"wip: empty commit",
  "updated_at":"2023-09-17T16:18:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjE4NTI0NDc=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Fixes #2496. Hopefully, the combination of `empty_if_typetracer` and `length_one_if_typetracer` implementations is not confusing.\r\n\r\nAny thoughts on the name, like \"`singleton_if_typetracer`\"? I'm just wanting to ensure that the symmetry between the two functions is apparent, although \"singleton\" doesn't sound like a good way to describe an array with length 1.",
  "closed_at":"2023-06-09T02:50:24Z",
  "comments":16,
  "created_at":"2023-06-05T23:44:31Z",
  "draft":false,
  "id":1742817683,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SQAsQ",
  "number":2499,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-09T02:50:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `ak.typetracer.length_one_if_typetracer`",
  "updated_at":"2023-06-09T02:50:25Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/setup-cfg-fmt: v2.2.0 \u2192 v2.3.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.2.0...v2.3.0)\n- [github.com/shellcheck-py/shellcheck-py: v0.9.0.2 \u2192 v0.9.0.5](https://github.com/shellcheck-py/shellcheck-py/compare/v0.9.0.2...v0.9.0.5)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-06-08T15:03:42Z",
  "comments":1,
  "created_at":"2023-06-06T00:58:36Z",
  "draft":false,
  "id":1742876830,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SQNf0",
  "number":2500,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-08T15:03:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-06-08T15:03:45Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nWe provide a `mask` argument that indicates to custom reducers whether a mask should be returned, for performance. For positional reducers, the proper thing would be to set `mask=False` always; we have to do more work for masked results in order to rebuild the index values correctly, and whilst we can use e.g. `fill_none` on the result, the `mask` argument becomes meaningless in such a scenario. Instead, we can set `mask` to `False` for positional reducers, meaning that the user should always return non-option types.",
  "closed_at":"2023-06-07T00:55:17Z",
  "comments":0,
  "created_at":"2023-06-06T12:43:59Z",
  "id":1743795592,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5n8DWI",
  "number":2501,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Positional record-reducers cannot return masked results",
  "updated_at":"2023-06-07T00:55:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The rationale in #2458 for the `mask` argument is to avoid the unnecessary copying involved in constructing identity elements for reductions that are ultimately masked. There is no similar motivation for positional reducers. Unlike value reducers, the results of positional reductions are passed into a set of kernels to adjust their shifts / starts. Even if the final result is masked, these kernels must operate upon a contiguous buffer of index values. As such, it would be preferable if the library author _did not_ return masked arrays in such cases.\r\n\r\nThis PR closes #2501 by asking user reducer implementations to return non-masked arrays in such cases, and raises an error if they do not honour the `mask` argument.",
  "closed_at":"2023-06-07T00:55:16Z",
  "comments":0,
  "created_at":"2023-06-06T12:57:22Z",
  "draft":false,
  "id":1743818738,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5STatr",
  "number":2502,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-07T00:55:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: request non-option results for overloaded positional record reducers",
  "updated_at":"2023-06-07T00:55:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Whilst refactoring I noticed that we accept a `dtype` argument in `EmptyForm`. I propose we deprecate this form, in favour of `primitive`. This is not a big change, but I think it would be sensible.",
  "closed_at":"2023-06-09T12:12:56Z",
  "comments":3,
  "created_at":"2023-06-06T19:54:57Z",
  "draft":false,
  "id":1744497983,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SVuFk",
  "number":2503,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-09T12:12:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate `to_NumpyForm`'s ``dtype` argument",
  "updated_at":"2023-06-09T12:13:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Now that the C++ split has settled, I did another pass for any unused code and found the following. It's unfortunate that this comes after a C++ release, but we don't need to merge it soon.\r\n\r\nThe motivation for removing this code is that most of it is untested. ",
  "closed_at":"2023-06-09T13:58:59Z",
  "comments":3,
  "created_at":"2023-06-06T23:44:08Z",
  "draft":false,
  "id":1744776298,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SWrii",
  "number":2504,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-09T13:58:59Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"refactor: dead c++ elimination",
  "updated_at":"2023-06-09T13:59:00Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"For a while I've been intending upon refactoring the error handling logic for kernels, so that it's not associated with `Content`.\r\n\r\nThis PR does two things:\r\n- Moves `_selfless_handle_error` from `Content` to `Backend.maybe_kernel_error`\r\n- Simplifies `_handle_error` and renames to `Content._maybe_index_error` (name TBD)\r\n\r\n",
  "closed_at":"2023-06-07T19:45:46Z",
  "comments":1,
  "created_at":"2023-06-07T01:25:15Z",
  "draft":false,
  "id":1744865427,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SW-iy",
  "number":2505,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-07T19:45:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: improve kernel error handling logic (1 of 3)",
  "updated_at":"2023-06-07T19:45:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> **Warning**\r\n> Depends upon #2505 \r\n\r\nThis PR rewrites the JAX reducer dispatch to happen _before_ reduction takes place. This `prepare_` design is also applied to ufuncs, and permits us to use a reference implementation e.g. `ak._reducers.Min` as both an implementation _and_ token that can be replaced by different backends.\r\n\r\nThere are no bugfixes here, just nicer-to-maintain.",
  "closed_at":"2023-06-07T20:11:18Z",
  "comments":2,
  "created_at":"2023-06-07T01:46:04Z",
  "draft":false,
  "id":1744884255,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SXCm8",
  "number":2506,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-07T20:11:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move JAX reducer dispatch to `ak._do.reduce` (2 of 3)",
  "updated_at":"2023-06-07T20:11:20Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR moves the responsibility for \"fixing\" positional reducers into `_reducers`, such that reducers are self-contained. The same is not done for `RecordArray`, because this is effectively a separate reduction implementation that happens to use the same kernels.",
  "closed_at":"2023-06-09T23:59:15Z",
  "comments":1,
  "created_at":"2023-06-07T11:30:47Z",
  "draft":false,
  "id":1745681926,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SZwGE",
  "number":2507,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-09T23:59:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: move responsibility for positional reducers to `Reducer.apply`",
  "updated_at":"2023-06-09T23:59:16Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nIn our reducer code, we go to great lengths to ensure that we retain a boolean result. NumPy however returns `int64`:\r\n```python\r\n>>> import numpy as np\r\n>>> np.prod([True, False, True], keepdims=True)\r\narray([0])\r\n```\r\n\r\nI assume that we want to align with NumPy, so we should cast the result or re-write the kernel",
  "closed_at":"2023-06-07T12:13:11Z",
  "comments":0,
  "created_at":"2023-06-07T12:11:19Z",
  "id":1745757627,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5oDiW7",
  "number":2508,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.prod` produces different dtype than NumPy for boolean arrays",
  "updated_at":"2023-06-07T12:13:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I've intended upon refactoring the reducers in `ak._reducers` for a while. This pass should preserve clarity and readability.",
  "closed_at":"2023-06-07T20:40:53Z",
  "comments":1,
  "created_at":"2023-06-07T13:10:31Z",
  "draft":false,
  "id":1745868631,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SaZGD",
  "number":2509,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-07T20:40:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: simplify reducer boilerplate (3 of 3)",
  "updated_at":"2023-06-07T20:40:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nWhen playing around with record reduction, I noticed that the wrong offsets were being generated. This kernel is assuming ordered parents, which causes this bug. Such an assumption is _not_ something [I've previously held](https://github.com/scikit-hep/awkward/pull/2492#issue-1742047477), and indeed is violated by several kernels (such as the nonlocal list kernels that transpose the array).\r\n\r\nConsider the following array of parents\r\n```python\r\nparents = np.array([0, 0, 3, 3, 1, 1, 4, 4, 2, 2, 5, 5])\r\n```\r\nWhen a `NumpyArray` reduces that, it effectively uses `parents` to group reductions _and_ carry the result into the correct 0-5 ordering. Our `awkward_ListOffsetArray_reduce_local_outoffsets_64.cpp` kernel has a `while (last < parents[i])` loop that assumes monotonically increasing parents.",
  "closed_at":"2023-06-08T11:44:05Z",
  "comments":1,
  "created_at":"2023-06-07T17:27:02Z",
  "id":1746367740,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5oF3T8",
  "number":2510,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`awkward_ListOffsetArray_reduce_local_outoffsets_64` kernel assumes ordered parents",
  "updated_at":"2023-06-08T11:44:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [docker/setup-qemu-action](https://github.com/docker/setup-qemu-action) from 2.1.0 to 2.2.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/docker/setup-qemu-action/releases\">docker/setup-qemu-action's releases</a>.</em></p>\n<blockquote>\n<h2>v2.2.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Trim off spaces in <code>platforms</code> input by <a href=\"https://github.com/Chocobo1\"><code>@\u200bChocobo1</code></a> in <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/64\">docker/setup-qemu-action#64</a></li>\n<li>Switch to actions-toolkit implementation by <a href=\"https://github.com/crazy-max\"><code>@\u200bcrazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/70\">docker/setup-qemu-action#70</a> <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/80\">docker/setup-qemu-action#80</a> <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/83\">docker/setup-qemu-action#83</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Chocobo1\"><code>@\u200bChocobo1</code></a> made their first contribution in <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/64\">docker/setup-qemu-action#64</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-qemu-action/compare/v2.1.0...v2.2.0\">https://github.com/docker/setup-qemu-action/compare/v2.1.0...v2.2.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/2b82ce82d56a2a04d2637cd93a637ae1b359c0a7\"><code>2b82ce8</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/83\">#83</a> from docker/dependabot/npm_and_yarn/docker/actions-too...</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/3eae0a2671699cf1d8aae726138b243fb827c2d4\"><code>3eae0a2</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/81\">#81</a> from docker/dependabot/github_actions/docker/bake-acti...</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/1fd94789d617cf0d71094fce920fbd2698964ab1\"><code>1fd9478</code></a> Bump <code>@\u200bdocker/actions-toolkit</code> from 0.1.0 to 0.3.0</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/f9e93f93e58300c48427ccaf70d4c653bbbebf5c\"><code>f9e93f9</code></a> Bump docker/bake-action from 2 to 3</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/9d429d4c1cda1009cb0bee249cf42bef72a9228d\"><code>9d429d4</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/80\">#80</a> from docker/dependabot/npm_and_yarn/docker/actions-too...</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/b5a257c85610a80d14ac6eba728a2279539beb31\"><code>b5a257c</code></a> update generated content</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/c915c25ed59e5a9d1e1355771eeeb336c7649f47\"><code>c915c25</code></a> use new implementation from toolkit</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/25bbf894699b340831c6f6006e7322fe0e11e8cb\"><code>25bbf89</code></a> update dev dependencies</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/faaa95d6164b3e0a3fd5e0c2162453e3f4d91237\"><code>faaa95d</code></a> Bump <code>@\u200bdocker/actions-toolkit</code> from 0.1.0-beta.14 to 0.1.0</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/de3982d68a2f2681e93db37727a85fb7f32ea313\"><code>de3982d</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/70\">#70</a> from crazy-max/switch-toolkit</li>\n<li>Additional commits viewable in <a href=\"https://github.com/docker/setup-qemu-action/compare/v2.1.0...v2.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=docker/setup-qemu-action&package-manager=github_actions&previous-version=2.1.0&new-version=2.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-06-07T19:00:11Z",
  "comments":1,
  "created_at":"2023-06-07T17:58:57Z",
  "draft":false,
  "id":1746413180,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ScPzs",
  "number":2511,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-07T19:00:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump docker/setup-qemu-action from 2.1.0 to 2.2.0",
  "updated_at":"2023-06-07T19:00:12Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nUnlike the NumpyArray reducers, record reducers do not have access to `parents` to ensure the correct ordering of the result. We should carry the result to ensure correct ordering.",
  "closed_at":"2023-06-10T16:45:02Z",
  "comments":0,
  "created_at":"2023-06-07T19:07:37Z",
  "id":1746509406,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5oGZ5e",
  "number":2512,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Record reducers need re-ordering",
  "updated_at":"2023-06-10T16:45:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nI have a real error and should be getting a properly formatted error message, but there's an error in the error-handling.\r\n\r\nTo reproduce it:\r\n\r\n```python\r\nimport awkward as ak\r\nf = ak.Array([[1, 2, 3], [], [4, 5]]).layout.form\r\nak.from_buffers(f, 0, {\"\": b\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"}, buffer_key=\"{form_key}\")\r\n```\r\n\r\nThe error message is\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_from_buffers.py\", line 89, in from_buffers\r\n    return _impl(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_from_buffers.py\", line 146, in _impl\r\n    out = reconstitute(form, length, container, getkey, backend, byteorder, simplify)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_from_buffers.py\", line 349, in reconstitute\r\n    raw_array = container[getkey(form, \"offsets\")]\r\nKeyError: 'None'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/operations/ak_from_buffers.py\", line 89, in from_buffers\r\n    return _impl(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 56, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_errors.py\", line 71, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nKeyError: \"'None'\\n\\nThis error occurred while calling\\n\\n    ak.from_buffers(\\n        form = ListOffsetForm-instance\\n        length = 0\\n        container = {'': b'\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00'}\\n        buffer_key = '{form_key}'\\n        backend = 'cpu'\\n        byteorder = '<'\\n        highlevel = True\\n        behavior = None\\n    )\"\r\n```\r\n\r\nThe `KeyError: 'None'` is the actual error, and it was supposed to be decorated like this:\r\n\r\n```\r\nKeyError: 'None'\r\n\r\nThis error occurred while calling\r\n\r\n    ak.from_buffers(\r\n        form = ListOffsetForm-instance\r\n        length = 0\r\n        container = {'': b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'}\r\n        buffer_key = '{form_key}'\r\n        backend = 'cpu'\r\n        byteorder = '<'\r\n        highlevel = True\r\n        behavior = None\r\n```\r\n\r\nThe line number didn't shift between my copy of Awkward and `main`:\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/be876a0ae3d78de29a33c635cdcc75315c4b1740/src/awkward/_errors.py#L71\r\n\r\nI'm in the second branch because I'm not using Python 3.11 (with its exception decorators).\r\n\r\n```python\r\n>>> sys.version_info\r\nsys.version_info(major=3, minor=9, micro=15, releaselevel='final', serial=0)\r\n```",
  "closed_at":"2023-06-14T18:44:03Z",
  "comments":4,
  "created_at":"2023-06-07T22:35:51Z",
  "id":1746778291,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5oHbiz",
  "number":2513,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Error formatting is broken (an error in the error handling)",
  "updated_at":"2023-06-14T18:44:03Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The logic in `RecordArray._reduce_next` made an implicit assumption that `parents` is contiguous and monotonic increasing. This is not always the case for `axis != -1` (see https://github.com/scikit-hep/awkward/issues/2510#issuecomment-1582431638).\r\n\r\nThis PR fixes #2512 with the introduction of a new kernel, similar to `awkward_RecordArray_reduce_nonlocal_outoffsets_64`, to compute the offsets (given by potentially non-monotonic, locally contiguous parents) that correctly partitions the current array into sublists. This kernel must _also_ compute the `carry` operation that orders the sublists given by `parents`.\r\n\r\nAs such, it requires several loops:\r\n\r\n1. Initialise the carry array with a unique value to indicate the empty sublists that aren't indexed by `parents`\r\n2. Compute the offsets into `parents` that groups `parents` into sublists, and compute the associated `carry` that maps this reduction result to the position given by `parents` \r\n3. Append the necessary number of empty lists to the end of `offsets`, and insert the appropriate `carry` index.\r\n\r\nWe could \"save performance\" by only appending a single empty sublist in the case of \"missing parents\", but I don't see a strong incentive to do this (it's probably not worth any noticeable performance).\r\n\r\nA verbose example of this kernel is as follows:\r\n```python\r\nimport numpy as np\r\n\r\n\r\nparents = np.array([0, 0, 0, 4, 4, 1, 1, 1, 3, 3, 5], dtype=np.int64)\r\n\r\n\r\noutcarry = np.empty(6, dtype=np.int64)\r\noutoffsets = np.empty(outcarry.size + 1, dtype=np.int64)\r\n\r\n\r\ndef awkward_RecordArray_reduce_nonlocal_outoffsets_64(\r\n    outoffsets, outcarry, parents, lenparents, outlength\r\n):\r\n    # Zero initialise offsets\r\n    outoffsets[0] = 0\r\n\r\n    # Initialise carry to unique value, indicating \"missing\"\r\n    for i in range(outlength):\r\n        outcarry[i] = -1\r\n\r\n    #   index     0  1  2  3  4  5  6\r\n    # outoffsets  0  -  -  -  -  -  -\r\n    #  outcarry  -1 -1 -1 -1 -1 -1\r\n\r\n    # Fill offsets with lengths of sublists (in order of appearance, *NOT* parents)\r\n    i = 0\r\n    k_sublist = 0\r\n    for j in range(1, lenparents):\r\n        if parents[i] != parents[j]:\r\n            outoffsets[k_sublist + 1] = j\r\n            outcarry[parents[i]] = k_sublist\r\n            i = j\r\n            k_sublist += 1\r\n\r\n    #   index     0  1  2  3  4  5  6\r\n    # outoffsets  0  3  5  8  10 -  -\r\n    #  outcarry   0  2 -1  3  1 -1\r\n\r\n    if lenparents > 0:\r\n        outoffsets[k_sublist + 1] = j\r\n        outcarry[parents[i]] = k_sublist\r\n        k_sublist += 1\r\n\r\n    #   index     0  1  2  3  4  5  6\r\n    # outoffsets  0  3  5  8  10 10 -\r\n    #  outcarry   0  2 -1  3  1  4\r\n\r\n    # Append empty lists for missing parents\r\n    for i in range(k_sublist, outlength):\r\n        outoffsets[i + 1] = lenparents\r\n\r\n    #   index     0  1  2  3  4  5  6\r\n    # outoffsets  0  3  5  8  10 10 11\r\n    #  outcarry   0  2 -1  3  1  4\r\n\r\n    # Replace unique value with index of appended empty list\r\n    for i in range(outlength):\r\n        if outcarry[i] == -1:\r\n            outcarry[i] = k_sublist\r\n            k_sublist += 1\r\n\r\n    #   index     0  1  2  3  4  5  6\r\n    # outoffsets  0  3  5  8  10 10 11\r\n    #  outcarry   0  2  5  3  1  4\r\n\r\n\r\nawkward_RecordArray_reduce_nonlocal_outoffsets_64(\r\n    outoffsets, outcarry, parents, parents.size, outcarry.size\r\n)\r\n```\r\n\r\nWith the current `_reduce_next` implementation, we can't tell whether the reduction occurs _at_ this axis. As such, `awkward_RecordArray_reduce_nonlocal_outoffsets_64` needs to anticipate non-monotonic `parents`. If we add this information, it would be possible to add a second kernel that makes `axis=-1` reductions slightly faster (no `carry`, less array jumping). I think we hold off, and wait for a performance complaint :)",
  "closed_at":"2023-06-10T16:45:01Z",
  "comments":1,
  "created_at":"2023-06-08T13:37:03Z",
  "draft":false,
  "id":1747914043,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ShWyO",
  "number":2514,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-10T16:45:01Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support `axis != -1` for record reduction",
  "updated_at":"2023-06-10T16:45:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nThis would eventually permit us to build a single per-arch wheel for Python>=3.12 :crossed_fingers: ",
  "closed_at":null,
  "comments":2,
  "created_at":"2023-06-08T15:12:56Z",
  "id":1748112728,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5oMhVY",
  "number":2515,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Consider moving to nanobind for Python 3.12",
  "updated_at":"2024-01-20T11:45:03Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\n\n* [Complex data types in Datashape](https://datashape.readthedocs.io/en/latest/types.html#default-complex) look like `complex[float64]` instead of `complex128`. We should adhere to Datashape here.\r\n* Datashape has units, though they [only seem to be used for datetimes](https://datashape.readthedocs.io/en/latest/types.html#date-time-and-datetime). The format is `units['name_of_unit', type]`. We can use that for our future `__units__`, but let's not use it for dates because Datashape either hard-assumes 100 ns for the time-unit or assumes that they're recognizable as time units in the first argument of `units` (using [ICU datetime unit conventions](https://unicode-org.github.io/icu/userguide/)). NumPy allows arbitrary granularity, like `15s`, which is not in general recognizable. Also, we don't want to cause confusion between the `__units__` units (which Pint will manage) and the datetime units (which NumPy manages).",
  "closed_at":"2024-01-19T22:44:38Z",
  "comments":3,
  "created_at":"2023-06-08T15:29:11Z",
  "id":1748155636,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5oMrz0",
  "number":2516,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Conform better to Datashape: complex numbers and units",
  "updated_at":"2024-01-19T22:44:38Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In future we anticipate the introduction of a units system that uses this parameter. Moreover, datetimes should use the `primitive` to represent these types, as it's a fundamental type.",
  "closed_at":"2023-06-10T16:52:33Z",
  "comments":1,
  "created_at":"2023-06-09T11:04:43Z",
  "draft":false,
  "id":1749678266,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SnKqq",
  "number":2518,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-10T16:52:33Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate the time `__unit__` parameter",
  "updated_at":"2023-06-10T16:52:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This fixes #2513",
  "closed_at":"2023-06-14T18:44:02Z",
  "comments":2,
  "created_at":"2023-06-09T14:38:05Z",
  "draft":false,
  "id":1750024160,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SoWw9",
  "number":2519,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-14T18:44:02Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: str of `KeyError` for <3.11",
  "updated_at":"2023-06-14T18:44:03Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"It turns out that removing these two lines fixes the overtouching problem in the example complex analysis attached below (where you can run `dask.compute(output)` and have it succeed using prior versions of dask_awkward/awkward with far fewer read columns).\r\n\r\nWith the this PR applied the `necessary_columns` returns to previous the previous list.\r\n\r\nThe rest of https://github.com/scikit-hep/awkward/commit/19f62aaac1f77c8d8096730f56dead782260d400 seems to be perfectly fine.\r\n\r\n@douglasdavis @martindurant @jpivarski @agoose77 ",
  "closed_at":"2023-06-10T16:32:46Z",
  "comments":9,
  "created_at":"2023-06-09T21:57:37Z",
  "draft":false,
  "id":1750540956,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SqISd",
  "number":2520,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix(do not merge / example): do not touch data in complex slices",
  "updated_at":"2023-06-10T16:32:46Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.13.0 to 2.13.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.13.1</h2>\n<ul>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b2. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1516\">#1516</a>)</li>\n<li>\ud83d\udee0 Adds a moving <code>v&lt;major&gt;.&lt;minor&gt;</code> tag for use in GitHub Actions workflow files. If you use this, you'll get the latest patch release within a minor version. Additionally, Dependabot won't send you PRs for patch releases. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1517\">#1517</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.13.1</h3>\n<p><em>10 June 2023</em></p>\n<ul>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b2. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1516\">#1516</a>)</li>\n<li>\ud83d\udee0 Adds a moving <code>v&lt;major&gt;.&lt;minor&gt;</code> tag for use in GitHub Actions workflow files. If you use this, you'll get the latest patch release within a minor version. Additionally, Dependabot won't send you PRs for patch releases. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1517\">#1517</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/0ecddd92b62987d7a2ae8911f4bb8ec9e2e4496a\"><code>0ecddd9</code></a> Bump version: v2.13.1</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f35d309173dfc5359b18ca3d2c9c422e4cf83abb\"><code>f35d309</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1517\">#1517</a> from pypa/major-dot-minor-tag</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/3160e8dbca733f3125ba9fcf5cf6b0007cdaca73\"><code>3160e8d</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1516\">#1516</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/012ae48172b00cfbfad05e1a3fa6d0af04bc0d7b\"><code>012ae48</code></a> Add workflow that updates a vX.Y tag on release</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/1c3b8e112e9ceccee1712627b5377213672ae155\"><code>1c3b8e1</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/ca7b0f75c61a9efc6dd42d7c0600f347df8ca5e0\"><code>ca7b0f7</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1514\">#1514</a> from pypa/fix-travis-windows</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8d126bc281ea9d9e62e37ec7f604fcd2157044a0\"><code>8d126bc</code></a> Try removing the offending line</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/2ca5ff2dcdd0bfc0d558906b2ae20e74b9c5cb51\"><code>2ca5ff2</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1508\">#1508</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7d45cf3dace7240123635298d7429bb99fad6b92\"><code>7d45cf3</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1511\">#1511</a> from ianthomas23/doc_fix_config_settings</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f6edc817df1b26def09c0278a72f2d097df6da23\"><code>f6edc81</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1512\">#1512</a> from pypa/pre-commit-ci-update-config</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.13.0...v2.13.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.13.0&new-version=2.13.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-06-16T12:26:24Z",
  "comments":1,
  "created_at":"2023-06-12T18:00:25Z",
  "draft":false,
  "id":1753269503,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5SzPqZ",
  "number":2521,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-16T12:26:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.13.0 to 2.13.1",
  "updated_at":"2023-06-16T12:26:25Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.270 \u2192 v0.0.272](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.270...v0.0.272)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-06-16T12:09:59Z",
  "comments":1,
  "created_at":"2023-06-13T01:37:42Z",
  "draft":false,
  "id":1753870684,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5S1UTh",
  "number":2522,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-16T12:09:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-06-16T12:10:00Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"If an Awkward Array is passed as `destination` to `fsspec.core.url_to_fs(destination)`, the memory use explodes before Python crashes. The array doesn't even need to be very large to send fsspec into dozens of GB; I think it might be converting the array into a string and interpreting `[` `]` `{` `}` as wildcards, a combinatorially large file list.\r\n\r\nAnyway, it's very common for me to forget the argument order in I/O functions (`ak.to_parquet`, `json.dump`, etc.) and I just try one until it works. It needs to be the case that trying the wrong one produces an immediate error message.\r\n\r\n",
  "closed_at":"2023-06-15T16:38:15Z",
  "comments":4,
  "created_at":"2023-06-13T17:13:25Z",
  "draft":false,
  "id":1755338360,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5S6Vq7",
  "number":2523,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-15T16:38:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: protect ak.to_parquet against memory explosion when args are swapped.",
  "updated_at":"2023-06-15T16:38:16Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The `broadcast_and_apply` logic currently `project()`s `IndexedArray`s during recursion. This is more expensive than necessary; caller-provided callback may exit early, avoiding the need for a projection. Instead, we can just push the indexed node into the contents of the `RecordArray`.\r\n\r\nFor `dask-awkward` the existing behaviour has more serious consequence; a much greater number of contents are touched during typetracer time. This PR changes the best-cast behavior of operations that encounter an `IndexedArray` of `RecordArray` during broadcasting (e.g. `with_field` after an advanced index) from touching _everything_ in the record to touching only the offsets _above_ the record. In practice, the presence of option-types within the record array will lead to additional touching of those buffers.",
  "closed_at":"2023-06-14T18:55:47Z",
  "comments":1,
  "created_at":"2023-06-14T16:22:27Z",
  "draft":false,
  "id":1757259672,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TA2oj",
  "number":2524,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-14T18:55:47Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't project records during broadcasting; push index down",
  "updated_at":"2023-06-14T18:55:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR refactors our operations to use a decorator for providing an error context. This makes it easier to add new functions, but also improves readability.\r\n\r\nCloses #1839",
  "closed_at":"2023-06-16T11:27:21Z",
  "comments":2,
  "created_at":"2023-06-15T15:50:26Z",
  "draft":false,
  "id":1759125896,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5THL4A",
  "number":2525,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-16T11:27:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: add internal `with_operation_context`",
  "updated_at":"2023-06-16T11:27:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR:\r\n- Deprecates the `merge` argument to `UnionArray.simplified` \u2014 since the previous introduction of canonicalisation checks, this argument can no longer be meaningfully `False` in contexts where layouts are mergeable.\r\n- Add a new rule for the simplification of `IndexedArray`s inside unions.\r\n\r\nCloses #2192 ",
  "closed_at":"2023-06-18T17:34:04Z",
  "comments":1,
  "created_at":"2023-06-16T10:59:53Z",
  "draft":false,
  "id":1760391807,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TLZXN",
  "number":2527,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-18T17:34:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: canonicalise `union` of `indexed`",
  "updated_at":"2023-06-18T17:34:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As discussed in #2432, we don't appear to use these behavior classes anywhere. This PR deprecates them, and removes them from the global behavior dictionary.\r\n\r\nThis PR _doesn't_ remove the behavior classes for `byte` and `char`, because these _are_ used, including for `==` overloads.\r\n\r\n- [x] Deprecate `string` and `bytestring` behavior classes",
  "closed_at":"2023-06-24T07:30:58Z",
  "comments":1,
  "created_at":"2023-06-16T11:57:15Z",
  "draft":false,
  "id":1760486019,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TLulv",
  "number":2528,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-24T07:30:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate string behavior classes",
  "updated_at":"2023-06-24T07:30:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"## Goal \r\nIt would be helpful for users of `dask-awkward` if we could provide a mechanism to use the `ak.` namespace on these third-party array objects, e.g.\r\n```python\r\nimport awkward as ak\r\n\r\nimport dask_awkward as dak\r\n\r\narray = ak.Array([[False, False, True, True], [], [True]])\r\ndarray = dak.from_awkward(array, npartitions=3)\r\n\r\ndtotal = ak.sum(darray, axis=-1, keepdims=True)\r\ndresult = ak.any(dtotal > 1, axis=-1, keepdims=True)\r\n\r\nprint(dresult.compute())\r\n```\r\n\r\nThis PR implements a mechanism similar to NEP-18 for delegating to array objects for the concrete operation implementation. This behaves as follows:\r\n- each high-level function implements a dispatcher that yields possible array-like objects that may implement this protocol\r\n- if _any_ array-like implements the `__awkward_function__` protocol, we return the result of invoking that function\r\n- if multiple arrays implement an `__awkward_function__`, the first as yielded by the `dispatcher` wins. In future we could require that `__awkward_function__` be defined _on the class_ and require that only a single _type_ implement this method.\r\n\r\nFor `dask-awkward` this function might look as follows:\r\n```python\r\n@classmethod\r\ndef __awkward_function__(cls, func, dispatched, args, kwargs):\r\n    assert all(isinstance(x, cls) for x in dispatched)\r\n\r\n    import dask_awkward\r\n\tname = func.__qualname__\r\n    try:\r\n        impl = getattr(dask_awkward, name)\r\n    except AttributeError:\r\n        raise NotImplementedError from None\r\n    return impl(*args, **kwargs)\r\n```\r\n\r\n### Notes\r\n- Unlike NumPy's mechanism, we don't try and support the case that there are multiple third-party arrays. I think this use case fairly unlikely at this stage, so at least for now it is not necessary to cater for it.\r\n- The dispatcher must have an identical signature to the implementation. This avoids the need to use something like `inspect.signature` to prepare the arguments upon each invocation, i.e. a design tradeoff. This is also checked by the decorator upon first invocation. We could also perform such a test at import time, or only in our CI, but I think better to ensure this always runs for an invocation.",
  "closed_at":"2023-06-22T14:24:00Z",
  "comments":7,
  "created_at":"2023-06-19T13:19:39Z",
  "draft":true,
  "id":1763535738,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TV1XW",
  "number":2530,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add array dispatcher (non-inline)",
  "updated_at":"2023-09-17T16:18:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR is an alternative to #2530. It moves the dispatch mechanism _into_ the implementation, which perhaps improves readability. \r\n\r\nHere's an example of `broadcast_arrays` with this dispatch mechanism variant:\r\n\r\n```python\r\n\r\n@high_level_function\r\ndef broadcast_arrays(\r\n    *arrays,\r\n    depth_limit=None,\r\n    broadcast_parameters_rule=\"one_to_one\",\r\n    left_broadcast=True,\r\n    right_broadcast=True,\r\n    highlevel=True,\r\n    behavior=None,\r\n):\r\n    # Dispatch\r\n    yield arrays\r\n\r\n    # Implementation\r\n    return _impl(\r\n        arrays,\r\n        depth_limit,\r\n        broadcast_parameters_rule,\r\n        left_broadcast,\r\n        right_broadcast,\r\n        highlevel,\r\n        behavior,\r\n    )\r\n```\r\n\r\nThird-party arrays can define the `__awkward_function__` method to intercept `ak.XXX` functions, e.g.\r\n```python\r\n@classmethod\r\ndef __awkward_function__(cls, func, array_likes, args, kwargs):\r\n    import dask_awkward\r\n\tname = func.__qualname__   \r\n\r\n    try:\r\n        impl = getattr(dask_awkward, name)\r\n    except AttributeError:\r\n        return NotImplemented\r\n\r\n    return impl(*args, **kwargs)\r\n```\r\n\r\n### Limitations\r\n1. High-level function results cannot be generators if they are decorated with `high_level_function`. In this case, the bare error-handler context manager should be used. \r\n",
  "closed_at":"2023-06-22T21:04:37Z",
  "comments":12,
  "created_at":"2023-06-19T19:30:28Z",
  "draft":false,
  "id":1764110508,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TXxr9",
  "number":2531,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-22T21:04:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add array dispatcher (inline)",
  "updated_at":"2023-06-22T21:04:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/charliermarsh/ruff-pre-commit: v0.0.272 \u2192 v0.0.275](https://github.com/charliermarsh/ruff-pre-commit/compare/v0.0.272...v0.0.275)\n- [github.com/codespell-project/codespell: v2.2.4 \u2192 v2.2.5](https://github.com/codespell-project/codespell/compare/v2.2.4...v2.2.5)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-06-30T14:57:55Z",
  "comments":4,
  "created_at":"2023-06-20T02:09:22Z",
  "draft":false,
  "id":1764499883,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TZBqp",
  "number":2532,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-30T14:57:55Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-06-30T14:57:56Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nSetting `__class__` to a class built by `ak.mixin_class` is failing for `numpy>=1.25.0`.\r\n\r\n```python\r\nimport awkward as ak\r\n\r\nbehavior = {}\r\n\r\n\r\nclass Point:\r\n    ...\r\n\r\n\r\nclass MyPoint(Point, ak.Array):\r\n    ...\r\n\r\n\r\nbehavior[\"*\", \"Point\"] = MyPoint  # type(\"MyPoint\", (Point, ak.Array), {})\r\n\r\nak.operations.zip(\r\n    {\r\n        \"x\": ak.Array([1, 1]),\r\n        \"y\": ak.Array([1, 1]),\r\n    },\r\n    with_name=\"Point\",\r\n    behavior=behavior,\r\n)\r\n\r\n```\r\n",
  "closed_at":"2023-06-21T09:03:41Z",
  "comments":1,
  "created_at":"2023-06-20T13:13:28Z",
  "id":1765387319,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5pOaw3",
  "number":2533,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`__class__` assignment fails with `mixin_class` decorator",
  "updated_at":"2023-06-21T09:03:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2533 by vendoring our own version of `NDArrayOperatorsMixin`",
  "closed_at":"2023-06-21T09:03:40Z",
  "comments":6,
  "created_at":"2023-06-20T14:42:47Z",
  "draft":false,
  "id":1765562281,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Tcnwp",
  "number":2534,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-21T09:03:40Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: patch NDArrayOperatorsMixin",
  "updated_at":"2023-07-17T17:25:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.2.3\r\n\r\n### Description and code to reproduce\r\n\r\nEncountered when first implementing https://github.com/scikit-hep/uproot5/pull/905. \r\nThere appear to be some implementations of `_select_columns` for the derived form classes that are very slow.\r\n\r\nReproducer, which may not take an hour but is still excessively slow:\r\n```python3\r\nimport uproot\r\n\r\nevents = uproot.dask({\"https://github.com/CoffeaTeam/coffea/raw/master/tests/samples/nano_dy.root\": \"Events\"})\r\nform = events._meta.layout.form\r\nform.select_columns(form.columns())\r\n```\r\nThis is what https://github.com/scikit-hep/uproot5/pull/905 was doing with column-optimization turned off until I worked around it, but you can imagine if the number of columns is large it's still a problem!\r\n",
  "closed_at":"2023-06-22T13:55:18Z",
  "comments":2,
  "created_at":"2023-06-20T19:38:35Z",
  "id":1766039100,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5pQ548",
  "number":2535,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"form.select_columns takes an hour for ~1500 columns",
  "updated_at":"2023-06-22T13:55:18Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2535\r\n\r\nIn `RecordForm._select_columns`, we perform an `N * M` iteration to test for matches. Previously, we were invoking `fnmatch.fnmatchcase`, which uses a 256-wide cache to compile & translate the regex pattern (IIRC `re.compile` also caches, with 512-wide, so that's likely our true effective cache size for the `compile` part). This means that in an `N * M` loop where `N` and `M` are greater than 256, the cache fails to improve performance. This PR identifies the pathological case of `N * M` containing mostly fixed strings, and replaces the calls to `fnmatchcase` with `string in set_of_strings`.\r\n\r\nWe could just implement our own version of `fnmatchcase` (3 lines) with a bigger cache, but that just defers the problem.\r\n\r\nIn practice, we know that if the specifiers given are _unique_ fixed strings, we can reduce this loop to `N` iterations. For now, I've not imposed this optimisation, and instead just made the `* M` loop much faster by leveraging the `item in set` time complexity.",
  "closed_at":"2023-06-22T13:55:17Z",
  "comments":8,
  "created_at":"2023-06-20T22:54:22Z",
  "draft":false,
  "id":1766312380,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Te-nR",
  "number":2536,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-22T13:55:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: improve performance of `Form.select_columns`",
  "updated_at":"2023-06-22T21:06:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\r\n\r\nTL;DR \u2014 if an indexed type has type parameters, then we can't just push mergeable checks to the content.\r\n\r\nThere is some ambiguity here, but I think this is incorrect. We only allow non-union merging when arrays have the same nominal type, so even if `IndexedArray.content` shares the same value of `__array__` as `other`, the externally visible types don't agree.\r\n\r\nCurrently, this isn't too visible; we end up introducing unions that simplify away after parameters are merged. But, this involves multiple unnecessary allocations and kernel calls.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-06-22T18:06:01Z",
  "id":1770165580,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5pgpVM",
  "number":2537,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`Indexed._mergeable_next` does not consider `self.parameters` when merging against a non-indexed type",
  "updated_at":"2024-01-17T15:07:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":null,
  "closed_at":"2023-06-23T09:41:41Z",
  "comments":2,
  "created_at":"2023-06-22T19:57:39Z",
  "draft":false,
  "id":1770310247,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5TsJzh",
  "number":2538,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-23T09:41:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pyodide parts a bit",
  "updated_at":"2023-06-23T09:41:42Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR closes #2432 by making it possible to define custom types for strings (and categoricals). Now, `__array__` represents _both_ nominal type and implementation type (string, categorical), and a new `__subclass__` parameter represents a higher-precedence nominal type.",
  "closed_at":"2023-06-29T10:54:23Z",
  "comments":20,
  "created_at":"2023-06-23T11:59:10Z",
  "draft":true,
  "id":1771336981,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Tverf",
  "number":2540,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `__subclass__` parameter for high-precedence non-record nominal types",
  "updated_at":"2023-09-17T16:18:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.2.4 (and 2.2.3 and 2.2.2)\r\n\r\n### Description and code to reproduce\r\n\r\nThe following reproducer should only touch `muon.pt` and some indices, no?\r\n\r\n```python3\r\nimport json\r\nimport awkward as ak\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\n\r\npassing = ttarray[\"muon\"][ttarray[\"muon\"].pt > 20]\r\nfailing = ttarray[\"muon\"][ttarray[\"muon\"].pt < 10]\r\n\r\nprint(report._data_touched)\r\n\r\nconcat = ak.concatenate((passing, failing), axis=0)  # same for axis 1\r\n\r\nprint(report._data_touched)\r\n```\r\n\r\nHowever, it outputs:\r\n```\r\n['muon_list_outer!', 'muon_pt!']\r\n['muon_list_outer!', 'muon_pt!', 'muon_eta!', 'muon_phi!', 'muon_crossref_content!', 'muon_crossref_index!', 'muon_thing1!']\r\n```",
  "closed_at":"2023-06-25T16:35:50Z",
  "comments":3,
  "created_at":"2023-06-25T14:29:46Z",
  "id":1773318887,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5psrLn",
  "number":2541,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"not_planned",
  "title":"ak.concatenate touches all data, it should not!",
  "updated_at":"2023-06-25T16:35:51Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Closes #2457 ",
  "closed_at":"2023-06-27T00:58:58Z",
  "comments":1,
  "created_at":"2023-06-26T12:38:02Z",
  "draft":false,
  "id":1774686953,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5T6mGl",
  "number":2543,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-27T00:58:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: drop unused `if`",
  "updated_at":"2023-06-27T00:58:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\n`ak.min(array, axis=-1, keepdims=True)` _should_ preserve the parameters of the original array.",
  "closed_at":null,
  "comments":4,
  "created_at":"2023-06-26T14:46:10Z",
  "id":1774969872,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5py-QQ",
  "number":2544,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Reducers should preserve `parameters`",
  "updated_at":"2023-06-26T20:54:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`pint` already partially supports Awkward Arrays:\r\n```python\r\nimport awkward as ak\r\nimport pint\r\n\r\nreg = pint.UnitRegistry()\r\n\r\nx = reg.Quantity(ak.Array([[1, 2, 3], [5]]), \"m\")\r\n\r\nprint(x + (2 * reg.m))\r\n```\r\n\r\nBut this doesn't really scale to the nested, complex layout structures that Awkward supports.\r\nThis PR adds support for `__units__` parameters in arrays, which allows structures to contain mixed units. Closes #2468.\r\n\r\n```python\r\n>>> import awkward as ak\r\n>>> array = ak.zip(\r\n...     {\r\n...         \"x\": ak.with_parameter([60, 70, 80, 90], \"__units__\", \"mm\"),\r\n...         \"y\": ak.with_parameter([1, 2, 3, 4], \"__units__\", \"cm\"),\r\n...     }\r\n... )\r\n>>> result = array.x + array.y\r\n>>> result.show(type=True)\r\ntype: 4 * float64[parameters={\"__units__\": \"millimeter\"}]\r\n[70,\r\n 90,\r\n 110,\r\n 130]\r\n```\r\n\r\n- [x] Add `ak.to_pint` and `ak.from_pint`\r\n- [x] Support ufuncs\r\n- [ ] Support reducers\r\n- [ ] Support concatenation\r\n",
  "closed_at":"2024-01-03T16:06:39Z",
  "comments":14,
  "created_at":"2023-06-26T14:47:39Z",
  "draft":true,
  "id":1774972471,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5T7lFz",
  "number":2545,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"wip: add units implementation",
  "updated_at":"2024-02-01T19:32:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.6 to 1.8.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.7</h2>\n<h2>:nail_care: Cosmetic output impovements</h2>\n<ul>\n<li><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> fixed OIDC the multiline annotations by escaping LF through urlencoding it in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/156\">pypa/gh-action-pypi-publish#156</a>.</li>\n<li><a href=\"https://github.com/jaap3\"><code>@\u200bjaap3</code></a> noticed and promptly removed extraneous <code>}</code> from a non-OIDC log annotation in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/161\">pypa/gh-action-pypi-publish#161</a>.</li>\n<li><a href=\"https://github.com/hugovk\"><code>@\u200bhugovk</code></a> made pip ignore that it runs under the root user and suppress its warning output in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/159\">pypa/gh-action-pypi-publish#159</a>.</li>\n</ul>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li>Cryptography was bumped from 39.0.1 to 41.0.0 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/160\">pypa/gh-action-pypi-publish#160</a></li>\n<li>Requests was bumped from 2.28.1 to 2.31.0 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/157\">pypa/gh-action-pypi-publish#157</a></li>\n</ul>\n<h2>:muscle: New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/jaap3\"><code>@\u200bjaap3</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/161\">pypa/gh-action-pypi-publish#161</a></li>\n</ul>\n<p><strong>:mirror: Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.6...v1.8.7\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.6...v1.8.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f5622bde02b04381239da3573277701ceca8f6a0\"><code>f5622bd</code></a> Merge PRs <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/159\">#159</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/160\">#160</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/3be882c473b35162143effc2be2455999c59fc06\"><code>3be882c</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/161\">#161</a> from jaap3/jaap3-patch-1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/775be49481ba30cf6003c8fdc32d3b3acf48c6a3\"><code>775be49</code></a> Remove extraneous }</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/5684530096325b74c64f5c67ddf81806eb6507cb\"><code>5684530</code></a> Bump cryptography from 39.0.1 to 41.0.0 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/135d0d53531a9cf16b81e1b7eaa4992247060d83\"><code>135d0d5</code></a> Ignore pip's root user warning</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/110f54a3871763056757c3e203635d4c5711439f\"><code>110f54a</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/157\">#157</a> from pypa/dependabot/pip/requirements/requests-2.31.0</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/c803c91ef00ddbdb881fa5726ed11f611f0a0edf\"><code>c803c91</code></a> Bump requests from 2.28.1 to 2.31.0 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f9ed8ba9ad06d20b1ebb6002ffb93050ed9a1951\"><code>f9ed8ba</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/156\">#156</a> from trail-of-forks/tob-fix-annotation</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/30639668ca11564ee2c0fda77e7e080e3a03c9ed\"><code>3063966</code></a> oidc-exchange: &quot;fix&quot; multiline annotations</li>\n<li>See full diff in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.6...v1.8.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.6&new-version=1.8.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-06-26T18:27:18Z",
  "comments":1,
  "created_at":"2023-06-26T17:59:45Z",
  "draft":false,
  "id":1775295714,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5T8r7g",
  "number":2546,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-26T18:27:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.6 to 1.8.7",
  "updated_at":"2023-06-26T18:27:19Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR tackes #1682 by moving existing behavior-based string logic into the core Awkward routines.\r\n\r\n- [x] Adds `__bytes__` to `ak.Array`, to replace the `ByteBehavior.__bytes__`\r\n- [x] Reworks `__getitem__` bypass logic\r\n- [x] Removes `__add__` and `__radd__` support for `chat`/`byte` arrays.\r\n- [x] Hardcodes ufunc handling for strings\r\n- [x] Hardcodes typestr handling for strings / chars\r\n",
  "closed_at":"2023-06-28T21:33:17Z",
  "comments":11,
  "created_at":"2023-06-27T14:05:12Z",
  "draft":false,
  "id":1777066041,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UCqS-",
  "number":2547,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-28T21:33:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: move string features into core",
  "updated_at":"2023-06-28T21:33:18Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak.forms.RecordForm` accepts an iterable for `fields`, but doesn't canonicalise it. This PR addresses that, and also relaxes the `dict` requirement in `forms.from_dict`. This just seems reasonable; it will be a bit slower than checking dict, but I'm hoping this isn't a performance critical path.",
  "closed_at":"2023-06-27T20:24:43Z",
  "comments":1,
  "created_at":"2023-06-27T17:44:03Z",
  "draft":false,
  "id":1777452548,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UD-qZ",
  "number":2548,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-27T20:24:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support dict-likes in form.from_dict, convert fields to list",
  "updated_at":"2023-06-27T20:24:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds a new `__list__` nominal type parameter to associate with behaviors. It should only be added to lists. In addition to setting an array-class for `ListOffsetArray` (et al.) via `layout.parameter(\"__list__\")`, we can also lookup the list in a purelist sense, allowing list-of-type to have an array class too.\r\n\r\nSetting `__list__` and `__record__` an error for non-intended types, but that should be another PR (there are fixes that need to be made to both `validity_error` and broadcasting).",
  "closed_at":"2023-06-29T22:21:50Z",
  "comments":3,
  "created_at":"2023-06-29T10:54:44Z",
  "draft":false,
  "id":1780581100,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UOprf",
  "number":2549,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-29T22:21:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add new `__list__` parameter for list-based array types",
  "updated_at":"2023-06-29T22:21:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The parameters check for validity error does not recurse in the existing implementation",
  "closed_at":"2023-06-29T21:34:26Z",
  "comments":2,
  "created_at":"2023-06-29T14:30:30Z",
  "draft":false,
  "id":1780955547,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UP8BX",
  "number":2550,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-29T21:34:26Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: check validity error properly",
  "updated_at":"2023-06-29T22:00:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\n2.2.4\n\n### Description and code to reproduce\n\nHi @agoose77 - here are some very minor issues I run into when conversion an `np.dtype` to a string required by a Form. Perhaps, we should to handle this in a more consistent manner... Please, have a look. Thanks.\r\n\r\n- [ ] `EmptyArray` can have `parameters`, but:\r\n\r\n```python\r\nIssue: EmptyForm cannot contain parameters.\r\n```\r\n\r\n- [ ] Should 'int32' and 'i32'  be the same?\r\n\r\n```python\r\nAssertionError: assert ListOffsetForm('int32', NumpyForm('float64')) == ListOffsetForm('i32', NumpyForm('float64'))\r\n```\r\n\r\n- [ ] `ak.index._dtype_to_form` dict has no `bool`:\r\n\r\n```python\r\n    @property\r\n    def form(self):\r\n>       return ByteMaskedForm(ak.index._dtype_to_form[self._mask.dtype], self.content.form, self._valid_when, parameters=self._parameters,)\r\nE       KeyError: dtype('bool')\r\n```\r\n\r\nusing `ak.types.numpytype.dtype_to_primitive(self._mask.dtype)`:\r\n```python\r\n>       assert builder.form == layout.form\r\nE       AssertionError: assert ByteMaskedForm('bool', NumpyForm('float64'), True) == ByteMaskedForm('i8', NumpyForm('float64'), True)\r\n```\r\n",
  "closed_at":"2023-06-29T15:22:32Z",
  "comments":3,
  "created_at":"2023-06-29T14:32:19Z",
  "id":1780958849,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5qJ0aB",
  "number":2551,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Form and np.dtype inconsistencies ",
  "updated_at":"2023-06-29T15:22:32Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"There are still some outstanding problems with string broadcasting, that pertain to parameter replacement in `broadcast_and_apply`. \r\n\r\nThe main cases are covered [in the tests](https://github.com/scikit-hep/awkward/blob/agoose77/fix-string-broadcasting/tests/test_2410_string_broadcast.py) as `xfail`.\r\n\r\nThis PR fixes the broadcasting rules for parameters, with the following changes:\r\n\r\n1. New list-types are not included in the parameter broadcasting, using a sentinel \"NO_PARAMETERS\" token\r\n2. Record and union broadcasting considers only the parameters of the record/union layouts respectively; the non-record/non-union contents are nested in the records/unions that are build.",
  "closed_at":"2023-06-30T16:13:17Z",
  "comments":2,
  "created_at":"2023-06-30T12:30:09Z",
  "draft":false,
  "id":1782448073,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UU9I6",
  "number":2552,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-06-30T16:13:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: string broadcasting",
  "updated_at":"2023-06-30T16:13:18Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"LayoutBuilder in C++ and Numba should have the same API, as discussed here: https://github.com/scikit-hep/awkward/pull/2408#issuecomment-1581137471 by @jpivarski:\r\n> ### Defining the semantics\r\n> What methods should all the builders have and what should they do? (Anything that has `append` has an `extend`.) Everything has a `__len__`. They have the indexes they need (`ListOffset` has `offsets`, etc.) as properties.\r\n> \r\n> * `Numpy`: `append` passes a value to `GrowableBuffer.append`\r\n> * `Empty`: has no methods; can't be filled\r\n> * `ListOffset`:\r\n>   \r\n>   * has `content` property\r\n>   * `begin_list` returns `content`\r\n>   * `end_list` appends the length of `content` to `offsets`\r\n> * `Regular`:\r\n>   \r\n>   * has `content` property\r\n>   * `begin_list` returns `content`\r\n>   * `end_list` does nothing\r\n> * `IndexedOption`:\r\n>   \r\n>   * has `content` property\r\n>   * `append_valid` appends the length of `content` to `index` and returns `content`\r\n>   * `append_invalid` appends a `-1` to the `index` and returns nothing\r\n> * `ByteMasked`:\r\n>   \r\n>   * has `content` property\r\n>   * `append_valid` appends `valid_when` as a byte to `mask` and returns `content`\r\n>   * `append_invalid` appends `not valid_when` as a byte to `mask` and returns `content`\r\n> * `BitMasked`:\r\n>   \r\n>   * has `content` property and a length-2 NumPy array of `length` and `bit_position` (to avoid a modulo)\r\n>   * `append_valid` appends `valid_when` as a bit to `mask` and updates `length` and `bit_position` and returns `content`\r\n>   * `append_invalid` appends `not valid_when` as a bit to `mask` and updates `length` and `bit_position` and returns `content`\r\n> * `Unmasked`: has `content` property\r\n> * `Record`:\r\n>   \r\n>   * has nonempty `contents` property\r\n>   * `fields` property, `content(string literal)` method that returns an element of the `contents`\r\n> * `Tuple`:\r\n>   \r\n>   * has nonempty `contents` property\r\n>   * `content(integer literal)` method that returns an element of the `contents`\r\n> * `Union`:\r\n>   \r\n>   * has `contents` property of length >= 2\r\n>   * `append_content(integer literal)` method that appends the literal integer to `tags`, appends the length of that one `content` to `index` and returns that one `content`\r\n> \r\n> We're dropping `List` and `Indexed`, since they don't produce arrays that are usefully different from what you can construct with the above. This is similar to the reasoning about dropping `EmptyRecord`, `EmptyTuple`.\r\n> \r\n> There are types you can't make with this: empty records and tuples, and `RegularArray` with `size == 0`. Given an array made with the above, you can get all of those with slices.\r\n\r\n",
  "closed_at":"2023-07-03T17:22:14Z",
  "comments":5,
  "created_at":"2023-06-30T13:10:29Z",
  "draft":false,
  "id":1782508775,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UVKgM",
  "number":2553,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-03T17:22:14Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: make C++ LayoutBuilder API consistent with the Numba's",
  "updated_at":"2023-07-03T17:44:19Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"#2553 will also require a C++ release, so this PR can go in at the same time.",
  "closed_at":"2023-07-03T23:06:29Z",
  "comments":2,
  "created_at":"2023-06-30T22:35:47Z",
  "draft":false,
  "id":1783227160,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UXj1U",
  "number":2554,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-03T23:06:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: move C++ format configuration",
  "updated_at":"2023-07-03T23:06:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nI'm of the view that it's so easy to change types in Awkward, we should be stricter about the difference between e.g. a string and a list of characters. As such, `ak.num` should validate `purelist_depth` to ensure that the operation is valid.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-07-01T20:55:20Z",
  "id":1784231355,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5qWTW7",
  "number":2555,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`ak.num` should raise an `AxisError` when counting string characters",
  "updated_at":"2023-07-01T20:55:20Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjc0MDU1MTAy",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\n2.2.4\n\n### Description and code to reproduce\n\nWhile trying out awkward + jax I ran into the following:\r\n```python\r\nimport jax\r\nimport awkward as ak\r\n\r\nak.jax.register_and_check()\r\n\r\na = ak.Array([[1.0, 2, 3], [5, 6]], backend=\"jax\")\r\n\r\ndef f(x):\r\n    return ak.sum(ak.sum(x) * x)\r\n\r\nf(a)\r\njax.grad(f)(a)\r\n```\r\nresults in\r\n```python\r\n[...]\r\nTypeError: Jax tracers cannot be used with `ak.from_arraylib`\r\n\r\nThis error occurred while calling\r\n\r\n    numpy.multiply.__call__(\r\n        JVPTracer-instance\r\n        <Array [[...], [...]] type='2 * var * float32'>\r\n    )\r\n```\r\nThis seems to originate from the `ak.sum(x) * x` piece.\r\n\r\nA corresponding `numpy` version (without any `awkward`) works fine:\r\n```python\r\nimport jax\r\nimport numpy as np\r\n\r\na = np.array([1, 2, 3], dtype=float)\r\n\r\ndef f(x):\r\n    return np.sum(np.sum(x) * x)\r\n\r\nf(a)\r\njax.grad(f)(a)\r\n```\r\n\r\nRelevant library versions:\r\n```\r\nawkward                       2.2.4\r\nawkward-cpp                   17\r\njax                           0.4.13\r\njaxlib                        0.4.13\r\nnumpy                         1.25.0\r\n```\r\n",
  "closed_at":"2024-02-14T09:50:39Z",
  "comments":4,
  "created_at":"2023-07-02T10:43:36Z",
  "id":1784575632,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5qXnaQ",
  "number":2556,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Jax tracer TypeError in multiplication",
  "updated_at":"2024-02-14T09:50:39Z",
  "user":"MDQ6VXNlcjQ1MDA5MzU1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"[Our deprecation schedule](https://github.com/scikit-hep/awkward/wiki#api-breaking-changes-after-20) earmarked the July 2.3.0 release for dropping Python 3.7 support. This PR updates our CI, and package metadata, to reflect this change.",
  "closed_at":"2023-07-04T08:26:01Z",
  "comments":6,
  "created_at":"2023-07-02T10:49:48Z",
  "draft":false,
  "id":1784578308,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UcORT",
  "number":2557,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-04T08:26:01Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: drop Python 3.7",
  "updated_at":"2023-07-04T08:26:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"See https://github.com/pyodide/pyodide/pull/3971",
  "closed_at":"2023-07-02T17:00:00Z",
  "comments":0,
  "created_at":"2023-07-02T10:53:15Z",
  "draft":false,
  "id":1784580935,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UcO3e",
  "number":2558,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-02T17:00:00Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: cap `pydantic<2` to fix WASM build",
  "updated_at":"2023-07-02T17:00:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This should fix #2556, though I'm not sure why we had that check there. It looks intentional. Let's see what the test suite picks up.",
  "closed_at":"2024-01-03T16:06:49Z",
  "comments":2,
  "created_at":"2023-07-02T10:57:19Z",
  "draft":true,
  "id":1784582470,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UcPLW",
  "number":2559,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: allow JAX tracers in `from_arraylib`",
  "updated_at":"2024-02-01T19:24:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This fixes a bug that is raised during the strict dask-awkward test suite.",
  "closed_at":"2023-07-03T18:05:20Z",
  "comments":1,
  "created_at":"2023-07-02T22:15:54Z",
  "draft":false,
  "id":1784949999,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UdeW3",
  "number":2560,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-03T18:05:20Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: convert unknown-length to index in `ListOffsetArray.to_RegularArray`",
  "updated_at":"2023-07-03T18:05:21Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR is a first pass over the broadcasting logic to change direction from \"unknown lengths are infectious\" to \"known lengths are infectious\". \r\n\r\nAs we've discussed here previously, typetracer should only fail for ahead-of-time known errors. We defer validation of the unknown data to runtime, via a second pass using a known-data backend. As such, we can rewrite assertions of the form `assert unknown_value == x` with `unknown_value = x`, rather than propagating unknown values everywhere.\r\n\r\ni.e. operations like\r\n```python\r\nrequire_equal_lengths(contents)\r\nnext_length = unknown_length\r\n```\r\nbecome\r\n```python\r\nrequire_equal_lengths(contents)\r\nnext_length = contents[0].length\r\n```\r\n\r\nI think we might have assumed this before; I'm just getting around to changing the code after  re-orienting my thinking a while back. \r\n\r\nRelatedly, slicing typetracer arrays should assume that the length succeeds, and use the concrete length, for obvious reason.",
  "closed_at":"2023-07-03T17:42:09Z",
  "comments":0,
  "created_at":"2023-07-03T15:05:34Z",
  "draft":false,
  "id":1786360177,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UiSza",
  "number":2561,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-03T17:42:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: prefer known to unknown lengths in broadcasting",
  "updated_at":"2023-07-03T17:42:10Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"See https://github.com/scientific-python/cookie/pull/200.\r\n\r\nCommitted via https://github.com/asottile/all-repos",
  "closed_at":"2023-07-03T17:42:45Z",
  "comments":1,
  "created_at":"2023-07-03T16:06:07Z",
  "draft":false,
  "id":1786465178,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Uio81",
  "number":2562,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-03T17:42:45Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: ruff moved to astral-sh",
  "updated_at":"2023-07-03T17:42:46Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"See https://github.com/scientific-python/cookie/issues/201.\r\n\r\nCommitted via https://github.com/asottile/all-repos",
  "closed_at":"2023-07-04T08:50:03Z",
  "comments":1,
  "created_at":"2023-07-03T17:36:57Z",
  "draft":false,
  "id":1786578424,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UjBUS",
  "number":2563,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-04T08:50:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: target-version no longer needed by Black or Ruff",
  "updated_at":"2023-07-04T08:50:04Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The recent changes for string broadcasting had a missing case for regular strings. Furthermore, the broadcasting logic for lists was growing in complexity. This PR fixes bugs with broadcasting of regular strings, and merges the optimised broadcasting logic into the fallback. This reduces the number of code branches that we have to keep in sync.",
  "closed_at":"2023-07-03T23:05:53Z",
  "comments":1,
  "created_at":"2023-07-03T22:36:32Z",
  "draft":false,
  "id":1786886277,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UkEPk",
  "number":2564,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-03T23:05:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: broadcasting of regular strings",
  "updated_at":"2023-07-03T23:05:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/asottile/setup-cfg-fmt: v2.3.0 \u2192 v2.4.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.3.0...v2.4.0)\n- [github.com/psf/black: 23.3.0 \u2192 23.7.0](https://github.com/psf/black/compare/23.3.0...23.7.0)\n- [github.com/astral-sh/ruff-pre-commit: v0.0.275 \u2192 v0.0.277](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.275...v0.0.277)\n- [github.com/asottile/pyupgrade: v3.8.0 \u2192 v3.9.0](https://github.com/asottile/pyupgrade/compare/v3.8.0...v3.9.0)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-07-17T17:32:44Z",
  "comments":1,
  "created_at":"2023-07-04T02:30:36Z",
  "draft":false,
  "id":1787038238,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UkkLK",
  "number":2565,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-17T17:32:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-07-17T17:32:45Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- Raise error for `parameters` that are neither `None` or `{}` in `EmptyForm` et al.\r\n  - We still allow `parameters=None` and `parameters={}` in the constructor arguments, to ensure that content-naive workflows still work.\r\n- Raise error for conversions of unions to backend arrays\r\n \r\n",
  "closed_at":"2023-07-04T18:58:17Z",
  "comments":1,
  "created_at":"2023-07-04T11:46:05Z",
  "draft":false,
  "id":1787771553,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UnBdd",
  "number":2566,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-04T18:58:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: apply retroactive deprecations",
  "updated_at":"2023-07-04T18:58:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"These were accidentally removed by `semgrep` when I was refactoring the high-level API in #2531. I've grepped the guilty merge commit to ensure that these are the only two functions.",
  "closed_at":"2023-07-04T22:02:15Z",
  "comments":1,
  "created_at":"2023-07-04T16:45:01Z",
  "draft":false,
  "id":1788226085,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UokjE",
  "number":2567,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-04T22:02:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: restore NEP-18 overloads for concatenate and where",
  "updated_at":"2023-07-04T22:02:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThe handling of parameters in broadcasting has been improved in v2, but it's not quite right. We don't treat existing layouts any differently from broadcasted ones, which has ramifications for the different broadcasting modes.\n\nThis may also relate to the distinction between type parameters and non type parameters (that I don't think we handle fully) ",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-07-05T13:18:16Z",
  "id":1789542883,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5qqkHj",
  "number":2569,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Broadcasting should properly handle parameters ",
  "updated_at":"2024-01-20T18:57:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-11-14T19:37:54Z",
  "comments":15,
  "created_at":"2023-07-05T15:16:21Z",
  "draft":false,
  "id":1789781837,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ut2CV",
  "number":2570,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-14T19:37:54Z"
  },
  "reactions":{
   "hooray":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"test: Make cuda tests pass",
  "updated_at":"2024-01-18T17:27:47Z",
  "user":"MDQ6VXNlcjUzNjUwNTM4"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\nSee https://github.com/dask-contrib/dask-awkward/issues/307\r\n\r\n@ianna, @ioanaif, or @jpivarski - is this something you'd be able to take a look at? I'm away for the next two weeks (and preparing for my viva tonight and tomorrow), so I won't be able to get to it for a while.\r\n\r\nThe bug here is that whilst our index kernels are always specialised to `int64`, they should support the various input index types that we know of. I think we should tackle this, as there are no guards before this kernel that ensure we don't end up with an `int32` index, and I believe we should support that case. \r\n\r\nThe fix I *think* is to change the `nextparents` call such that it doesn't cast to `int64`, and then generate the appropriate overloads for the kernel. We could cast both index and nextparents, but that's more copying vs specialising the kernel.\r\n\r\nN.B. there may be other kernels that have this problem. If you notice them whilst fixing this, great!",
  "closed_at":"2023-07-05T18:40:14Z",
  "comments":0,
  "created_at":"2023-07-05T17:04:30Z",
  "id":1789958636,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5qsJns",
  "number":2571,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`awkward_ListOffsetArray_reduce_local_nextparents_64` only supports `int64` arguments",
  "updated_at":"2023-07-05T18:40:14Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This includes the awkward-cpp version number bump. Before we make another awkward release, we'll need the new awkward-cpp release, but the tests will warn us about that.",
  "closed_at":"2023-07-05T18:40:12Z",
  "comments":4,
  "created_at":"2023-07-05T18:10:28Z",
  "draft":false,
  "id":1790045285,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5UuvaX",
  "number":2572,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-05T18:40:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: added kernel specializations for `awkward_ListOffsetArray_reduce_local_nextparents_64`",
  "updated_at":"2023-07-05T18:40:14Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Which documentation?\n\nDocumentation website\n\n### What needs to be documented?\n\nSee https://github.com/scikit-hep/awkward/pull/1651",
  "closed_at":"2023-08-11T16:31:06Z",
  "comments":0,
  "created_at":"2023-07-06T15:04:36Z",
  "id":1791743633,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5qy9aR",
  "number":2575,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Drop reference to removed array-class syntax",
  "updated_at":"2023-08-11T16:31:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Description of new feature\r\n\r\n```python3\r\nout = ak.Array(out.layout.to_typetracer(forget_length=True), behavior=out.behavior)\r\n```\r\n\r\nIs a very common pattern for people writing library code, or people hacking stuff into dask from whatever they're doing in their analysis. This comes up any time someone needs to `map_partitions` some custom operation.\r\n\r\nIt would significantly simplify code that has to interact with typetracer high level arrays to have in the highlevel Array class a corresponding `.to_typetracer_array()` (or whatever is most appropriate to call it) that performs the above operation.",
  "closed_at":"2024-01-20T01:09:40Z",
  "comments":5,
  "created_at":"2023-07-07T18:38:19Z",
  "id":1794037446,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5q7tbG",
  "number":2576,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"request for highlevel `.to_typetracer_array()` or something similar",
  "updated_at":"2024-01-20T01:09:40Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.13.1 to 2.14.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.14.0</h2>\n<ul>\n<li>\u2728 Adds support for building PyPy 3.10 wheels. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1525\">#1525</a>)</li>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b3.</li>\n<li>\u2728 Allow the use of the <code>{wheel}</code> placeholder in CIBW_TEST_COMMAND (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1533\">#1533</a>)</li>\n<li>\ud83d\udcda Docs &amp; examples updates (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1532\">#1532</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1416\">#1416</a>)</li>\n<li>\u26a0\ufe0f Removed support for running cibuildwheel in Python 3.7. Python 3.7 is EOL. However, cibuildwheel continues to build Python 3.7 wheels for the moment. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1175\">#1175</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.14.0</h3>\n<p><em>10 July 2023</em></p>\n<ul>\n<li>\u2728 Adds support for building PyPy 3.10 wheels. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1525\">#1525</a>)</li>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b3.</li>\n<li>\u2728 Allow the use of the <code>{wheel}</code> placeholder in CIBW_TEST_COMMAND (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1533\">#1533</a>)</li>\n<li>\ud83d\udcda Docs &amp; examples updates (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1532\">#1532</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1416\">#1416</a>)</li>\n<li>\u26a0\ufe0f Removed support for running cibuildwheel in Python 3.7. Python 3.7 is EOL. However, cibuildwheel continues to build Python 3.7 wheels for the moment. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1175\">#1175</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/66b46d086804a9e9782354100d96a3a445431bca\"><code>66b46d0</code></a> Bump version: v2.14.0</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/b0a5c951f5fd2647af2f614cda0109888c7174d9\"><code>b0a5c95</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1543\">#1543</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8bfc92df50722d7e6c4b479856fc7250505c3b3e\"><code>8bfc92d</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9afee48243a269243ca20a0b15120778857d69c4\"><code>9afee48</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1541\">#1541</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7f6fe8a0318979cc1e71cb3e4dd33b1fc7c10cf9\"><code>7f6fe8a</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1416\">#1416</a> from Czaki/poerty_problem</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f44d2784f85a87239000a6be8661f40fc908b497\"><code>f44d278</code></a> Update docs/faq.md</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/740f081606d0f80173a10381b56220e21afde83e\"><code>740f081</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1526\">#1526</a> from mayeut/drop-python-3.7</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8c6ff25315505773a081121fa645d3ee1692b4e4\"><code>8c6ff25</code></a> [Bot] Update dependencies (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1539\">#1539</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/b77cedba393e77aa61e4d09058d75e8e6daa8cd6\"><code>b77cedb</code></a> chore: ruff moved to astral-sh (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1540\">#1540</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/6415878631c0b7bb41d53c945a6a5492c20c0b9f\"><code>6415878</code></a> chore: remove cap on markdown-it-py</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.13.1...v2.14.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.13.1&new-version=2.14.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-07-17T17:31:04Z",
  "comments":1,
  "created_at":"2023-07-10T18:01:17Z",
  "draft":false,
  "id":1797254739,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5VHM-p",
  "number":2577,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.13.1 to 2.14.0",
  "updated_at":"2023-07-17T17:31:06Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n1.10.3\n\n### Description and code to reproduce\n\nTrying to negate a component of a boolean array in awkward 1 results in:\r\n```\r\n>>> import awkward as ak\r\n>>> x = ak.Array([[False, False, False], [False, False], [False, False, False]])\r\n>>> ~x[0,0]\r\n-1\r\n```\r\n\r\nhowever:\r\n```\r\n>>> ~x\r\n<Array [[True, True, True, ... True, True]] type='3 * var * bool'>\r\n>>> ~x[0]\r\n<Array [True, True, True] type='3 * bool'>\r\n```\r\n\r\nare fine.\r\n\r\nThis is fixed in awkward2 but we have a large user base that cannot move to awkward2 due to coffea 2023 not being out yet and their analyses being ongoing.",
  "closed_at":"2023-08-11T13:50:29Z",
  "comments":3,
  "created_at":"2023-07-10T20:38:23Z",
  "id":1797547318,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5rJGU2",
  "number":2578,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"not_planned",
  "title":"boolean arrays don't negate correctly in all cases in awkward1",
  "updated_at":"2023-08-11T13:50:37Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\n1.10.3\n\n### Description and code to reproduce\n\nFrom Andrew Roberts on Mattermost/LPCPhysDiscuss/Coffea:\r\n\r\nit goes invalid after the `ak.where`. All of the arrays that are inputted to the function are valid. here they are in my analysis script (hope the message isn't too long):\r\n\r\na content `[[], [], []]`\r\na layout\r\n```\r\n<ListOffsetArray64>\r\n    <offsets><Index64 i=\"[0 0 0 0]\" offset=\"0\" length=\"4\" at=\"0x0000081d54a0\"/></offsets>\r\n    <content><EmptyArray/></content>\r\n</ListOffsetArray64>\r\n```\r\na is_valid `True`\r\nb content `[[None, None, None], [None, None], [None, None, None]]`\r\nb layout\r\n```\r\n<ListOffsetArray64>\r\n    <offsets><Index64 i=\"[0 3 5 8]\" offset=\"0\" length=\"4\" at=\"0x0000081d8280\"/></offsets>\r\n    <content><IndexedOptionArray64>\r\n        <index><Index64 i=\"[-1 -1 -1 -1 -1 -1 -1 -1]\" offset=\"0\" length=\"8\" at=\"0x000008413640\"/></index>\r\n        <content><NumpyArray format=\"?\" shape=\"0\" data=\"\" at=\"0x000008342eb0\"/></content>\r\n    </IndexedOptionArray64></content>\r\n</ListOffsetArray64>\r\n```\r\nb is_valid `True`\r\nc content `[[126, 59.3, 37.9], [54.5, 46.2], [126, 73.5, 32.3]]`\r\nc layout\r\n```\r\n<ListOffsetArray64>\r\n    <offsets><Index64 i=\"[0 3 5 8]\" offset=\"0\" length=\"4\" at=\"0x0000091e96d0\"/></offsets>\r\n    <content><IndexedArray64>\r\n        <index><Index64 i=\"[5241 5242 5243 55080 55081 85773 85774 85775]\" offset=\"0\" length=\"8\" at=\"0x000009082f70\"/></index>\r\n        <content><NumpyArray format=\"f\" shape=\"90906\" data=\"54.8438 50.4688 20.7812 17.8594 71.375 ... 53.9062 45.125 28.2188 22.6562 17.6094\" at=\"0x00000927dc50\">\r\n            <parameters>\r\n                <param key=\"__doc__\">\"pt\"</param>\r\n            </parameters>\r\n        </NumpyArray></content>\r\n    </IndexedArray64></content>\r\n</ListOffsetArray64>\r\n```\r\nc is_valid `True`\r\nd content `[[False, False, False], [False, False], [False, False, False]]`\r\nd layout\r\n```\r\n<ListArray64>\r\n    <starts><Index64 i=\"[8 11 13]\" offset=\"0\" length=\"3\" at=\"0x00000901c3d0\"/></starts>\r\n    <stops><Index64 i=\"[11 13 16]\" offset=\"0\" length=\"3\" at=\"0x0000084281e0\"/></stops>\r\n    <content><IndexedArray64>\r\n        <index><Index64 i=\"[-1 -1 -1 -1 -1 -1 -1 -1 5241 5242 5243 55080 55081 85773 85774 85775]\" offset=\"0\" length=\"16\" at=\"0x0000083ca9f0\"/></index>\r\n        <content><NumpyArray format=\"?\" shape=\"90906\" data=\"false false false false false ... false false false false false\" at=\"0x0000094b1790\"/></content>\r\n    </IndexedArray64></content>\r\n</ListArray64>\r\n```\r\nd is_valid `False`\r\n\r\nthanks for the help! ",
  "closed_at":"2023-07-20T16:18:07Z",
  "comments":4,
  "created_at":"2023-07-10T22:03:13Z",
  "id":1797651716,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5rJf0E",
  "number":2579,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`-1` in `IndexedArrays` of Awkward v1 (needs a bug-fix release)",
  "updated_at":"2023-07-20T16:18:08Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.7 to 1.8.8.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.8</h2>\n<h2>:nail_care: Cosmetic output impovements</h2>\n<ul>\n<li>\n<p>In <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/167\">pypa/gh-action-pypi-publish#167</a>, <a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> introduced a nudge-warning encoraging people to start using secretless publishing to PyPI, as suggested by <a href=\"https://github.com/sponsors/sethmlarson\"><code>@\u200bsethmlarson</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/164\">pypa/gh-action-pypi-publish#164</a>, collaborating with <a href=\"https://github.com/di\"><code>@\u200bdi</code></a>.</p>\n<p><em>:bulb: Tip:</em> The OIDC-based trusted publishing integration details can be found in the action README at <a href=\"https://github.com/marketplace/actions/pypi-publish#trusted-publishing\">https://github.com/marketplace/actions/pypi-publish#trusted-publishing</a> and on the PyPI docs page at <a href=\"https://docs.pypi.org/trusted-publishers/\">https://docs.pypi.org/trusted-publishers/</a>. It's gone GA on April 20, 2023, during PyCon: <a href=\"https://blog.pypi.org/posts/2023-04-20-introducing-trusted-publishers/\">https://blog.pypi.org/posts/2023-04-20-introducing-trusted-publishers/</a>. And the Trail Of Bits blog post has some deeper explanation here: <a href=\"https://blog.trailofbits.com/2023/05/23/trusted-publishing-a-new-benchmark-for-packaging-security/\">https://blog.trailofbits.com/2023/05/23/trusted-publishing-a-new-benchmark-for-packaging-security/</a>.</p>\n</li>\n</ul>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li><a href=\"https://github.com/sponsors/pquentin\"><code>@\u200bpquentin</code></a> bumped the runtime dependency pins to the recent versions @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/168\">pypa/gh-action-pypi-publish#168</a>.</li>\n</ul>\n<h2>:muscle: New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/pquentin\"><code>@\u200bpquentin</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/168\">pypa/gh-action-pypi-publish#168</a></li>\n</ul>\n<p><strong>:mirror: Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/f8c70e705ffc13c3b4d1221169b84f12a75d6ca8\"><code>f8c70e7</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/168\">#168</a> from pquentin/bump-dependencies</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/68276eb3e42606c933a7e904e2a08d51c25f5f5b\"><code>68276eb</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/167\">#167</a> from trail-of-forks/tob-nudge</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a5d57af63cad4af35241aa8833c74cf45dac20fa\"><code>a5d57af</code></a> Bump runtime dependencies</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e90e853e89d14ff8ad42240b7e16f7a7f0159fd6\"><code>e90e853</code></a> twine-upload: only nudge on PyPI-looking domains</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/be695966b092c743f840d8cdab3f8a9bddc88f7e\"><code>be69596</code></a> twine-upload: add a nudge for trusted publishing</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/54d67ed3c50a769c633f7db8063c9e634709c1b0\"><code>54d67ed</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/165\">#165</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/d32e2fab322ed7f929ae799c1e6518f903577add\"><code>d32e2fa</code></a> Revert flake8 to v4.0.1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/a8d92e9876e847b9d2375b0d8c0e677d1a5122ba\"><code>a8d92e9</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>See full diff in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.7...v1.8.8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.7&new-version=1.8.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-07-17T17:32:28Z",
  "comments":0,
  "created_at":"2023-07-12T17:57:28Z",
  "draft":false,
  "id":1801495302,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5VVscS",
  "number":2580,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-17T17:32:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.7 to 1.8.8",
  "updated_at":"2023-07-17T17:32:29Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\n\nIt would be nice to upload the awkward-cpp Pyodide wheels to the GitHub release. This can probably be automated.",
  "closed_at":"2024-01-20T21:21:12Z",
  "comments":3,
  "created_at":"2023-07-12T23:25:50Z",
  "id":1801897376,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5rZsWg",
  "number":2581,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Upload Pyodide wheel to GH Release",
  "updated_at":"2024-01-20T21:21:12Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2579, depends upon #2583\r\n",
  "closed_at":"2023-07-19T15:29:53Z",
  "comments":0,
  "created_at":"2023-07-16T15:26:01Z",
  "draft":false,
  "id":1806621022,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5VnDVc",
  "number":2582,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-19T15:29:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: (v1) merging options should produce an option",
  "updated_at":"2023-07-19T15:29:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR uses only the vendored `NDArrayOperatorsMixin` mixin class (without `__slots__`) from #2534",
  "closed_at":"2023-07-19T07:22:46Z",
  "comments":2,
  "created_at":"2023-07-17T17:26:09Z",
  "draft":false,
  "id":1808238369,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5VsjUn",
  "number":2583,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-19T07:22:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: backport vendored mixin from #2534",
  "updated_at":"2023-07-19T07:22:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.13.1 to 2.14.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.14.1</h2>\n<ul>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b4 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1550\">#1550</a>)</li>\n</ul>\n<h2>v2.14.0</h2>\n<ul>\n<li>\u2728 Adds support for building PyPy 3.10 wheels. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1525\">#1525</a>)</li>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b3.</li>\n<li>\u2728 Allow the use of the <code>{wheel}</code> placeholder in CIBW_TEST_COMMAND (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1533\">#1533</a>)</li>\n<li>\ud83d\udcda Docs &amp; examples updates (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1532\">#1532</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1416\">#1416</a>)</li>\n<li>\u26a0\ufe0f Removed support for running cibuildwheel in Python 3.7. Python 3.7 is EOL. However, cibuildwheel continues to build Python 3.7 wheels for the moment. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1175\">#1175</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.14.1</h3>\n<p><em>15 July 2023</em></p>\n<ul>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b4 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1550\">#1550</a>)</li>\n</ul>\n<h3>v2.14.0</h3>\n<p><em>10 July 2023</em></p>\n<ul>\n<li>\u2728 Adds support for building PyPy 3.10 wheels. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1525\">#1525</a>)</li>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0b3.</li>\n<li>\u2728 Allow the use of the <code>{wheel}</code> placeholder in CIBW_TEST_COMMAND (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1533\">#1533</a>)</li>\n<li>\ud83d\udcda Docs &amp; examples updates (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1532\">#1532</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1416\">#1416</a>)</li>\n<li>\u26a0\ufe0f Removed support for running cibuildwheel in Python 3.7. Python 3.7 is EOL. However, cibuildwheel continues to build Python 3.7 wheels for the moment. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1175\">#1175</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f21bb8376a051ffb6cb5604b28ccaef7b90e8ab7\"><code>f21bb83</code></a> Bump version: v2.14.1</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/a5b2e543e5d02654be6e22383524c7ce745903ce\"><code>a5b2e54</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1550\">#1550</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/bd9675d05b8ba0f5fb5becbb3d4cb8eccd62e189\"><code>bd9675d</code></a> Manually specify 3.12.0b4 on macOS</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/661ba2d0deb9b03c8b781f5d169d65f901518f50\"><code>661ba2d</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/66b46d086804a9e9782354100d96a3a445431bca\"><code>66b46d0</code></a> Bump version: v2.14.0</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/b0a5c951f5fd2647af2f614cda0109888c7174d9\"><code>b0a5c95</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1543\">#1543</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8bfc92df50722d7e6c4b479856fc7250505c3b3e\"><code>8bfc92d</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9afee48243a269243ca20a0b15120778857d69c4\"><code>9afee48</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1541\">#1541</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7f6fe8a0318979cc1e71cb3e4dd33b1fc7c10cf9\"><code>7f6fe8a</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1416\">#1416</a> from Czaki/poerty_problem</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f44d2784f85a87239000a6be8661f40fc908b497\"><code>f44d278</code></a> Update docs/faq.md</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.13.1...v2.14.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.13.1&new-version=2.14.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-07-17T17:32:08Z",
  "comments":0,
  "created_at":"2023-07-17T17:31:00Z",
  "draft":false,
  "id":1808246486,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5VslEt",
  "number":2584,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-17T17:32:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.13.1 to 2.14.1",
  "updated_at":"2023-07-17T17:32:09Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.277 \u2192 v0.0.281](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.277...v0.0.281)\n- [github.com/asottile/pyupgrade: v3.9.0 \u2192 v3.10.1](https://github.com/asottile/pyupgrade/compare/v3.9.0...v3.10.1)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-08-07T19:09:12Z",
  "comments":1,
  "created_at":"2023-07-18T03:04:22Z",
  "draft":false,
  "id":1808988110,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5VvFNk",
  "number":2585,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-07T19:09:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-08-07T19:09:13Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nIf I press control-C (or \u25a0 in Jupyter), I don't need to be told what high-level function failed because it didn't really \"fail,\" it was cancelled.\r\n\r\n```\r\nKeyboardInterrupt: \r\n\r\nThis error occurred while attempting to slice\r\n\r\n    <MomentumArray4D [[{pt: 63, eta: ..., ...}, ...], ...] type='299973 * v...'>\r\n\r\nwith\r\n\r\n    'phi'\r\n```\r\n\r\nSimilarly, we have to think about what will happen if someone cancels an asynchronous GPU process\u2014does the background thread get informed? That's beyond this issue, though.",
  "closed_at":"2023-07-19T12:52:05Z",
  "comments":1,
  "created_at":"2023-07-18T18:48:00Z",
  "id":1810501951,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5r6hE_",
  "number":2586,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"We shouldn't decorate the `KeyboardInterrupt` exception",
  "updated_at":"2023-07-19T12:52:05Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2586 ",
  "closed_at":"2023-07-19T12:52:04Z",
  "comments":1,
  "created_at":"2023-07-19T07:30:02Z",
  "draft":false,
  "id":1811338932,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5V3BFA",
  "number":2587,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-19T12:52:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't decorate non-`Exception` subclasses",
  "updated_at":"2023-07-19T12:52:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.3.1\n\n### Description and code to reproduce\n\nHi,\r\nA segmentation fault occurs when from_rdataframe is called on a huge rdataframe.\r\nIn my case, if I create the rdataframe with 11 NanoAODs (13994000 events) everything works fine, but if I create the rdataframe with 12 NanoAODs (15274000 events) or more, a segmentation fault occurs.\r\n\r\nI have already verified that:\r\n- is independent of EnableImplicitMT.\r\n- choosing other files changes nothing\r\n\r\n```python\r\nimport ROOT\r\nimport awkward as ak\r\nimport glob\r\n\r\nfolder=glob.glob(\"/scratchnvme/pviscone/Preselection_Skim/powheg/root_files/predict/*.root\")\r\n\r\ndf=ROOT.RDataFrame(\"Events\",folder[:12])\r\nprint(\"Events: \",df.Count().GetValue())\r\n\r\ncolumns=[\"Jet_pt\",\r\n        \"Jet_phi\",\r\n        \"Jet_eta\",\r\n        \"Jet_btagDeepFlavB\",\r\n        \"Jet_btagDeepFlavCvB\",\r\n        \"Jet_btagDeepFlavCvL\",\r\n        \"Muon_pt\",\r\n        \"Muon_phi\",\r\n        \"Muon_eta\",\r\n        \"Electron_pt\",\r\n        \"Electron_phi\",\r\n        \"Electron_eta\",\r\n        \"LHEPart_pdgId\",\r\n        \"MET_pt\",\r\n        \"MET_phi\",\r\n        \"Photon_pt\",\r\n        \"Photon_phi\",\r\n        \"Photon_eta\",]\r\n        \r\nak_array=ak.from_rdataframe(df,columns=columns)\r\n```\r\n\r\n```text\r\nWarning in <TClass::Init>: no dictionary for class edm::Hash<1> is available\r\nWarning in <TClass::Init>: no dictionary for class edm::ProcessHistory is available\r\nWarning in <TClass::Init>: no dictionary for class edm::ProcessConfiguration is available\r\nWarning in <TClass::Init>: no dictionary for class edm::ParameterSetBlob is available\r\nWarning in <TClass::Init>: no dictionary for class pair<edm::Hash<1>,edm::ParameterSetBlob> is available\r\nEvents:  15274000\r\n[1]    1441 segmentation fault (core dumped)  python -i try.py\r\n```\r\n\r\nThis is the output of the analysis of the core dump with pystack:\r\n\r\n```python\r\n\u276f pystack core core.14211 -v --exhaustive --locals\r\nUsing executable found in the core file: /scratchnvme/pviscone/env/bin/python\r\nINFO(process_core): Using library search path: \r\n\r\nCore file information:\r\nstate: R zombie: True niceness: 0\r\npid: 14211 ppid: 187369 sid: 187369\r\nuid: 4354 gid: 1144 pgrp: 14211\r\nexecutable: python arguments: python -i try.py \r\n\r\nThe process died due receiving signal SIGSEGV\r\nINFO(process_core): Analyzing core file core.14211 with executable /scratchnvme/pviscone/env/bin/python using stack method StackMethod.ALL with native mode NativeReportingMode.OFF\r\nINFO(parse_maps_file_for_binary): python binary first map found: VirtualMap(start=0x000056356cb06000, end=0x000056356cb60000, filesize=0x1000, offset=0x3a000, device='', flags='r', inode=0, path='/scratchnvme/pviscone/env/bin/python')\r\nINFO(parse_maps_file_for_binary): Process does not have a libpython.so, reading from binary\r\nINFO(_get_bss): Determined exact addr of .bss section: 0x56356ce9eac0 (0x56356cb06000 + 0x398ac0)\r\nINFO(parse_maps_file_for_binary): bss map found: VirtualMap(start=0x000056356ce9eac0, end=0x000056356cea4690, filesize=0x5bd0, offset=0x71ac0, device='', flags='', inode=0, path='None')\r\nINFO(process_core): Attempting to find symbol 'Py_Version' in python\r\nINFO(_get_python_version_from_map_information): Trying to extract version from filename: python\r\nINFO(_get_python_version_from_map_information): Could not find version by looking at library or binary path: Trying to get it from running python --version\r\nINFO(_get_python_version_from_map_information): Python version determined: 3.10\r\nINFO(process_core): Attempting to find symbol '_PyRuntime' in python\r\nINFO(process_core): Symbol '_PyRuntime' found at address 0x56356ce9e820\r\nINFO(process_core): An active interpreter has been detected\r\nINFO(process_core): Trying to resolve PyInterpreterState from Elf data\r\nINFO(process_core): Searching for PyInterpreterState based on PyRuntime address 0x56356ce9e820\r\nINFO(process_core): PyInterpreterState found by using ELF data at address 0x56356DBDB7D0\r\nINFO(process_core): Fetching Python threads\r\nINFO(process_core): Constructing new Python thread with tid 14211\r\nTraceback for thread 14211 [Has the GIL] (most recent call last):\r\n    (Python) File \"/scratchnvme/pviscone/Vcb_ditopDecay/tasks/combine/systematics/try.py\", line 33, in <module>\r\n        a=ak.from_rdataframe(df,columns=columns)\r\n    (Python) File \"/scratchnvme/pviscone/env/lib/python3.10/site-packages/awkward/_dispatch.py\", line 20, in dispatch\r\n        gen_or_result = func(*args, **kwargs)\r\n      Locals:\r\n        kwargs: {\"columns\": [\"Jet_pt\", \"Jet_phi\", \"Jet_eta\", \"Jet_btagDeepFlavB\", ...]}\r\n        args: (<RDataFrame at 0x7f9a7e6182c0>)\r\n    (Python) File \"/scratchnvme/pviscone/env/lib/python3.10/site-packages/awkward/operations/ak_from_rdataframe.py\", line 49, in from_rdataframe\r\n        return _impl(rdf, columns, highlevel, behavior, with_name, offsets_type, keep_order)\r\n      Arguments:\r\n        columns: [\"Jet_pt\", \"Jet_phi\", \"Jet_eta\", \"Jet_btagDeepFlavB\", ...]\r\n        rdf: <RDataFrame at 0x7f9a7e6182c0>\r\n      Locals:\r\n        behavior: None\r\n        highlevel: True\r\n        offsets_type: \"int64\"\r\n        with_name: None\r\n        keep_order: False\r\n    (Python) File \"/scratchnvme/pviscone/env/lib/python3.10/site-packages/awkward/operations/ak_from_rdataframe.py\", line 81, in _impl\r\n        out = ak._connect.rdataframe.from_rdataframe.from_rdataframe(\r\n      Arguments:\r\n        offsets_type: \"int64_t\"\r\n        behavior: None\r\n        highlevel: True\r\n        columns: (\"Jet_pt\", \"Jet_phi\", \"Jet_eta\", \"Jet_btagDeepFlavB\", ...)\r\n        keep_order: False\r\n        with_name: None\r\n        data_frame: <RDataFrame at 0x7f9a7e6182c0>\r\n      Locals:\r\n        project: False\r\n        awkward: <module at 0x7f9a7e6360c0>\r\n    (Python) File \"/scratchnvme/pviscone/env/lib/python3.10/site-packages/awkward/_connect/rdataframe/from_rdataframe.py\", line 225, in from_rdataframe\r\n        length = cpp_buffers_self.to_char_buffers[builder_type](builder)\r\n      Arguments:\r\n        offsets_type: \"int64_t\"\r\n        behavior: None\r\n        highlevel: True\r\n        columns: (\"Jet_pt\", \"Jet_phi\", \"Jet_eta\", \"Jet_btagDeepFlavB\", ...)\r\n        keep_order: False\r\n        with_name: None\r\n        data_frame: <RDataFrame at 0x7f9a7e6182c0>\r\n      Locals:\r\n        names_nbytes: <map<string,unsigned long> at 0x7f99db96c300>\r\n        done: True\r\n        fill_from_func: <cppyy.TemplateProxy at 0x7f99dac5d850>\r\n        builder: <ListOffset<long,awkward::LayoutBuilder::Numpy<int> > at 0x7f9a7e618840>\r\n        cpp_buffers_self: <CppBuffers at 0x7f99dae93400>\r\n        buffers: {\"node0-offsets\": <numpy.ndarray at 0x7f99dac68630>, ...}\r\n        CppBuffers: <CppBuffers_meta at 0x563588186e00>\r\n        ListOffsetBuilder: <ListOffset<long,awkward::LayoutBuilder::Numpy<int> >_meta at 0x5635d2e62820>\r\n        builder_type: \"awkward::LayoutBuilder::ListOffset<long,awkward::LayoutBuilder::Numpy<int> >\"\r\n        cpp_fill_function: <function at 0x7f99daf4b490>\r\n        column_types: {\"Jet_pt\": \"ROOT::VecOps::RVec<Float_t>\", ...}\r\n        result_ptrs: {...}\r\n        length: 15274000\r\n        index: {}\r\n        awkward_type_cols: {}\r\n        form: <ListOffsetForm at 0x7f99dac595d0>\r\n        contents: {\"Jet_pt\": <Array at 0x7f99dac59330>, ...}\r\n        form_str: \"{\"class\": \"ListOffsetArray\", \"offsets\": \"i64\", \"content\":{\"class\": \"NumpyArr...\r\n        list_depth: 2\r\n        maybe_indexed: False\r\n        col: \"LHEPart_pdgId\"\r\n        form_dtype_name: \"int32\"\r\n        item: <pair<const string,unsigned long> at 0x7f99dac42ec0>\r\n        data_type: \"int32_t\"\r\n\r\n```\r\n\r\n\r\n\r\nROOT version    : 6.28\r\nawkward version : 2.3.1\r\npython version  : 3.10.10",
  "closed_at":null,
  "comments":12,
  "created_at":"2023-07-19T20:49:30Z",
  "id":1812707949,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5sC7pt",
  "number":2590,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"ak.from_rdataframe segmentation fault",
  "updated_at":"2024-01-19T22:58:01Z",
  "user":"MDQ6VXNlcjMxMjQ3MDY2"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\n2.3.0\n\n### Description and code to reproduce\n\nThis came out of a pyhep.dev hacking session. We tried to build a simple analysis example: read four-vector information for jets, \"calibrate\" the jet energies (as a function of a nuisance parameter) and then take derivatives of the mean of invariant masses wrt. the nuisance parameter. A reproducer is provided at https://gist.github.com/alexander-held/9ca8eae6ab99572d7a332ab8c1b02beb.\r\n\r\nSwitching to the jax backend (without taking gradients) triggers\r\n```python\r\nTypeError: Unexpected input type for array: <class 'awkward.contents.numpyarray.NumpyArray'>\r\n\r\nThis error occurred while calling\r\n\r\n    numpy.add.__call__(\r\n        <MomentumArray4D [{eta: -3.1967773, ...}, ..., {...}] type='140 * M...'>\r\n        <MomentumArray4D [{eta: 1.2490234, ...}, ..., {...}] type='140 * Mo...'>\r\n    )\r\n```\r\nat the point of four-vector addition. Changing this line to instead return the invariant mass of the first jet triggers another error:\r\n```python\r\nRuntimeError: Cannot differentiate through count_zero\r\n\r\nThis error occurred while calling\r\n\r\n    ak.mean(\r\n        <Array [3.3886719, 6.2890625, ..., 4.1523438] type='140 * float32'>\r\n        axis = None\r\n        keepdims = False\r\n    )\r\n```",
  "closed_at":"2023-08-10T15:25:02Z",
  "comments":1,
  "created_at":"2023-07-26T21:17:53Z",
  "id":1823187781,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5sq6NF",
  "number":2591,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"Four-vector addition with jax backend ",
  "updated_at":"2023-08-10T15:25:02Z",
  "user":"MDQ6VXNlcjQ1MDA5MzU1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Succinctly, `asarray` is less powerful than `to_backend_array()`. It often goes through iterative type discovery, rather than leveraging our internal typed layouts. We should instead be using our internal `to_backend_array()`.",
  "closed_at":"2023-07-28T15:58:03Z",
  "comments":1,
  "created_at":"2023-07-26T21:44:18Z",
  "draft":false,
  "id":1823229177,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5WfGEv",
  "number":2592,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-07-28T15:58:03Z"
  },
  "reactions":{
   "heart":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: use `to_backend_array()` instead of `asarray`",
  "updated_at":"2023-07-28T15:58:04Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nWe don't need this parameter; it is a remnant from the non NEP-18 specific shims.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-07-27T13:48:51Z",
  "id":1824415827,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5svmBT",
  "number":2594,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`copy` argument to `ak.nan_to_num` should be deprecated",
  "updated_at":"2023-07-27T13:48:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"#2593 demonstrates a case where it would be nice for `ak.transform` to be able to error if the user function never terminates.\r\n\r\nThis PR adds an `expect_return_value` argument, which causes `ak.transform` to throw a `RuntimeError` if the user transform is supposed to return a non-None value, but never terminates.",
  "closed_at":"2023-08-04T09:01:43Z",
  "comments":1,
  "created_at":"2023-07-27T13:58:07Z",
  "draft":false,
  "id":1824435938,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5WjKCM",
  "number":2595,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-04T09:01:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for expected termination of transform functions",
  "updated_at":"2023-08-04T09:01:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nAt the PyHEP.dev workshop, it was observed that the axis parameter has the potential to harm readability of an analysis. This follows from the idea that the semantic interpretation of the `axis` parameter requires knowledge of the array structure, which is normally a strong function of the execution history.\r\n\r\nThe notes from the workshop are below:\r\n \r\n> \r\n> Present: Angus, Alex, Ioana, Matthew, Ianna, Jim, Tal, Remco, Jonas, Mason, Clemens, \r\n> \r\n> - We should be able to label / name axes for readability.\r\n>     - Awkward Array can/should add support for named axes, c.f. XArray with dimension names\r\n>     - No need to add labels because they're much more specific to plotting\r\n>     - New function e.g. `array = ak.with_axis_name(array, 0, \"events\")` to permit `ak.sum(array, axis=\"events\")`\r\n> - The `flatten(array[argmax(..., keepdims=True)])` pattern is complex to understand, despite being a *pattern*\r\n>     - We could add an accessor that allows us to force ragged indexing. This permits to have a single-index accessor if needs be, that directly consumes the result of `argmax(..., keepdims=False)`, e.g. `array.at[...]`. We could also have a similar-yet-different `array.select[...]` that accepts a `keepdims=True` positional reducer result, and flattens the result afterwards (we know that `keepdims=True` produces regular dimensions, which can be identified statically). \r\n> - Interest in removing repeated array names `event.foo.x[event.foo.y > 2]` \u2192 `event.foo.x[.y > 2]` (or better)\r\n>     - Could introduce a `this` proxy that refers to array being sliced.\r\n> \r\n> - Tools:\r\n>     - Xarray\r\n>         - Example from user guide: https://docs.xarray.dev/en/stable/user-guide/indexing.html#\r\n>     - Nathan: [JAX also has some (experimental) support for named axes and parallelism](https://jax.readthedocs.io/en/latest/notebooks/xmap_tutorial.html#introducing-and-eliminating-named-axes)\r\n> - Examples\r\n>     - [Alex example from AGC](https://gist.github.com/alexander-held/a9ff4928fe33e8e0c09dd27fbdfd24d9)\r\n>     - [Gordon fantasy rewrite](https://gist.github.com/gordonwatts/87d29b9e1dd13f0958968cd194e7b929) of Alex cell's 3.\r\n\r\nMy current thinking on this, following from the workshop discussion, is that we should add a mechanism for labelling axes with a name, such that this name can later be used in place of the integer value.\r\n\r\n```python\r\nimport awkward as ak\r\n\r\narray = ak.Array([\r\n\t[{'pt': 0.0, ...}],\r\n    ...\r\n])\r\n\r\narray = ak.with_axis_name(array, 0, \"events\")\r\narray = ak.with_axis_name(array, 1, \"particles\")\r\n\r\ntotal_pt = ak.sum(array.pt, axis=\"particles\")\r\n\r\n```\r\n",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-07-27T14:36:08Z",
  "id":1824519334,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5sv_Sm",
  "number":2596,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add support for annotated axis names",
  "updated_at":"2023-07-27T14:36:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\n\nNow that #2545 is already tackling #2468, I feel like a cool feature would be to create a table like [astropy.table.QTable](https://docs.astropy.org/en/stable/api/astropy.table.QTable.html)\r\n\r\nIs this already possible, or it is linked to #1391 and should come after #2545?",
  "closed_at":"2024-01-19T23:10:34Z",
  "comments":7,
  "created_at":"2023-07-28T09:20:01Z",
  "id":1826055726,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5s12Yu",
  "number":2597,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Awkward table",
  "updated_at":"2024-01-20T19:57:19Z",
  "user":"MDQ6VXNlcjE3ODM2NjEw"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\r\n\r\nCurrently awkward implements a number of indexing mechanisms, which form a non-empty subset in common with NumPy. One of the advanced indexing mechanisms involves constructing a _ragged_ array whose structure matches that of the array to be indexed, up to the final dimension of the index. The index must either contain boolean or integer values, alongside `None` values. This advanced _ragged_ indexing acts only for index arrays which are _ragged_.\r\n\r\n\r\n@gordonwatts indicated that the pattern\r\n```python\r\nj_max = ak.argmax(records.pt, keepdims=True)\r\nrecord_max = ak.flatten(records[j_max], axis=-1)\r\n```\r\nis somewhat cryptic. The need for `keepdims` and `ak.flatten` follows from the above rules: to pull out the i-th value of an array, one must build an index of `[i]` (a length-1 list). This is perhaps less clear than a mechanism which obviates the need for `keepdims` and `flatten`. We could introduce an _accessor_ `.at[ix]` that behaves _like_ ragged indexing, *but* explicitly pulls out a single item with the given index from child lists. Under the hood, this may well simply be the above pattern. Usage of this accessor might be:\r\n```python\r\nj_max = ak.argmax(records.pt)\r\nrecord_max = records.at[j_max]\r\n```\r\n\r\n\r\nRelatedly, we once discussed (but I can't find it) the need for a new `.var[ix]` _accessor_ upon arrays. This was motivated by the above rule that ragged indexing _requires_ a partially-ragged layout. For totally-regular arrays, NumPy advanced indexing rules apply instead, making it hard to determine what an operation will do when reading an analysis. A new `.var` accessor that forces ragged indexing would improve readability.\r\n\r\nPersonally I wasn't sure, and still am not, that `.var` is the right solution; for this to benefit analysis, one would probably _always_ want `.var`, indicating that our existing slicing mechanism should just use this rule, breaking NumPy compatibility.\r\n",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-07-28T19:50:41Z",
  "id":1827013297,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5s5gKx",
  "number":2598,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add unmbiguous indexing mechanism(s)",
  "updated_at":"2023-08-02T08:02:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\n2.3.1\n\n### Description and code to reproduce\n\n@jpivarski - as discussed, I'm looking into the issue. Indeed, there is nearly 7x difference between an ArrayBuilder in Numba and a LayoutBuilder in Numba (the tests run twice to account for a \"warm up\"):\r\n```python\r\nimport awkward as ak\r\nimport numba\r\nimport numpy as np\r\n\r\nimport awkward._connect.numba.arrayview\r\nimport awkward.numba.layoutbuilder as lb\r\n\r\nak.numba.register_and_check()\r\n\r\nimport time\r\n\r\nMULTIPLIER = int(10e6)\r\nprint(\"MULTIPLIER\", MULTIPLIER)\r\n\r\ndef test_Numpy_LayoutBuilder():\r\n    @numba.njit\r\n    def f3(x):\r\n        for i in range(MULTIPLIER):\r\n            x.append(1.1)\r\n            x.append(2.2)\r\n            x.append(3.3)\r\n            x.append(4.4)\r\n            x.append(5.5)\r\n\r\n        return x\r\n\r\n    l = lb.Numpy(np.float64)\r\n    b = f3(l)\r\n\r\ndef test_Numpy_ArrayBuilder():\r\n    @numba.njit\r\n    def f4(x):\r\n        for i in range(MULTIPLIER):\r\n            x.real(1.1)\r\n            x.real(2.2)\r\n            x.real(3.3)\r\n            x.real(4.4)\r\n            x.real(5.5)\r\n\r\n        return x\r\n\r\n    a = ak.highlevel.ArrayBuilder()\r\n    b = f4(a)\r\n\r\nfor function in test_Numpy_LayoutBuilder, test_Numpy_ArrayBuilder:\r\n    t1 = time.perf_counter(), time.process_time()\r\n    function()\r\n    t2 = time.perf_counter(), time.process_time()\r\n    print(f\"{function.__name__}()\")\r\n    print(f\" Real time: {t2[0] - t1[0]:.2f} seconds\")\r\n    print(f\" CPU time: {t2[1] - t1[1]:.2f} seconds\")\r\n    print()\r\n\r\n    t1 = time.perf_counter(), time.process_time()\r\n    function()\r\n    t2 = time.perf_counter(), time.process_time()\r\n    print(f\"{function.__name__}()\")\r\n    print(f\" Real time: {t2[0] - t1[0]:.2f} seconds\")\r\n    print(f\" CPU time: {t2[1] - t1[1]:.2f} seconds\")\r\n    print()\r\n\r\n```\r\nto build an array of five elements:\r\n```\r\ntest_Numpy_LayoutBuilder()\r\n Real time: 1.62 seconds\r\n CPU time: 1.49 seconds\r\n\r\ntest_Numpy_LayoutBuilder()\r\n Real time: 0.11 seconds\r\n CPU time: 0.11 seconds\r\n\r\ntest_Numpy_ArrayBuilder()\r\n Real time: 0.04 seconds\r\n CPU time: 0.04 seconds\r\n\r\ntest_Numpy_ArrayBuilder()\r\n Real time: 0.04 seconds\r\n CPU time: 0.04 seconds\r\n```\r\nto build an array of 5x10e6 elements:\r\n```\r\ntest_Numpy_LayoutBuilder()\r\n Real time: 4.87 seconds\r\n CPU time: 4.85 seconds\r\n\r\ntest_Numpy_LayoutBuilder()\r\n Real time: 3.79 seconds\r\n CPU time: 3.77 seconds\r\n\r\ntest_Numpy_ArrayBuilder()\r\n Real time: 0.56 seconds\r\n CPU time: 0.56 seconds\r\n\r\ntest_Numpy_ArrayBuilder()\r\n Real time: 0.57 seconds\r\n CPU time: 0.57 seconds\r\n```",
  "closed_at":null,
  "comments":2,
  "created_at":"2023-07-31T12:22:35Z",
  "id":1829073117,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tBXDd",
  "number":2599,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"LayoutBuilder in Numba is slower than ArrayBuilder in Numba",
  "updated_at":"2023-08-28T19:06:42Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.3.1\n\n### Description and code to reproduce\n\nWhen I run the following code I get this error: `AssertionError: bug in Awkward Array: attempt to get length of a TypeTracerArray`\r\n\r\n```python\r\nimport awkward as ak\r\n\r\na = ak.Array([[1, 2, None]])\r\ntracer = ak.Array(a.layout.to_typetracer())\r\nc = ak.num(tracer)\r\nresult = ak.unflatten(ak.flatten(tracer), c)\r\n```\r\nThe result should be the same as `tracer`.\r\n\r\nI think this is breaking dask-awkward unflatten functionality. I stumbled upon this issue when trying to run this:\r\n```python\r\nimport dask_awkward as dak\r\n\r\na2 = dak.from_awkward(a, 1)\r\ndak.unflatten(dak.flatten(a2), dak.num(a2))[0]\r\n```",
  "closed_at":"2024-01-20T20:35:27Z",
  "comments":2,
  "created_at":"2023-07-31T15:35:26Z",
  "id":1829494422,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tC96W",
  "number":2600,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"AssertionError when unflattening masked array",
  "updated_at":"2024-01-20T20:35:27Z",
  "user":"MDQ6VXNlcjMwMDQxMDcz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\r\n\r\nThis came up in a `coffea` users meeting in the context of identifying particles with specific PDG ids. For generic identification, one may want to find all particles with ids corresponding to some specific values. The `numpy` API provides `np.isin`, which does exactly that for rectilinear arrays.\r\n\r\nOne can work around this via flattening:\r\n\r\n```python\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\na = ak.Array([[1, 3, 5], [3, 7]])\r\n\r\ncounts = ak.num(a)\r\na_flat = ak.flatten(a)\r\nres_flat = np.isin(a_flat, [3, 5])\r\nres = ak.unflatten(res_flat, counts)\r\nprint(res)\r\n```\r\n-> `[[False, True, True], [True, False]]` which is the expected result.\r\n\r\nThis does not generalize well to arbitrarily nested data, which needs to be unflattened at all layers (with counts tracked).\r\n\r\nI do not have a concrete use case where I would need an `ak.isin` right now. As this seems generically useful, I figured I should create an issue (so if somebody comes across another use case they could communicate their need for such a function).",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-07-31T17:17:27Z",
  "id":1829692393,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tDuPp",
  "number":2601,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"awkward equivalent of np.isin",
  "updated_at":"2023-08-02T11:54:50Z",
  "user":"MDQ6VXNlcjQ1MDA5MzU1"
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjc0MDU1MTAy",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nce63bf2\n\n### Description and code to reproduce\n\nThis is partner issue to https://github.com/CoffeaTeam/coffea/issues/874 as perhaps this is more on the side of awkward than coffea. I am trying to combine custom behaviors (defined by coffea) with the jax backend of awkward. The reproducer below results in:\r\n```pytb\r\nAttributeError: module 'jax.numpy' has no attribute '_mass2_kernel'\r\n```\r\nReproducer:\r\n```python\r\nimport awkward as ak\r\nfrom coffea.nanoevents.methods import candidate\r\nimport numpy as np\r\nimport uproot\r\n\r\nak.jax.register_and_check()\r\nak.behavior.update(candidate.behavior)\r\n\r\nttbar_file = \"https://github.com/scikit-hep/scikit-hep-testdata/\"\\\r\n    \"raw/main/src/skhep_testdata/data/nanoAOD_2015_CMS_Open_Data_ttbar.root\"\r\n\r\nwith uproot.open(ttbar_file) as f:\r\n    arr = f[\"Events\"].arrays([\"Electron_pt\", \"Electron_eta\", \"Electron_phi\",\r\n                              \"Electron_mass\", \"Electron_charge\"])\r\n\r\npx = arr.Electron_pt * np.cos(arr.Electron_phi)\r\npy = arr.Electron_pt * np.sin(arr.Electron_phi)\r\npz = arr.Electron_pt * np.sinh(arr.Electron_eta)\r\nE = np.sqrt(arr.Electron_mass**2 + px**2 + py**2 + pz**2)\r\n\r\nevtfilter = ak.num(arr[\"Electron_pt\"]) >= 2\r\n\r\nels = ak.zip({\"pt\": arr.Electron_pt, \"eta\": arr.Electron_eta, \"phi\": arr.Electron_phi,\r\n              \"energy\": E, \"charge\": arr.Electron_charge}, with_name=\"PtEtaPhiECandidate\")[evtfilter]\r\nels = ak.to_backend(els, \"jax\")\r\n\r\n(els[:, 0] + els[:, 1]).mass\r\n```\r\n\r\nUsing the `\"Momentum4D\"` behavior from `vector` (after `vector.register_awkward()`) works. Skipping the backend conversion to jax also makes this work.\r\n\r\n<details>\r\n    <summary>Full trace</summary>\r\n\r\n    ---------------------------------------------------------------------------\r\n    AttributeError                            Traceback (most recent call last)\r\n    Cell In[1], line 32\r\n        28 els = ak.zip({\"pt\": arr.Electron_pt, \"eta\": arr.Electron_eta, \"phi\": arr.Electron_phi,\r\n        29               \"energy\": E, \"charge\": arr.Electron_charge}, with_name=\"PtEtaPhiECandidate\")[evtfilter]\r\n        30 els = ak.to_backend(els, \"jax\")\r\n    ---> 32 (els[:, 0] + els[:, 1]).mass\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/highlevel.py:1097, in Array.__getattr__(self, where)\r\n    1061 \"\"\"\r\n    1062 Args:\r\n    1063     where (str): Attribute name to lookup\r\n    (...)\r\n    1094 *assigned* as attributes. See #ak.Array.__setitem__ for more.\r\n    1095 \"\"\"\r\n    1096 if hasattr(type(self), where):\r\n    -> 1097     return super().__getattribute__(where)\r\n    1098 else:\r\n    1099     if where in self._layout.fields:\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/coffea/nanoevents/methods/vector.py:531, in LorentzVector.mass(self)\r\n        525 @property\r\n        526 def mass(self):\r\n        527     r\"\"\"Invariant mass (+, -, -, -)\r\n        528 \r\n        529     :math:`\\sqrt{t^2-x^2-y^2-z^2}`\r\n        530     \"\"\"\r\n    --> 531     return numpy.sqrt(self.mass2)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/highlevel.py:1097, in Array.__getattr__(self, where)\r\n    1061 \"\"\"\r\n    1062 Args:\r\n    1063     where (str): Attribute name to lookup\r\n    (...)\r\n    1094 *assigned* as attributes. See #ak.Array.__setitem__ for more.\r\n    1095 \"\"\"\r\n    1096 if hasattr(type(self), where):\r\n    -> 1097     return super().__getattribute__(where)\r\n    1098 else:\r\n    1099     if where in self._layout.fields:\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/coffea/nanoevents/methods/vector.py:523, in LorentzVector.mass2(self)\r\n        520 @property\r\n        521 def mass2(self):\r\n        522     \"\"\"Squared `mass`\"\"\"\r\n    --> 523     return _mass2_kernel(self.t, self.x, self.y, self.z)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/highlevel.py:1349, in Array.__array_ufunc__(self, ufunc, method, *inputs, **kwargs)\r\n    1347 name = f\"{type(ufunc).__module__}.{ufunc.__name__}.{method!s}\"\r\n    1348 with ak._errors.OperationErrorContext(name, inputs, kwargs):\r\n    -> 1349     return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_connect/numpy.py:459, in array_ufunc(ufunc, method, inputs, kwargs)\r\n        450     out = ak._do.recursively_apply(\r\n        451         inputs[where],\r\n        452         unary_action,\r\n    (...)\r\n        455         allow_records=False,\r\n        456     )\r\n        458 else:\r\n    --> 459     out = ak._broadcasting.broadcast_and_apply(\r\n        460         inputs, action, behavior, allow_records=False, function_name=ufunc.__name__\r\n        461     )\r\n        462     assert isinstance(out, tuple) and len(out) == 1\r\n        463     out = out[0]\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_broadcasting.py:1022, in broadcast_and_apply(inputs, action, behavior, depth_context, lateral_context, allow_records, left_broadcast, right_broadcast, numpy_to_regular, regular_to_jagged, function_name, broadcast_parameters_rule)\r\n    1020 backend = backend_of(*inputs)\r\n    1021 isscalar = []\r\n    -> 1022 out = apply_step(\r\n    1023     backend,\r\n    1024     broadcast_pack(inputs, isscalar),\r\n    1025     action,\r\n    1026     0,\r\n    1027     depth_context,\r\n    1028     lateral_context,\r\n    1029     behavior,\r\n    1030     {\r\n    1031         \"allow_records\": allow_records,\r\n    1032         \"left_broadcast\": left_broadcast,\r\n    1033         \"right_broadcast\": right_broadcast,\r\n    1034         \"numpy_to_regular\": numpy_to_regular,\r\n    1035         \"regular_to_jagged\": regular_to_jagged,\r\n    1036         \"function_name\": function_name,\r\n    1037         \"broadcast_parameters_rule\": broadcast_parameters_rule,\r\n    1038     },\r\n    1039 )\r\n    1040 assert isinstance(out, tuple)\r\n    1041 return tuple(broadcast_unpack(x, isscalar, backend) for x in out)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_broadcasting.py:1001, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, behavior, options)\r\n        999     return result\r\n    1000 elif result is None:\r\n    -> 1001     return continuation()\r\n    1002 else:\r\n    1003     raise AssertionError(result)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_broadcasting.py:974, in apply_step.<locals>.continuation()\r\n        972 # Any non-string list-types?\r\n        973 elif any(x.is_list and not is_string_like(x) for x in contents):\r\n    --> 974     return broadcast_any_list()\r\n        976 # Any RecordArrays?\r\n        977 elif any(x.is_record for x in contents):\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_broadcasting.py:622, in apply_step.<locals>.broadcast_any_list()\r\n        619         nextinputs.append(x)\r\n        620         nextparameters.append(NO_PARAMETERS)\r\n    --> 622 outcontent = apply_step(\r\n        623     backend,\r\n        624     nextinputs,\r\n        625     action,\r\n        626     depth + 1,\r\n        627     copy.copy(depth_context),\r\n        628     lateral_context,\r\n        629     behavior,\r\n        630     options,\r\n        631 )\r\n        632 assert isinstance(outcontent, tuple)\r\n        633 parameters = parameters_factory(nextparameters, len(outcontent))\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_broadcasting.py:987, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, behavior, options)\r\n        980     else:\r\n        981         raise ValueError(\r\n        982             \"cannot broadcast: {}{}\".format(\r\n        983                 \", \".join(repr(type(x)) for x in inputs), in_function(options)\r\n        984             )\r\n        985         )\r\n    --> 987 result = action(\r\n        988     inputs,\r\n        989     depth=depth,\r\n        990     depth_context=depth_context,\r\n        991     lateral_context=lateral_context,\r\n        992     continuation=continuation,\r\n        993     behavior=behavior,\r\n        994     backend=backend,\r\n        995     options=options,\r\n        996 )\r\n        998 if isinstance(result, tuple) and all(isinstance(x, Content) for x in result):\r\n        999     return result\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_connect/numpy.py:400, in array_ufunc.<locals>.action(inputs, **ignore)\r\n        397         args.append(x)\r\n        399 # Give backend a chance to change the ufunc implementation\r\n    --> 400 impl = backend.prepare_ufunc(ufunc)\r\n        402 # Invoke ufunc\r\n        403 result = impl(*args, **kwargs)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_backends/jax.py:50, in JaxBackend.prepare_ufunc(self, ufunc)\r\n        47 def prepare_ufunc(self, ufunc: UfuncLike) -> UfuncLike:\r\n        48     from awkward._connect.jax import get_jax_ufunc\r\n    ---> 50     return get_jax_ufunc(ufunc)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/awkward/_connect/jax/__init__.py:8, in get_jax_ufunc(ufunc)\r\n        7 def get_jax_ufunc(ufunc):\r\n    ----> 8     return getattr(jax.numpy, ufunc.__name__)\r\n\r\n    File ~/mambaforge/envs/agc-ad/lib/python3.11/site-packages/jax/_src/deprecations.py:53, in deprecation_getattr.<locals>.getattr(name)\r\n        51   warnings.warn(message, DeprecationWarning, stacklevel=2)\r\n        52   return fn\r\n    ---> 53 raise AttributeError(f\"module {module!r} has no attribute {name!r}\")\r\n\r\n    AttributeError: module 'jax.numpy' has no attribute '_mass2_kernel'\r\n\r\n    This error occurred while calling\r\n\r\n        numpy._mass2_kernel.__call__(\r\n            <Array [192.54099, 132.60043, ..., 142.34727] type='5 * float32'>\r\n            <Array [5.5301285, -46.949707, ..., -58.96562] type='5 * float32'>\r\n            <Array [-70.93436, -12.467135, ..., -31.510773] type='5 * float32'>\r\n            <Array [156.38907, -75.47587, ..., -115.080734] type='5 * float32'>\r\n        )\r\n</details>",
  "closed_at":null,
  "comments":5,
  "created_at":"2023-08-02T15:42:14Z",
  "id":1833436629,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tSAXV",
  "number":2603,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Custom behaviors plus jax leading to lookup in wrong spot",
  "updated_at":"2024-02-13T14:06:43Z",
  "user":"MDQ6VXNlcjQ1MDA5MzU1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This will make @zbhatti's life easier.\r\n\r\nNow it's possible to move arrays all the way from Awkward v0 to v1 to v2, although they need to be pickled and unpickled in each step.\r\n\r\n1. In an environment with Awkward 0.x, pickle the array.\r\n2. In an environment (possibly the same) with the `awkward0` library and `awkward<2` (v1), use pickle to load it as an `awkward0` array, then use the [ak.from_awkward0 (v1)](https://awkward-array.org/doc/1.10/_auto/ak.from_awkward0.html) function to convert it into a v1 array.\r\n3. In the same environment, save the v1 array with pickle.\r\n4. In a different environment with `awkward>=2` (v2), use pickle to load it as a v2 array.\r\n\r\nThis PR makes the last step possible.\r\n\r\n@agoose77, we had talked about the possibility of doing this, and weren't sure if it was a good idea to reintroduce `ak._ext`. In v1, that was a compiled extension with all the C++ code in it. In this PR, it's an ordinary Python module providing synonyms for the `Form` classes, since this is where pickle will look for them. The downside of this is that `_ext` now has a very different function, and it's not in any way \"external.\" However, it's also hidden with an underscore.\r\n\r\nThe second part to get this to work is for all of the `Form` subclasses to be unpicklable from their v1 formats _and_ their v2 formats. Fortunately, the v1 formats are always tuples and the v2 formats are always dicts, so they're easily distinguished.\r\n\r\nThis PR adds a `__setstate__` to each `Form` subclass (no `__getstate__`; we want the default v2 behavior of returning `self.__dict__`). If it's a tuple (v1), each subclass has to follow a different prescription to unpickle it, as all of the v1 `Form` subclasses were pickled in different ways.\r\n\r\nIf a v1 array had multiple partitions, only the first partition will be loaded (with no error). Something ought to be done about that; an error message at least (probably in `ak.Array.__setstate__`). A v1 array can't be pickled as virtual because it gets [ak.packed (v1)](https://awkward-array.org/doc/1.10/_auto/ak.packed.html).\r\n\r\nIn this PR, only the `Form` subclasses were modified. Nothing had to be done other than that (in `ak.from_buffers` or `ak.Array.__setstate__`).\r\n\r\nThere are tests for array types that aren't eliminated by [ak.packed (v1)](https://awkward-array.org/doc/1.10/_auto/ak.packed.html). The untestable ones are simple extrapolations from the tested ones. It'll be fine!",
  "closed_at":"2023-08-07T21:42:33Z",
  "comments":6,
  "created_at":"2023-08-03T02:36:20Z",
  "draft":false,
  "id":1834173015,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XEBnI",
  "number":2604,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-07T21:42:33Z"
  },
  "reactions":{
   "heart":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: unpickle arrays made in Awkward v1 (as v2).",
  "updated_at":"2023-08-07T21:42:34Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.3.1\n\n### Description and code to reproduce\n\nOn termux 0.118.0, tried\r\n```\r\nbash$ pip install awkward\r\n```\r\nEverything seems fine. In a python REPL:\r\n```\r\nimport awkward\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/data/data/com.termux/files/usr/lib/python3.11/site-packages/awkward/__init__.py\", line 31, in <module>\r\n    import awkward.jax\r\n  File \"/data/data/com.termux/files/usr/lib/python3.11/site-packages/awkward/jax.py\", line 8, in <module>\r\n    from awkward import highlevel\r\n  File \"/data/data/com.termux/files/usr/lib/python3.11/site-packages/awkward/highlevel.py\", line 15, in <module>\r\n    from awkward_cpp.lib import _ext\r\nImportError: dlopen failed: cannot locate symbol \"PyExc_ImportError\" referenced by \"/data/data/com.termux/files/usr/lib/python3.11/site-packages/awkward_cpp/lib/_ext.cpython-311.so\"...\r\n```\r\nInvestigating the library:\r\n```\r\nbash$ patchelf --print-needed /data/data/com.termux/files/usr/lib/python3.11/site-packages/awkward_cpp/lib/_ext.cpython-311.so\r\nlibdl.so\r\nlibc++_shared.so\r\nlibm.so\r\nlibc.so\r\n```\r\nThen this will fix the problem:\r\n```\r\nbash$ patchelf --add-needed libpython3.11.so.1.0 /data/data/com.termux/files/usr/lib/python3.11/site-packages/awkward_cpp/lib/_ext.cpython-311.so\r\n```\r\n...and awkward works fine.\r\n",
  "closed_at":"2023-11-07T21:09:00Z",
  "comments":5,
  "created_at":"2023-08-03T09:38:10Z",
  "id":1834667854,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tWs9O",
  "number":2605,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Missing symbol on import on Termux (Android)",
  "updated_at":"2023-11-07T21:09:00Z",
  "user":"MDQ6VXNlcjY0ODAxNjA="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjU1MTAxODI1",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The following changes are made -\r\n- Some methods were causing multiple definitions when including LayoutBuilder in another C++ header file so inline is added to `default_options`, `type_to_name`, and `type_to_numpy_like`.\r\n- preprocessor `#define` is used as a temporary workaround in place of `default_options` as inline variables are supported starting from C++17. Once the requirements are updated to C++17, `default_options` can be inlined.\r\n- Also, two of the tests in `test_1494-layout-builder.cpp` which included the EmptyArray case were failing due to missing parameter string in the form, so that has been fixed too by removing parameters from the `LayoutBuilder` code.",
  "closed_at":"2023-08-08T12:42:21Z",
  "comments":6,
  "created_at":"2023-08-03T13:39:24Z",
  "draft":false,
  "id":1835088163,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XHJlc",
  "number":2606,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-08T12:42:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add inline to prevent multiple definitions",
  "updated_at":"2023-08-08T12:42:22Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.3.1\n\n### Description and code to reproduce\n\n```python\r\nimport awkward as ak\r\n\r\n\r\nx = ak.to_regular(ak.Array([[1.]])[[[False]]])\r\nt = ak.Array(x.layout.to_typetracer(forget_length=True))\r\nak.sum(t, axis=1)\r\n```\r\nThe last line raises an error: `TypeError: cannot compare unknown lengths against known values`.\r\nIt works fine when x is not regular, meaning `x = ak.Array([[1.]])[[[False]]]`.\r\nIn my case, this breaks dask-awkward functionality when trying to sum over regular dask-awkward arrays.",
  "closed_at":"2023-08-11T16:58:00Z",
  "comments":1,
  "created_at":"2023-08-03T14:08:11Z",
  "id":1835142199,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tYgw3",
  "number":2607,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"TypeError when summing regular array of unknown length",
  "updated_at":"2023-08-11T16:58:00Z",
  "user":"MDQ6VXNlcjMwMDQxMDcz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"The reason is because we use `std::optional` and `std::variant` in header-only code that (currently) only gets compiled in ROOT/RDataFrame (and these are in tests), so we're _sometimes_ requiring C++17, so we should just be consistent about it, to avoid confusing people. Also, this is a good first step toward migrating from pybind11 to nanobind (which requires C++17).\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/ce63bf2b4afebd93e5b1b67d9985d66b51d37bc5/awkward-cpp/CMakeLists.txt#L53\r\n\r\nAlso need to set the minimum cibuildwheel MacOS version to 10.12. Maybe 10.14 (need to check).",
  "closed_at":"2023-09-04T17:27:08Z",
  "comments":1,
  "created_at":"2023-08-03T15:31:51Z",
  "id":1835291213,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tZFJN",
  "number":2608,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Increase the minimum C++ version to C++17",
  "updated_at":"2023-09-04T17:27:08Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.3.1\n\n### Description and code to reproduce\n\n```python\r\nimport awkward as ak\r\n\r\nx = ak.Array([[1]])\r\nresult = ak.any(x, axis=1, keepdims=True)\r\n```\r\nThe second axis of the results should be variable-length, because the second axis of `x` is also variable-length. However, the result is fully regular. I observe the same with `ak.sum` (among others). This did not happen in awkward version 1.10.3.",
  "closed_at":"2023-08-04T13:46:19Z",
  "comments":2,
  "created_at":"2023-08-03T15:36:30Z",
  "id":1835298711,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tZG-X",
  "number":2609,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Reducers (sum/any/all) convert axis to regular axis with `keepdims=True`",
  "updated_at":"2023-08-04T13:46:19Z",
  "user":"MDQ6VXNlcjMwMDQxMDcz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"@jrueb should test this to find out if it's the only blocker, or if there are other (related?) errors down the line.",
  "closed_at":"2023-08-11T16:57:58Z",
  "comments":4,
  "created_at":"2023-08-03T16:35:01Z",
  "draft":false,
  "id":1835385584,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XIJVU",
  "number":2610,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-11T16:57:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `assert nextlen == 0` in reducer should also allow `unknown_length`",
  "updated_at":"2023-08-11T16:57:59Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nNow that we have a subset of custom error types, we should export them so that users can catch them.",
  "closed_at":"2023-08-07T14:40:47Z",
  "comments":0,
  "created_at":"2023-08-03T16:54:24Z",
  "id":1835414484,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tZjPU",
  "number":2611,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Errors should be exported to public namespace",
  "updated_at":"2023-08-07T14:40:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-08-04T08:52:05Z",
  "comments":1,
  "created_at":"2023-08-04T08:39:48Z",
  "draft":false,
  "id":1836325461,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XLN50",
  "number":2612,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-04T08:52:05Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `artefacts` \u2192 `artifacts` in `pyproject.toml`",
  "updated_at":"2023-08-04T08:52:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2611\r\n\r\nNow we have `ak._errors` and `ak._errors`. This is unfortunate. The constraints I'm operating under are:\r\n- public symbols should live in public modules\r\n- private symbols should preferably live in private modules\r\n\r\nThere are enough internal symbols (deprecation, error handling) that we don't want to put these inside `ak.errors` in my opinion, hence the two modules.\r\n\r\nI'm open to suggestions on how to structure this differently @jpivarski.",
  "closed_at":"2023-08-07T14:40:46Z",
  "comments":1,
  "created_at":"2023-08-04T10:59:03Z",
  "draft":false,
  "id":1836527504,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XL4_C",
  "number":2613,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-07T14:40:46Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: export error classes",
  "updated_at":"2023-08-07T14:40:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nSee description.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-08-04T15:37:48Z",
  "id":1836969287,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tfe1H",
  "number":2614,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Ensure that awkward-cpp is up-to-date at runtime",
  "updated_at":"2024-01-19T23:19:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nWe should upload and announce the wheels that are built in a PR. This would make testing a lot simpler for third party users, e.g.\r\n\r\n---\r\n\r\nThis PR build the following wheels:\r\n[`awkward`]()\r\n[`awkward-cpp`]()\r\n\r\nTo install these together, run the following command\r\n```python\r\npip install --no-deps --force-reinstall https://... https://...\r\n```\r\n\r\nThis would need to be more helpful w.r.t. OS & Python versions.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-08-04T15:44:23Z",
  "id":1836977758,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tfg5e",
  "number":2615,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Announce built wheels in PR branches",
  "updated_at":"2023-08-04T15:44:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This PR adds support for vectorised string operations using PyArrow's `pyarrow.compute` module.\r\nIt implements all of the listed [string predicates](https://arrow.apache.org/docs/python/api/compute.html#string-predicates), [string transforms](https://arrow.apache.org/docs/python/api/compute.html#string-transforms), [string padding](https://arrow.apache.org/docs/python/api/compute.html#string-padding), [string trimming](https://arrow.apache.org/docs/python/api/compute.html#string-trimming), [string splitting](https://arrow.apache.org/docs/python/api/compute.html#string-splitting), [string component extraction](https://arrow.apache.org/docs/python/api/compute.html#string-component-extraction), [string joining](https://arrow.apache.org/docs/python/api/compute.html#string-joining), [string slicing](https://arrow.apache.org/docs/python/api/compute.html#string-slicing), and [string containment tests](https://arrow.apache.org/docs/python/api/compute.html#containment-tests).\r\n\r\n### String predicates\r\n\r\n- [X] [is_alnum](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_alnum.html) Classify strings as alphanumeric.\r\n- [x] [is_alpha](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_alpha.html) Classify strings as alphabetic.\r\n- [x] [is_decimal](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_decimal.html) Classify strings as decimal.\r\n- [x] [is_digit](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_digit.html) Classify strings as digits.\r\n- [x] [is_lower](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_lower.html) Classify strings as lowercase.\r\n- [x] [is_numeric](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_numeric.html) Classify strings as numeric.\r\n- [x] [is_printable](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_printable.html) Classify strings as printable.\r\n- [x] [is_space](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_space.html) Classify strings as whitespace.\r\n- [x] [is_upper](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_upper.html) Classify strings as uppercase.\r\n- [X] [is_title](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_title.html) Classify strings as titlecase.\r\n- [x] [is_ascii](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_is_ascii.html) Classify strings as ASCII.\r\n\r\n### String transforms\r\n\r\n- [x] [capitalize](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_capitalize.html) Capitalize the first character of input.\r\n- [x] [length](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_length.html) Compute UTF8 string lengths.\r\n- [x] [lower](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_lower.html) Transform input to lowercase.\r\n- [x] [swapcase](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_swapcase.html) Transform input lowercase characters to uppercase and uppercase characters to lowercase.\r\n- [x] [title](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_title.html) Titlecase each word of input.\r\n- [x] [upper](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_upper.html) Transform input to uppercase.\r\n- [x] [repeat](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_repeat.html) Repeat a binary string.\r\n- [x] [replace_slice](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_replace_slice.html) Replace a slice of a string.\r\n- [x] [reverse](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_reverse.html) Reverse input.\r\n- [x] [replace_substring](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_replace_substring.html) Replace matching non-overlapping substrings with replacement.\r\n- [x] [replace_substring_regex](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_replace_substring_regex.html) Replace matching non-overlapping substrings with replacement.\r\n\r\n### String padding\r\n\r\n- [x] [center](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_center.html) Center strings by padding with a given character.\r\n- [x] [lpad](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_lpad.html) Right-align strings by padding with a given character.\r\n- [x] [rpad](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_rpad.html) Left-align strings by padding with a given character.\r\n\r\n### String trimming\r\n\r\n- [x] [ltrim](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_ltrim.html) Trim leading characters.\r\n- [x] [ltrim_whitespace](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_ltrim_whitespace.html) Trim leading whitespace characters.\r\n- [x] [rtrim](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_rtrim.html) Trim trailing characters.\r\n- [x] [rtrim_whitespace](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_rtrim_whitespace.html) Trim trailing whitespace characters.\r\n- [x] [trim](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_trim.html) Trim leading and trailing characters.\r\n- [x] [trim_whitespace](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_trim_whitespace.html) Trim leading and trailing whitespace characters.\r\n\r\n### String splitting\r\n\r\n- [x] [split_pattern](https://arrow.apache.org/docs/python/generated/pyarrow.compute.split_pattern.html) Split string according to separator.\r\n- [x] [split_whitespace](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ascii_split_whitespace.html) Split string according to any ASCII whitespace.\r\n- [x] [split_pattern_regex](https://arrow.apache.org/docs/python/generated/pyarrow.compute.split_pattern_regex.html) Split string according to regex pattern.\r\n\r\n### String component extraction\r\n\r\n- [x] [extract_regex](https://arrow.apache.org/docs/python/generated/pyarrow.compute.extract_regex.html) Extract substrings captured by a regex pattern.\r\n\r\n### String joining\r\n\r\n- [x] [join](https://arrow.apache.org/docs/python/generated/pyarrow.compute.binary_join.html) Join a list of strings together with a separator.\r\n- [x] [join_element_wise](https://arrow.apache.org/docs/python/generated/pyarrow.compute.binary_join_element_wise.html) Join string arguments together, with the last argument as separator.\r\n\r\n### String slicing\r\n\r\n- [x] [slice](https://arrow.apache.org/docs/python/generated/pyarrow.compute.utf8_slice_codeunits.html) Slice string.\r\n\r\n### Containment tests\r\n\r\n- [x] [count_substring](https://arrow.apache.org/docs/python/generated/pyarrow.compute.count_substring.html) Count occurrences of substring.\r\n- [x] [count_substring_regex](https://arrow.apache.org/docs/python/generated/pyarrow.compute.count_substring_regex.html) Count occurrences of substring.\r\n- [x] [ends_with](https://arrow.apache.org/docs/python/generated/pyarrow.compute.ends_with.html) Check if strings end with a literal pattern.\r\n- [x] [starts_with](https://arrow.apache.org/docs/python/generated/pyarrow.compute.starts_with.html) Check if strings start with a literal pattern.\r\n- [x] [find_substring](https://arrow.apache.org/docs/python/generated/pyarrow.compute.find_substring.html) Find first occurrence of substring.\r\n- [x] [find_substring_regex](https://arrow.apache.org/docs/python/generated/pyarrow.compute.find_substring_regex.html) Find location of first match of regex pattern.\r\n- [x] [index_in](https://arrow.apache.org/docs/python/generated/pyarrow.compute.index_in.html) Return index of each element in a set of values.\r\n- [x] [is_in](https://arrow.apache.org/docs/python/generated/pyarrow.compute.is_in.html) Find each element in a set of values.\r\n- [x] [match_like](https://arrow.apache.org/docs/python/generated/pyarrow.compute.match_like.html) Match strings against SQL-style LIKE pattern.\r\n- [x] [match_substring](https://arrow.apache.org/docs/python/generated/pyarrow.compute.match_substring.html) Match strings against literal pattern.\r\n- [x] [match_substring_regex](https://arrow.apache.org/docs/python/generated/pyarrow.compute.match_substring_regex.html) Match strings against regex pattern.\r\n",
  "closed_at":"2023-08-08T18:00:24Z",
  "comments":17,
  "created_at":"2023-08-04T21:38:02Z",
  "draft":false,
  "id":1837372587,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XOxqW",
  "number":2616,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-08T18:00:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: use pyarrow for string functions",
  "updated_at":"2023-08-09T19:17:39Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"In https://github.com/pydata/numexpr/commit/21ff376a0853aff6aea63343c6010d6434917319, `frame_depth` was changed to `_frame_depth`. We didn't need to set it, anyway, since we were selecting its default value. It came from code copied directly from NumExpr itself.",
  "closed_at":"2023-08-07T18:42:27Z",
  "comments":1,
  "created_at":"2023-08-07T15:38:30Z",
  "draft":false,
  "id":1839740581,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XWb4i",
  "number":2617,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-07T18:42:27Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: adjust for numexpr 2.8.5, which hid getContext's frame_depth argument",
  "updated_at":"2023-08-07T18:42:28Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjcwNDQxNjQx",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\n\nIt would be another lossless disk format for us, and faster than Parquet, especially for memory-mapped, uncompressed, local files.\r\n\r\nWe use [ParquetWriter](https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetWriter.html) and [ParquetFile](https://arrow.apache.org/docs/python/generated/pyarrow.parquet.ParquetFile.html) for low-level access to writing and reading Parquet (_not_ the Dataset interface).\r\n\r\nI hope there's something similar for Feather, but the documentation only lists [write_feather](https://arrow.apache.org/docs/python/generated/pyarrow.feather.write_feather.html) and [read_table](https://arrow.apache.org/docs/python/generated/pyarrow.feather.read_table.html) (`read_feather` returns a Pandas DataFrame!). That won't let us see the metadata and selectively read what we want (selecting row groups and/or columns), but if needed, we could give up on those features.",
  "closed_at":"2023-09-19T03:12:23Z",
  "comments":1,
  "created_at":"2023-08-07T17:59:17Z",
  "id":1839966518,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tq6k2",
  "number":2618,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.to_feather/ak.from_feather in analogy with ak.to_parquet/ak.from_parquet",
  "updated_at":"2023-09-19T03:12:23Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.281 \u2192 v0.0.282](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.281...v0.0.282)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-08-08T08:28:34Z",
  "comments":1,
  "created_at":"2023-08-08T03:11:36Z",
  "draft":false,
  "id":1840487171,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XY9rN",
  "number":2619,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-08T08:28:34Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-08-08T08:28:35Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This paves the way for #2616 to override the module for `ak.str` operations",
  "closed_at":"2023-08-08T10:25:08Z",
  "comments":2,
  "created_at":"2023-08-08T10:12:58Z",
  "draft":false,
  "id":1841008789,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XauUC",
  "number":2620,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-08T10:25:08Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: add new `module` and `name` arguments to `high_level_function` decorator",
  "updated_at":"2023-08-08T10:25:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjE4NTI0NDc=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Which documentation?\n\nDocumentation website\n\n### What needs to be documented?\n\nThe public `ak.typetracer` module is not yet exposed in the documentation.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-08-08T12:41:50Z",
  "id":1841237087,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5tvwxf",
  "number":2621,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Expose `ak.typetracer` in API reference",
  "updated_at":"2024-01-19T23:20:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds an initial implementation of the https://awkward-array.org/doc/main/user-guide/how-to-create-unflatten-group.html tutorial page. \r\n\r\nIt's a hybrid user-guide and tutorial, following from the premise that we don't have enough resources to do both.",
  "closed_at":"2023-08-08T14:54:01Z",
  "comments":1,
  "created_at":"2023-08-08T14:00:55Z",
  "draft":false,
  "id":1841383601,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xb_qj",
  "number":2622,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-08T14:54:01Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: add guide on unflattening and grouping",
  "updated_at":"2023-08-08T14:54:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The `optiontype_outside_record` flag in `ak.zip` should permit lifting the option from a single record field to the outside of the record. However, with strings this does not happen; we test the wrong depth.",
  "closed_at":"2023-08-09T13:49:35Z",
  "comments":1,
  "created_at":"2023-08-09T10:14:02Z",
  "draft":false,
  "id":1842917728,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XhOkO",
  "number":2623,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-09T13:49:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support lists of strings in `ak.zip` with `optiontype_outside_record=True`",
  "updated_at":"2023-08-09T13:49:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nWe should implement a kernel that converts strings to UTF-8 and pads them such that NumPy can create a view over the array.",
  "closed_at":"2023-08-11T12:11:42Z",
  "comments":0,
  "created_at":"2023-08-09T16:15:27Z",
  "id":1843608977,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t4z2R",
  "number":2624,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`to_numpy` uses `to_list` for strings",
  "updated_at":"2023-08-11T12:11:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\n@jpivarski and I proposed (in a meeting) restricting this function to string-types only, and then using PyArrow's dictionary encoding (exposed via `ak.str`). \r\n\r\nI'm now thinking we should instead limit `to_categorical` to _primitive_ types (not just strings), and implement another kernel. C++ 17's `std::string_view` would be useful for this kernel, see #2608. My rationale for widening to non-string types is that it's easy enough to do so. My rationale for implementing a kernel is that I want to support categorical strings in pyodide, which doesn't support Arrow.",
  "closed_at":"2023-08-09T21:45:41Z",
  "comments":4,
  "created_at":"2023-08-09T16:48:23Z",
  "id":1843655706,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t4_Qa",
  "number":2625,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`to_categorical` should not use `to_list`",
  "updated_at":"2023-08-09T21:45:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nIt may prove useful for dask-aware analyses to use a non-broadcasting variant of `zip` that an optimiser can rewrite in the trivial case.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-08-09T16:49:38Z",
  "id":1843657359,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t4_qP",
  "number":2626,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add `broadcast=True` argument to `ak.zip`",
  "updated_at":"2024-01-19T23:28:15Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nWe should implement a trivial on-disk format that is streamable and effectively `ak.to_buffers`.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-08-09T16:50:22Z",
  "id":1843658312,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t4_5I",
  "number":2627,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add trivial zip-based serialisation format",
  "updated_at":"2024-01-19T23:34:09Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThere are two classes of operation that lead to `touch_shape` on a buffer:\r\n- Sanity checks that could be omitted\r\n- Concrete users of array lengths\r\n\r\nIf we eliminate the former for Dask cases, we still have a subset of cases (probably the majority) that need buffer lengths. We should use the touching information to figure out which offsets need to be loaded such that `from_buffers` produces valid lengths where needed. If a shape item is not needed, the buffer should be given a sensible placeholder value, e.g. `1` for offsets, `0` for masks, etc.\r\n",
  "closed_at":"2023-11-07T21:07:13Z",
  "comments":1,
  "created_at":"2023-08-09T16:52:56Z",
  "id":1843662010,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t5Ay6",
  "number":2628,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Re-think placeholder arrays with unknown lengths",
  "updated_at":"2023-11-07T21:07:14Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.14.1 to 2.15.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.15.0</h2>\n<ul>\n<li>\ud83c\udf1f CPython 3.12 wheels are now built by default - without the CIBW_PRERELEASE_PYTHONS flag. It's time to build and upload these wheels to PyPI! This release includes CPython 3.12.0rc1, which is guaranteed to be ABI compatible with the final release. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1565\">#1565</a>)</li>\n<li>\u2728 Adds musllinux_1_2 support - this allows packagers to build for musl-based Linux distributions on a more recent Alpine image, and a newer musl libc. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1561\">#1561</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.15.0</h3>\n<p><em>8 August 2023</em></p>\n<ul>\n<li>\ud83c\udf1f CPython 3.12 wheels are now built by default - without the CIBW_PRERELEASE_PYTHONS flag. It's time to build and upload these wheels to PyPI! This release includes CPython 3.12.0rc1, which is guaranteed to be ABI compatible with the final release. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1565\">#1565</a>)</li>\n<li>\u2728 Adds musllinux_1_2 support - this allows packagers to build for musl-based Linux distributions on a more recent Alpine image, and a newer musl libc. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1561\">#1561</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/39a63b5912f086dd459cf6fcb13dcdd3fe3bc24d\"><code>39a63b5</code></a> Bump version: v2.15.0</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/47e5d3c2cdee9d5324b6abe18c380c5ee33fd8f9\"><code>47e5d3c</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1565\">#1565</a> from henryiii/henryiii/feat/312rc</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/a63e11a1c40bf45810a29b0837a72312202cb00b\"><code>a63e11a</code></a> feat: build using 3.12 RC by default</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/df94b5db6769eb8c3abb164caa9ab84c763570da\"><code>df94b5d</code></a> [Bot] Update dependencies (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1553\">#1553</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/36049d86a2e21d74382d84d7a423e20e49a2ca91\"><code>36049d8</code></a> feature: add musllinux_1_2 support (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1561\">#1561</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/229f8570b497b5fa4a201f7dd28c4f52c104218e\"><code>229f857</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1562\">#1562</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/5b32ee7d7bcd9433f559d8b43e9f9a180288c227\"><code>5b32ee7</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1559\">#1559</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/3f3bd9cff62eb311ed99891cc65132731c0a1c6f\"><code>3f3bd9c</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1554\">#1554</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/8df6d59adf7f9c7876ece95d0f908b53e2014ff2\"><code>8df6d59</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/4135c0a01dc11910ce118f58acc7caf4ac5c524a\"><code>4135c0a</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1546\">#1546</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.14.1...v2.15.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.14.1&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-08-11T16:27:56Z",
  "comments":1,
  "created_at":"2023-08-09T17:10:52Z",
  "draft":false,
  "id":1843693852,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xj3O3",
  "number":2629,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-11T16:27:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.14.1 to 2.15.0",
  "updated_at":"2023-08-11T16:27:57Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This function is intended to replace `ak.to_categorical`, which is now deprecated. It is not called by the same name as the Arrow function that implements it, because the Awkward parlance is \"convert to categorical\", and I think we want our `ak.str` API to be Awkward-looking, even if it uses Arrow under the hood.",
  "closed_at":"2023-08-09T21:02:59Z",
  "comments":1,
  "created_at":"2023-08-09T19:19:34Z",
  "draft":false,
  "id":1843864948,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xkb0s",
  "number":2630,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-09T21:02:59Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for dictionary encoding from Arrow",
  "updated_at":"2023-08-09T21:03:00Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Currently, `to_numpy` (or rather, `to_backend_array`) uses `to_list()` for strings. We can do better than that, if we build the string view ourselves.\r\n\r\nThis PR prototypes those kernels; it could definitely be written to be faster, if needed.\r\n\r\nIn the interests of expediency, some of this code was taken from https://github.com/s22h/cutils. I'm not sure if it needs to be directly licensed as MIT, because it's mostly all adapted.\r\n\r\nCloses #2624",
  "closed_at":"2023-08-11T12:11:41Z",
  "comments":2,
  "created_at":"2023-08-09T21:46:58Z",
  "draft":false,
  "id":1844067987,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XlIFU",
  "number":2631,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-11T12:11:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add CPU kernel for `to_numpy` support for strings/bytestrings",
  "updated_at":"2023-08-11T12:11:42Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"It should be possible to invoke `ak.unflatten` with the length of the layout, such that it is wrapped in a length-1 `RegularArray`. However, this currently raises an error because the upper bound of permissible integers is taken to be `len(layout)-1`.",
  "closed_at":"2023-08-10T16:42:28Z",
  "comments":1,
  "created_at":"2023-08-09T23:21:58Z",
  "draft":false,
  "id":1844172041,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xleyk",
  "number":2632,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-10T16:42:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support `counts=len(array)` in `ak.unflatten`",
  "updated_at":"2023-08-10T16:42:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Committed via https://github.com/asottile/all-repos",
  "closed_at":"2023-08-10T12:17:57Z",
  "comments":1,
  "created_at":"2023-08-10T02:24:39Z",
  "draft":false,
  "id":1844298892,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xl57k",
  "number":2633,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-10T12:17:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: use 2x faster black mirror",
  "updated_at":"2023-08-10T12:17:58Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR does two things:\r\n\r\n1. Changes dtypes of a kernel call (`awkward_ListArray_rpad_axis1`)\r\n   The kernel is written with the following template signature\r\n   ```cpp\r\n   T* toindex,\r\n   const C* fromstarts,\r\n   const C* fromstops,\r\n   C* tostarts,\r\n   C* tostops,\r\n   ```\r\n   i.e. `starts` and `tostarts` are expected to have the same dtypes. We can rewrite the kernel call site to ensure that this is true. This bug was observed after reading data from Arrow with 32-bit indices.\r\n2. When using `pad_none`, we shouldn't copy the parameters of the content to the new mask node; this duplicates parameters, and doesn't consider the rules about e.g. whether the content is allowed to possess such parameters.[^note]\r\n[^note]: this remains a general class of problem IIRC with broadcasting that we'll need to work on. However, this fix is also correct; we don't want duplicate parameters.",
  "closed_at":"2023-08-10T16:43:49Z",
  "comments":1,
  "created_at":"2023-08-10T10:04:06Z",
  "draft":false,
  "id":1844859136,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XnzWe",
  "number":2634,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-10T16:43:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support non `int64` index in `ListArray`'s `pad_none`",
  "updated_at":"2023-08-10T16:43:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds three user-guide entries under a new \"strings\" ToC heading. These guides handle loading strings from an array, splitting and joining, and component extraction.\r\n\r\n> **Warning**\r\n> Depends upon #2632 ",
  "closed_at":"2023-08-11T22:04:12Z",
  "comments":6,
  "created_at":"2023-08-10T10:24:29Z",
  "draft":false,
  "id":1844895139,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xn7R4",
  "number":2635,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-11T22:04:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: initial user-guide pass for string functions",
  "updated_at":"2023-08-12T14:33:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-08-10T15:48:35Z",
  "comments":0,
  "created_at":"2023-08-10T15:28:41Z",
  "draft":false,
  "id":1845426469,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XpwMQ",
  "number":2636,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-10T15:48:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: drop 3.7 classifier",
  "updated_at":"2023-08-10T15:48:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjc0MDU1MTAy",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\r\n\r\nce63bf2 (main from 2 weeks ago)\r\n\r\n### Description and code to reproduce\r\n\r\nThe following currently does not work. I am trying to differentiate through an operation that adds a scalar to an array:\r\n\r\n```python\r\nimport awkward as ak\r\nimport jax\r\nimport uproot\r\n\r\nak.jax.register_and_check()\r\n\r\nttbar_file = \"https://github.com/scikit-hep/scikit-hep-testdata/\"\\\r\n    \"raw/main/src/skhep_testdata/data/nanoAOD_2015_CMS_Open_Data_ttbar.root\"\r\n\r\ndef correct_jets(jets, alpha):\r\n    jets = ak.Array(jets)\r\n    new_pt = jets[\"pt\"] + 25*alpha\r\n    jets[\"pt\"] = new_pt\r\n    return jets\r\n\r\nwith uproot.open(ttbar_file) as f:\r\n    arr = f[\"Events\"].arrays([\"Jet_pt\",\"Jet_eta\", \"Jet_phi\", \"Jet_mass\"])\r\n    evtfilter = ak.num(arr[\"Jet_pt\"]) >= 2\r\n    jets = ak.zip(dict(zip([\"pt\",\"eta\", \"phi\", \"mass\"], ak.unzip(arr))), with_name=\"Momentum4D\")[evtfilter]\r\n    jets = ak.to_backend(jets, \"jax\")\r\n\r\n\r\njax.value_and_grad(correct_jets, argnums=1)(jets, 0.1)\r\n```\r\n\r\nResult:\r\n```pytb\r\nTypeError: Jax tracers cannot be used with `ak.from_arraylib`\r\n\r\nThis error occurred while calling\r\n\r\n    numpy.add.__call__(\r\n        <Array [[17.921875, 15.734375], ..., [...]] type='140 * var * float32'>\r\n        JVPTracer-instance\r\n    )\r\n```\r\n\r\nAm I setting this up wrong, or is this a bug?",
  "closed_at":"2024-02-14T09:50:39Z",
  "comments":3,
  "created_at":"2023-08-10T15:52:35Z",
  "id":1845464758,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t_462",
  "number":2637,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Jax tracers and adding scalars to arrays",
  "updated_at":"2024-02-14T09:50:39Z",
  "user":"MDQ6VXNlcjQ1MDA5MzU1"
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjc0MDU1MTAy",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nmain branch\n\n### Description and code to reproduce\n\nThis is a follow-up to #2591 with a slightly more simplified setup. It should be conceptually possible to differentiate through taking a mean. Currently this does not work.\r\n\r\nReproducer:\r\n```python\r\nimport awkward as ak\r\nimport jax\r\nimport uproot\r\n\r\nak.jax.register_and_check()\r\n\r\nttbar_file = \"https://github.com/scikit-hep/scikit-hep-testdata/\"\\\r\n    \"raw/main/src/skhep_testdata/data/nanoAOD_2015_CMS_Open_Data_ttbar.root\"\r\n\r\ndef mean_jet_pt(jets):\r\n    return ak.mean(jets.pt)\r\n\r\nwith uproot.open(ttbar_file) as f:\r\n    arr = f[\"Events\"].arrays([\"Jet_pt\",\"Jet_eta\", \"Jet_phi\", \"Jet_mass\"])\r\n    evtfilter = ak.num(arr[\"Jet_pt\"]) >= 2\r\n    jets = ak.zip(dict(zip([\"pt\",\"eta\", \"phi\", \"mass\"], ak.unzip(arr))), with_name=\"Momentum4D\")[evtfilter]\r\n    jets = ak.to_backend(jets, \"jax\")\r\n\r\n\r\njax.value_and_grad(mean_jet_pt, argnums=0)(jets)\r\n```\r\n\r\nResult:\r\n```pytb\r\nRuntimeError: Cannot differentiate through count_zero\r\n\r\nThis error occurred while calling\r\n\r\n    ak.mean(\r\n        <Array [[...], [...], ..., [...], [...]] type='140 * var * float32'>\r\n    )\r\n```\r\n\r\nA standalone jax version of taking a mean works fine:\r\n```python\r\nimport jax.numpy as jnp\r\n\r\ndef mean(j):\r\n    return jnp.mean(j)\r\n    \r\ndata = jnp.array([1, 7, 3, 5],dtype=float)\r\n\r\njax.value_and_grad(mean, argnums=0)(data)\r\n```",
  "closed_at":null,
  "comments":5,
  "created_at":"2023-08-10T15:59:02Z",
  "id":1845475576,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5t_7j4",
  "number":2638,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"open",
  "state_reason":null,
  "title":"Differentiating through an ak.mean",
  "updated_at":"2024-02-12T11:13:03Z",
  "user":"MDQ6VXNlcjQ1MDA5MzU1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.8 to 1.8.9.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/ade57f54dcc56d4858ca681c80269c26dc7b9149\"><code>ade57f5</code></a> Merge PRs <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/174\">#174</a> <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/175\">#175</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/172\">#172</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/637917e5f201407b3d6e3be9df6af349083d0a79\"><code>637917e</code></a> README: re-add &quot;pro tip&quot; language</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/4864f13c38a29318fc09dca6b0258644d80b8e07\"><code>4864f13</code></a> README: use semantic callouts</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/326f9ad1e131f526357a666f008015a0ee96fbcf\"><code>326f9ad</code></a> oidc-exchange: add-trailing-comma</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/e5f0690e9195178c6f53954b1f9059b3d9b11116\"><code>e5f0690</code></a> oidc-exchange: ignore a nested function</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/8bdd0cc2a0ec4a8773b96ddd5bdc4a2dd849cf81\"><code>8bdd0cc</code></a> oidc-exchange: lintage</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/71a0032909f17bb44704d5fc46876cdaee124ca0\"><code>71a0032</code></a> oidc-exchange: render claims if exchange fails</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/adef75a5a62cc4473182a78754a310e4a73d3511\"><code>adef75a</code></a> Bump cryptography from 41.0.2 to 41.0.3 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/413a8d5d62d32e541601a504492b8d5c5501a001\"><code>413a8d5</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/171\">#171</a> from pypa/dependabot/pip/requirements/certifi-2023.7.22</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/c185b8ee4e3fbab3f7db602f1e508e69c15e4981\"><code>c185b8e</code></a> Bump certifi from 2023.5.7 to 2023.7.22 in /requirements</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.8...v1.8.9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.8&new-version=1.8.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-08-11T16:12:31Z",
  "comments":1,
  "created_at":"2023-08-10T17:58:49Z",
  "draft":false,
  "id":1845643427,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xqfbe",
  "number":2639,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-11T16:12:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.8 to 1.8.9",
  "updated_at":"2023-08-11T16:12:32Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2575 ",
  "closed_at":"2023-08-11T16:31:05Z",
  "comments":1,
  "created_at":"2023-08-11T13:56:04Z",
  "draft":false,
  "id":1846872405,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Xuqmh",
  "number":2640,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-11T16:31:05Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: remove reference to old arrayclass",
  "updated_at":"2023-08-11T16:31:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.9 to 1.8.10.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.10</h2>\n<h2>:bug: What's Fixed</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> fixed decoding OIDC claims in debug output on failure by applying correct padding to the encoded payload via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/177\">pypa/gh-action-pypi-publish#177</a>.</p>\n<p><strong>Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.9...v1.8.10\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.9...v1.8.10</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/b7f401de30cb6434a1e19f805ff006643653240e\"><code>b7f401d</code></a> Merge PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/177\">#177</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/ba3ecc93555ab33f1172cebde7585a78eca00335\"><code>ba3ecc9</code></a> oidc-exchange: fix padding</li>\n<li>See full diff in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.9...v1.8.10\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.9&new-version=1.8.10)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-08-12T14:33:14Z",
  "comments":1,
  "created_at":"2023-08-11T17:22:09Z",
  "draft":false,
  "id":1847179977,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5XvuSU",
  "number":2641,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-12T14:33:14Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.9 to 1.8.10",
  "updated_at":"2023-08-12T14:33:14Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"fixing a typo",
  "closed_at":"2023-08-14T13:36:03Z",
  "comments":1,
  "created_at":"2023-08-14T12:30:18Z",
  "draft":false,
  "id":1849683406,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5X4LsY",
  "number":2643,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-14T13:36:03Z"
  },
  "reactions":{
   "hooray":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: rename cppyy test",
  "updated_at":"2023-08-14T13:36:03Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Here's the first test (on this branch, not deploying to PyPI):\r\n\r\nhttps://github.com/scikit-hep/awkward/actions/runs/5857811221",
  "closed_at":"2023-09-12T15:10:35Z",
  "comments":7,
  "created_at":"2023-08-14T15:50:02Z",
  "draft":false,
  "id":1850066218,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5X5c2T",
  "number":2644,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-12T15:10:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: try to reintroduce Python 3.12, now that NumPy has released a beta.",
  "updated_at":"2023-09-12T15:10:37Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.282 \u2192 v0.0.285](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.282...v0.0.285)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-08-23T15:01:41Z",
  "comments":1,
  "created_at":"2023-08-15T03:24:35Z",
  "draft":false,
  "id":1850851263,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5X8HnO",
  "number":2645,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-23T15:01:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-08-23T15:01:42Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR ensures that `ak.from_parquet` can handle `highlevel=False` in all branches. It also adds some useful comments to the Arrow table-reading code.",
  "closed_at":"2023-08-15T22:25:13Z",
  "comments":7,
  "created_at":"2023-08-15T12:39:04Z",
  "draft":false,
  "id":1851369415,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5X91kB",
  "number":2646,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-15T22:25:13Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support `highlevel=False` in all branches for `from_parquet`",
  "updated_at":"2023-08-15T22:25:14Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nArrow provides an `__arrow_array__` interface that we *could* support.\r\n\r\n@jpivarski how do you feel about this? The questions that arise for me are - what defaults should we choose for `ak.to_arrow`? I'm mainly concerned about enabling the extension array or not. To my mind, the extension-array mechanism is useful for serialisation, but may cause problems for strict Arrow routines.",
  "closed_at":"2023-08-15T22:11:37Z",
  "comments":1,
  "created_at":"2023-08-15T15:45:30Z",
  "id":1851695326,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5uXqDe",
  "number":2647,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Support `pyarrow.array(ak.Array(...))`",
  "updated_at":"2023-08-15T22:11:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nThe most forward-looking device-agnostic (regular) array interchange specification is DLPack, which has support in JAX, NumPy, and CuPy. We should be able to ingest arrays that expose this interface, and perhaps also expose the `__dlpack__` and `__dlpack_device__` interfaces to allow interop with DLPack aware libraries.",
  "closed_at":"2023-08-16T20:27:07Z",
  "comments":0,
  "created_at":"2023-08-15T15:46:46Z",
  "id":1851697109,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5uXqfV",
  "number":2648,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Add support for DLPack",
  "updated_at":"2023-08-16T20:27:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes #2648. \r\n\r\n- Adds `Array.__dlpack__(stream=None)` and `Array.__dlpack_device__()`\r\n- Adds `ak.from_dlpack`\r\n- Fixes copying from CUDA in `to_nplike`\r\n- Replaces `Array.__array__` with `Array.__array_interface__` and `Array.__cuda_array_interface__` (as these are higher precedence, and symmetric to one-another. It's arbitrary, we could keep `__array__`, but I think `__array_interface__` should be fairly well supported).",
  "closed_at":"2023-08-16T20:27:06Z",
  "comments":1,
  "created_at":"2023-08-15T18:09:50Z",
  "draft":false,
  "id":1851895717,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5X_lig",
  "number":2649,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-16T20:27:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `__dlpack__`, `from_dlpack` support",
  "updated_at":"2023-08-16T20:27:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2647 ",
  "closed_at":"2023-08-15T22:11:36Z",
  "comments":2,
  "created_at":"2023-08-15T18:18:29Z",
  "draft":false,
  "id":1851906395,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5X_nxi",
  "number":2650,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-15T22:11:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for `__arrow_array__`",
  "updated_at":"2023-08-15T22:11:37Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes dask-contrib/dask-awkward#340",
  "closed_at":"2023-08-16T23:21:48Z",
  "comments":2,
  "created_at":"2023-08-16T13:07:53Z",
  "draft":false,
  "id":1853210193,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YECtM",
  "number":2651,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-16T23:21:48Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support non-hashable values in `parameters_union`",
  "updated_at":"2023-08-16T23:21:49Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"When dask-awkward used its column optimisation to generate placeholder arrays, we were seeing placeholders in some `nplike` functions that were not prepared for them. This is because these nplike functions explicitly don't touch data for typetracers. \r\n\r\nThis fix won't solve the re-hydration issues by itself, but it should get us closer and is fairly easy to reason about.",
  "closed_at":"2023-08-23T14:54:43Z",
  "comments":2,
  "created_at":"2023-08-16T20:30:32Z",
  "draft":false,
  "id":1853863814,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YGQ_D",
  "number":2652,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-23T14:54:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support placeholders in shape-only routines",
  "updated_at":"2023-08-23T14:54:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I noticed a bug during slicing for a record of ragged lists. This PR fixes the bug, which was introduced during the backend addition.",
  "closed_at":"2023-08-16T23:25:06Z",
  "comments":1,
  "created_at":"2023-08-16T21:37:21Z",
  "draft":false,
  "id":1853938188,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YGhMN",
  "number":2653,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-16T23:25:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: remove unneeded cast",
  "updated_at":"2023-08-16T23:25:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"It turns out that we didn't yet test the `nout != 1` ufuncs, such as `divmod`. \r\n```python\r\n>>> import awkward as ak\r\n>>> import numpy as np\r\n>>> array = ak.Array([\r\n...     [1, 2, 3],\r\n...     [4]\r\n... ])\r\n>>> np.divmod(array, 2)\r\n[[[0, 1, 1, 2], [1, 0, 1, 0]], []]\r\n```\r\nThis PR adds support for this ufunc, with some refactoring work along the way.\r\n```python\r\n>>> import awkward as ak\r\n>>> import numpy as np\r\n>>> array = ak.Array([\r\n...     [1, 2, 3],\r\n...     [4]\r\n... ])\r\n>>> np.divmod(array, 2)\r\n(<Array [[0, 1, 1], [2]] type='2 * var * int64'>, <Array [[1, 0, 1], [0]] type='2 * var * int64'>)\r\n```",
  "closed_at":"2023-08-17T17:17:37Z",
  "comments":2,
  "created_at":"2023-08-17T12:27:21Z",
  "draft":false,
  "id":1854903053,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YJxgj",
  "number":2654,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-17T17:17:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: multiple-output ufuncs e.g. `divmod`",
  "updated_at":"2023-08-17T17:17:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.3.3\r\n\r\n### Description and code to reproduce\r\n\r\n```python3\r\nimport json\r\nimport awkward as ak\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\", \"anindex\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n        {\r\n            \"class\": \"NumpyArray\",\r\n            \"primitive\": \"int64\",\r\n            \"inner_shape\": [],\r\n            \"parameters\": {},\r\n            \"form_key\": \"anindex!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak._nplikes.typetracer.typetracer_with_report(form, forget_length=True)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\n\r\nfor i in range(2):\r\n    print(f\"unflattening axis={i}\")\r\n    ak.unflatten(ttarray.muon.pt, ttarray.anindex, axis=i)\r\n```\r\nfails with:\r\n```\r\n(coffea-dev) lgray@Lindseys-MacBook-Pro coffea % python form_madness15.py   \r\nunflattening axis=0\r\nunflattening axis=1\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_dispatch.py\", line 60, in dispatch\r\n    next(gen_or_result)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_unflatten.py\", line 83, in unflatten\r\n    return _impl(array, counts, axis, highlevel, behavior)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_unflatten.py\", line 222, in _impl\r\n    out = ak._do.recursively_apply(layout, apply)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_do.py\", line 35, in recursively_apply\r\n    return layout._recursively_apply(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/listoffsetarray.py\", line 2157, in _recursively_apply\r\n    result = action(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_unflatten.py\", line 211, in apply\r\n    if not backend.index_nplike.array_equal(\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 473, in __bool__\r\n    raise RuntimeError(\"cannot realise an unknown value\")\r\nRuntimeError: cannot realise an unknown value\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness15.py\", line 84, in <module>\r\n    ak.unflatten(ttarray.muon.pt, ttarray.anindex, axis=i)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_dispatch.py\", line 68, in dispatch\r\n    return gen_or_result\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 67, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 82, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nRuntimeError: cannot realise an unknown value\r\n\r\nThis error occurred while calling\r\n\r\n    ak.unflatten(\r\n        <Array-typetracer [...] type='## * var * int64'>\r\n        <Array-typetracer [...] type='## * int64'>\r\n        axis = 1\r\n    )\r\n```\r\n\r\n@agoose77 this appears to be required for https://github.com/CoffeaTeam/coffea/pull/822 (or at least the studies required to get cleaner distillations of the objects we really want)",
  "closed_at":"2023-08-17T19:55:44Z",
  "comments":0,
  "created_at":"2023-08-17T18:51:51Z",
  "id":1855534857,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5umTcJ",
  "number":2656,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Unflattening typetracer on axis > 0 fails",
  "updated_at":"2023-08-17T19:55:44Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2656",
  "closed_at":"2023-08-17T19:55:43Z",
  "comments":1,
  "created_at":"2023-08-17T19:34:26Z",
  "draft":false,
  "id":1855586697,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YMHrL",
  "number":2657,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-17T19:55:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support unflattening a typetracer-backed array at `axis != 0`",
  "updated_at":"2023-08-17T19:55:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In IPython, the wildcard magic:\r\n```ipython3\r\nIn [1]: import awkward as ak\r\n\r\nIn [2]: x = ak.Array({'x': [1,2,3]})\r\n\r\nIn [3]: x.*?\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile ~/.mambaforge/envs/awkward/lib/python3.11/site-packages/IPython/core/oinspect.py:1124, in Inspector.psearch(self, pattern, ns_table, ns_search, ignore_case, show_all, list_types)\r\n   1122         continue\r\n   1123     namespaces_seen.add(id(ns))\r\n-> 1124     tmp_res = list_namespace(ns, type_pattern, filter,\r\n   1125                             ignore_case=ignore_case, show_all=show_all)\r\n   1126     search_result.update(tmp_res)\r\n   1128 page.page('\\n'.join(sorted(search_result)))\r\n\r\nFile ~/.mambaforge/envs/awkward/lib/python3.11/site-packages/IPython/utils/wildcard.py:106, in list_namespace(namespace, type_pattern, filter, ignore_case, show_all)\r\n    104 results = {}\r\n    105 for name, obj in filtered.items():\r\n--> 106     ns = list_namespace(dict_dir(obj), type_pattern,\r\n    107                         \".\".join(pattern_list[1:]),\r\n    108                         ignore_case=ignore_case, show_all=show_all)\r\n    109     for inner_name, inner_obj in ns.items():\r\n    110         results[\"%s.%s\"%(name,inner_name)] = inner_obj\r\n\r\nFile ~/.mambaforge/envs/awkward/lib/python3.11/site-packages/IPython/utils/wildcard.py:70, in dict_dir(obj)\r\n     62 for key in dir2(obj):\r\n     63    # This seemingly unnecessary try/except is actually needed\r\n     64    # because there is code out there with metaclasses that\r\n   (...)\r\n     67    # object's dictionary.  Properties can actually do the same\r\n     68    # thing.  In particular, Traits use this pattern\r\n     69    try:\r\n---> 70        ns[key] = getattr(obj, key)\r\n     71    except AttributeError:\r\n     72        pass\r\n\r\nFile ~/Git/awkward/src/awkward/highlevel.py:1326, in Array.__cuda_array_interface__(self)\r\n   1321 @non_inspectable_property\r\n   1322 def __cuda_array_interface__(self):\r\n   1323     with ak._errors.OperationErrorContext(\r\n   1324         f\"{type(self).__name__}.__cuda_array_interface__\", (self,), {}\r\n   1325     ):\r\n-> 1326         array = ak.operations.to_cupy(self)\r\n   1327         return array.__cuda_array_interface__\r\n\r\nFile ~/Git/awkward/src/awkward/_dispatch.py:60, in named_high_level_function.<locals>.dispatch(*args, **kwargs)\r\n     58 # Failed to find a custom overload, so resume the original function\r\n     59 try:\r\n---> 60     next(gen_or_result)\r\n     61 except StopIteration as err:\r\n     62     return err.value\r\n\r\nFile ~/Git/awkward/src/awkward/operations/ak_to_cupy.py:30, in to_cupy(array)\r\n     27 yield (array,)\r\n     29 # Implementation\r\n---> 30 return _impl(array)\r\n\r\nFile ~/Git/awkward/src/awkward/operations/ak_to_cupy.py:39, in _impl(array)\r\n     36 backend = CupyBackend.instance()\r\n     37 cupy_layout = layout.to_backend(backend)\r\n---> 39 return cupy_layout.to_backend_array(allow_missing=False)\r\n\r\nFile ~/Git/awkward/src/awkward/contents/content.py:1077, in Content.to_backend_array(self, allow_missing, backend)\r\n   1075 else:\r\n   1076     backend = regularize_backend(backend)\r\n-> 1077 return self._to_backend_array(allow_missing, backend)\r\n\r\nFile ~/Git/awkward/src/awkward/contents/recordarray.py:1120, in RecordArray._to_backend_array(self, allow_missing, backend)\r\n   1117     raise ValueError(f\"cannot convert {self} into np.ndarray\")\r\n   1119 if not backend.nplike.supports_structured_dtypes:\r\n-> 1120     raise TypeError(\r\n   1121         f\"backend {backend.name!r} does not support structured \"\r\n   1122         f\"dtypes required for converting {type(self).__name__} \"\r\n   1123         f\"into a backend array\"\r\n   1124     )\r\n   1125 out = backend.nplike.empty(\r\n   1126     self.length,\r\n   1127     dtype=[(str(n), x.dtype) for n, x in zip(self.fields, contents)],\r\n   1128 )\r\n   1129 mask = None\r\n\r\nTypeError: backend 'cuda' does not support structured dtypes required for converting RecordArray into a backend array\r\n\r\nThis error occurred while calling\r\n\r\n    Array.__cuda_array_interface__(\r\n        <Array [{x: 1}, {x: 2}, {x: 3}] type='3 * {x: int64}'>\r\n    )\r\n\r\n```\r\n\r\nThrows an error due to the fact that it evaluates the properties to ensure that they exist. This is problematic for properties like `cpp_type` that throw exceptions if libraries are missing (and are slow). We can detect whether we're in the IPython inspection context, and return `None` for these properties.",
  "closed_at":"2023-08-18T16:12:35Z",
  "comments":2,
  "created_at":"2023-08-18T11:13:13Z",
  "draft":false,
  "id":1856540766,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YPWT9",
  "number":2658,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-18T16:12:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: fix IPython inspection",
  "updated_at":"2023-08-18T16:46:15Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This is the only update needed to pass tests with [Numba 0.58.0rc1](https://numba.discourse.group/t/ann-numba-0-58-0rc1-and-llvmlite-0-41-0rc1/2078). However, that version of Numba still raises a warning if\r\n\r\n```bash\r\nexport NUMBA_CAPTURED_ERRORS=new_style\r\n```\r\n\r\nis not explicitly set (should probably be changed in Numba itself). Most of the exceptions changed were `TypeErrors`, but a few were `ValueErrors` that really ought to have been type errors. (Not finding a record field by name is a type error in compiled code.)\r\n\r\n[Vector](https://github.com/scikit-hep/vector) is already up-to-date with respect to `TypeError` versus `numba.TypingError`.",
  "closed_at":"2023-08-21T16:27:51Z",
  "comments":4,
  "created_at":"2023-08-18T18:32:51Z",
  "draft":false,
  "id":1857126761,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YRV1m",
  "number":2659,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-21T16:27:51Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: using `numba.core.errors.Numba<Error>` instead of `Error` in a Numba typing context.",
  "updated_at":"2023-08-21T16:27:52Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Requested by @danielballan in https://github.com/bluesky/tiled/pull/549#issuecomment-1682987096.",
  "closed_at":"2023-08-23T14:54:21Z",
  "comments":6,
  "created_at":"2023-08-18T19:27:06Z",
  "draft":false,
  "id":1857191765,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YRkIc",
  "number":2660,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-23T14:54:21Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: `Form.expected_from_buffers` for names/dtypes `ak.from_buffers` needs.",
  "updated_at":"2023-08-23T14:54:22Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"**Note:** see below; this _deprecates_ `form_key != None` on `EmptyForm` and immediately changes some of the ways that `EmptyForm` works with `form_keys`. @agoose77, @douglasdavis, and @lgray probably want to know about this and weigh in on whether it will be a problem.\r\n\r\n--------------------\r\n\r\nThis started as an observation that `UnionForm.simplified` is wrong because it strips the `form_keys` from all of its `contents` (in https://github.com/bluesky/tiled/pull/549#discussion_r1298819704). That's because it's implemented by a round-trip through length-zero `UnionArray.simplified`. (The `UnionArray.simplified` logic is too complex to replicate in `UnionForm`. It would be a maintenance burden to try to do so.)\r\n\r\nI know that we've struggled with this aspect of `Form.length_zero_array` in the past: we occasionally need it to simulate what should happen to a Form, but the Form is carrying important `form_keys` that we don't want to just drop. Repopulating the round-tripped Form with the original `form_keys` is a hassle and error-prone.\r\n\r\nTherefore, this PR introduces a new parameter, `\"__form_key__\"`, to carry `form_keys` through temporary arrays made by `Form.length_zero_array` and `Form.length_one_array`. It's opt-in.\r\n\r\n```python\r\n>>> from awkward.forms import *\r\n>>> form = ListOffsetForm(\r\n...     \"i64\",\r\n...     RecordForm(\r\n...         [\r\n...             NumpyForm(\"float64\", form_key=\"node2\"),\r\n...             ListOffsetForm(\r\n...                 \"i64\", NumpyForm(\"int64\", form_key=\"node4\"), form_key=\"node3\"\r\n...             ),\r\n...         ],\r\n...         [\"x\", \"y\"],\r\n...         form_key=\"node1\",\r\n...     ),\r\n...     form_key=\"node0\",\r\n... )\r\n>>> layout = form.length_zero_array(form_keys_to_parameters=True, highlevel=False)\r\n>>> layout\r\n<ListOffsetArray len='0'>\r\n    <parameter name='__form_key__'>'node0'</parameter>\r\n    <offsets><Index dtype='int64' len='1'>[0]</Index></offsets>\r\n    <content><RecordArray is_tuple='false' len='0'>\r\n        <parameter name='__form_key__'>'node1'</parameter>\r\n        <content index='0' field='x'>\r\n            <NumpyArray dtype='float64' len='0'>\r\n                <parameter name='__form_key__'>'node2'</parameter>\r\n                []\r\n            </NumpyArray>\r\n        </content>\r\n        <content index='1' field='y'>\r\n            <ListOffsetArray len='0'>\r\n                <parameter name='__form_key__'>'node3'</parameter>\r\n                <offsets><Index dtype='int64' len='1'>[0]</Index></offsets>\r\n                <content><NumpyArray dtype='int64' len='0'>\r\n                    <parameter name='__form_key__'>'node4'</parameter>\r\n                    []\r\n                </NumpyArray></content>\r\n            </ListOffsetArray>\r\n        </content>\r\n    </RecordArray></content>\r\n</ListOffsetArray>\r\n```\r\n\r\nConverting all of the `\"__form_key__\"` parameters back into `form_keys` (as opposed to `parameters` on the Form) is also opt-in, but a library developer would know about both by following examples:\r\n\r\n```python\r\n>>> print(layout.form)\r\n{\r\n    \"class\": \"ListOffsetArray\",\r\n    \"offsets\": \"i64\",\r\n    \"content\": {\r\n        \"class\": \"RecordArray\",\r\n        \"fields\": [\r\n            \"x\",\r\n            \"y\"\r\n        ],\r\n        \"contents\": [\r\n            {\r\n                \"class\": \"NumpyArray\",\r\n                \"primitive\": \"float64\",\r\n                \"parameters\": {\r\n                    \"__form_key__\": \"node2\"\r\n                }\r\n            },\r\n            {\r\n                \"class\": \"ListOffsetArray\",\r\n                \"offsets\": \"i64\",\r\n                \"content\": {\r\n                    \"class\": \"NumpyArray\",\r\n                    \"primitive\": \"int64\",\r\n                    \"parameters\": {\r\n                        \"__form_key__\": \"node4\"\r\n                    }\r\n                },\r\n                \"parameters\": {\r\n                    \"__form_key__\": \"node3\"\r\n                }\r\n            }\r\n        ],\r\n        \"parameters\": {\r\n            \"__form_key__\": \"node1\"\r\n        }\r\n    },\r\n    \"parameters\": {\r\n        \"__form_key__\": \"node0\"\r\n    }\r\n}\r\n>>> print(layout.form_with_key_from_parameter)\r\n{\r\n    \"class\": \"ListOffsetArray\",\r\n    \"offsets\": \"i64\",\r\n    \"content\": {\r\n        \"class\": \"RecordArray\",\r\n        \"fields\": [\r\n            \"x\",\r\n            \"y\"\r\n        ],\r\n        \"contents\": [\r\n            {\r\n                \"class\": \"NumpyArray\",\r\n                \"primitive\": \"float64\",\r\n                \"form_key\": \"node2\"\r\n            },\r\n            {\r\n                \"class\": \"ListOffsetArray\",\r\n                \"offsets\": \"i64\",\r\n                \"content\": {\r\n                    \"class\": \"NumpyArray\",\r\n                    \"primitive\": \"int64\",\r\n                    \"form_key\": \"node4\"\r\n                },\r\n                \"form_key\": \"node3\"\r\n            }\r\n        ],\r\n        \"form_key\": \"node1\"\r\n    },\r\n    \"form_key\": \"node0\"\r\n}\r\n```\r\n\r\nAnd then there's the issue that `EmptyArrays` don't have `parameters`. For this mechanism to work on all node types, `EmptyArrays` can't have `form_keys`, either. That's okay: they can't have buffers, so they don't really need `form_keys`.\r\n\r\nSo this PR makes the following immediate changes, which I think are safe:\r\n\r\n* `EmptyForm.__eq__` ignores the `form_key` when determining if two Forms are equal.\r\n* `ak.forms.from_dict` (and `from_json`) ignores `form_key` when constructing `EmptyForm` from dicts (or JSON). It's important to allow the dict (or JSON) format continue to have `\"parameters\"` and `\"form_key\"` keys, for format version independence/schema evolution, but we no longer read these fields.\r\n* `EmptyForm.to_dict` (and `to_json`) outputs `\"form_key\": None` if `verbose=True`, rather than outputting its actual `form_key`.\r\n* All of the functions in Awkward Array that create `EmptyForms` create them without `form_keys`. In particular, `Content.form_with_key` _skips a number_ when constructing `form_key` names from `f\"node{number}\"`. This is so that old Forms that might be saved somewhere in JSON format don't have to be modified in a major way (changing all the numbers after the first `EmptyForm`) to get the same `form_keys` as the new `Content.form_with_key` outputs.\r\n\r\nIt also deprecates intentional, explicit passing of `form_key != None` in\r\n\r\n* the `EmptyArray` constructor\r\n* the `EmptyArray.copy` method\r\n* the `EmptyArray.simplified` constructor\r\n\r\nThe deprecation warning turns into an error in Awkward Array **2.5.0** (much as non-empty `parameters` were removed in Awkward Array 2.2.0).",
  "closed_at":"2023-08-23T15:16:45Z",
  "comments":2,
  "created_at":"2023-08-18T22:13:39Z",
  "draft":false,
  "id":1857345411,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YSFz3",
  "number":2661,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{
   "eyes":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: allow `form_key` to round-trip through `length_zero_array`",
  "updated_at":"2024-02-01T19:44:39Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"When I wrote this branch in `from_dlpack`, I think I was considering support for the PyCapsule legacy interface. Apparently I never restored an error case.\r\n\r\nWhilst we're at it, this PR also adds support for conversion of index objects to DLPack.",
  "closed_at":"2023-08-21T14:54:58Z",
  "comments":1,
  "created_at":"2023-08-21T12:23:47Z",
  "draft":false,
  "id":1859260997,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YYW8M",
  "number":2662,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-21T14:54:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: raise error for invalid object in `from_dlpack`",
  "updated_at":"2023-08-21T14:54:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"At some point, refactoring work broke broadcasting of tuples whereby the broadcast proceeds through the fields. \r\n\r\nThis PR fixes that, and also prohibits broadcasting of tuples against records, even if the field names are considered compatible (`\"0\"` in a record has a mapping onto tuple slot 0). I think we want to meaningfully distinguish between records and tuples, so I made this change.",
  "closed_at":"2023-08-21T22:00:26Z",
  "comments":1,
  "created_at":"2023-08-21T20:49:49Z",
  "draft":false,
  "id":1860129301,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YbWLP",
  "number":2663,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-21T22:00:26Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: fix/harden broadcasting through tuples",
  "updated_at":"2023-08-21T22:00:27Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Pickle 5 supports out-of-band data, which supports zero-copy round-trips with pickle.",
  "closed_at":"2023-08-23T15:05:44Z",
  "comments":2,
  "created_at":"2023-08-22T21:24:54Z",
  "draft":false,
  "id":1862229898,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Yij0o",
  "number":2665,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-23T15:05:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: support out-of-band buffers in pickling",
  "updated_at":"2023-08-23T15:05:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThis was originally discussed in #2661.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-08-23T15:17:27Z",
  "id":1863545097,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vE3EJ",
  "number":2666,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`UnionForm.simplified` doesn't preserve form keys",
  "updated_at":"2023-08-23T15:17:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThis was originally discussed in #2661.",
  "closed_at":"2023-09-01T12:52:25Z",
  "comments":2,
  "created_at":"2023-08-23T15:18:02Z",
  "id":1863546079,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vE3Tf",
  "number":2667,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Deprecate `form_key` for `EmptyForm`",
  "updated_at":"2023-09-01T12:52:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\n\nI have a [use case](https://github.com/bluesky/tiled/pull/549/files#diff-40070db129d1d3432609597f627cdbcddf5f970b7bb8062862427e8501359ab1R32-R34) for calling the [`_touch_data`](https://github.com/search?q=repo%3Ascikit-hep%2Fawkward%20%22def%20_touch_data%22&type=code) methods directly. I wonder if that method can be promoted from a private method to \"public but not widely advertised\".\r\n\r\nIf the maintainers are receptive, I would be happy to contribute a PR. It would be easy enough to provide a backward-compatible implementation:\r\n\r\n```py\r\n    def touch_data(self):\r\n        ...\r\n\r\n    _touch_data = touch_data  # back-compat\r\n```\r\n\r\nif that is an important consideration here.",
  "closed_at":"2023-08-25T13:52:47Z",
  "comments":3,
  "created_at":"2023-08-23T18:33:18Z",
  "id":1863824714,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vF7VK",
  "number":2668,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Can `_touch_data` be made public?",
  "updated_at":"2023-08-25T13:52:47Z",
  "user":"MDQ6VXNlcjIyNzk1OTg="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [aws-actions/configure-aws-credentials](https://github.com/aws-actions/configure-aws-credentials) from 2 to 3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aws-actions/configure-aws-credentials/releases\">aws-actions/configure-aws-credentials's releases</a>.</em></p>\n<blockquote>\n<h2>v3</h2>\n<p>This tag tracks the latest v3.x.x release</p>\n<h2>v3.0.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v3.0.0/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v2.2.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v2.2.0/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v2.1.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v2.1.0/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/main/CHANGELOG.md\">aws-actions/configure-aws-credentials's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2.2.0...v3.0.0\">3.0.0</a> (2023-08-21)</h2>\n<h3>Features</h3>\n<ul>\n<li>Can configure <code>max-retries</code> and <code>disable-retry</code> to modify retry functionality when the assume role call fails</li>\n<li>Set returned credentials as step outputs with <code>output-credentials</code></li>\n<li>Clear AWS related environment variables at the start of the action with <code>unset-current-credentials</code></li>\n<li>Unique role identifier is now printed in the workflow logs</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Can't use credentials if they contain a special character</li>\n<li>Retry functionality added when generating the JWT fails</li>\n<li>Can now use <code>webIdentityTokenFile</code> option</li>\n<li>Branch name validation too strict</li>\n<li>JS SDK v2 deprecation warning in workflow logs</li>\n</ul>\n<h3>Changes to existing functionality</h3>\n<ul>\n<li>Default session duration is now 1 hour in all cases (from 6 hours in some cases)</li>\n<li>Account ID will not be masked by default in logs</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2.1.0...v2.2.0\">2.2.0</a> (2023-05-31)</h2>\n<h3>Features</h3>\n<ul>\n<li><code>inline-session-policy</code> prop enables assuming a role with inline session policies (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/d00f6c6f41fde02a9fd0d469040be6ed0df69e73\">d00f6c6</a>)</li>\n<li><code>managed-session-policies</code> prop enables assuming a role with managed policy arns (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/d00f6c6f41fde02a9fd0d469040be6ed0df69e73\">d00f6c6</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2.0.0...v2.1.0\">2.1.0</a> (2023-05-31)</h2>\n<h3>Features</h3>\n<ul>\n<li><code>role-chaining</code> prop enables role chaining use case (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/6fbd316fd15f52c3d9f68e7aa06eae4f5699a518\">6fbd316</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.7.0...v2.0.0\">2.0.0</a> (2023-03-06)</h2>\n<h3>Features</h3>\n<ul>\n<li>Version bump to use Node 16 by default.</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.6.1...v1.7.0\">1.7.0</a> (2022-08-03)</h2>\n<h3>Features</h3>\n<ul>\n<li>Allow audience to be explicitly specified (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/2f8dfd0ed43d880f85b57f0c8727b497af2037de\">2f8dfd0</a>)</li>\n</ul>\n<h3><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.6.0...v1.6.1\">1.6.1</a> (2022-01-18)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>OIDC Parallel Requests error (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/133757e9b829f4ef44c8e99e3f272879b45fc9c5\">133757e</a>)</li>\n<li>Strict Mode Deprecation (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/4c5e1c60ccfc95d0e48bf1bc95fc707a94aa2c60\">4c5e1c6</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/ef93a73b1313f148011965ef7361f667f371f58b\"><code>ef93a73</code></a> V3 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/791\">#791</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/131c7b6fd10c0d7f36e1e49650b241d91ee327b9\"><code>131c7b6</code></a> chore: Bump jest from 29.6.2 to 29.6.3 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/786\">#786</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/6334b403ebf4af8bddda86d46ba899570ddd1043\"><code>6334b40</code></a> chore: Bump aws-sdk from 2.1436.0 to 2.1441.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/787\">#787</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/360ea313a73f8d3b7839fb5db64aecf801ad5fda\"><code>360ea31</code></a> chore: Bump aws-sdk from 2.1431.0 to 2.1436.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/783\">#783</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/de93b00c9f538bf2000deda62b2da850b2c737e9\"><code>de93b00</code></a> chore: Bump eslint from 8.46.0 to 8.47.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/784\">#784</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/746d33e7c1cc7b6e40a836b0f2ef033136aa6b2a\"><code>746d33e</code></a> chore: Bump aws-sdk from 2.1426.0 to 2.1431.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/782\">#782</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/706fc9ae3ddc432f1b3de583922ba05d3b484cae\"><code>706fc9a</code></a> chore: Bump eslint from 8.45.0 to 8.46.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/780\">#780</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/9918371ad58bc793ab867692ad2935b2ee847bde\"><code>9918371</code></a> chore: Bump aws-sdk from 2.1421.0 to 2.1426.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/781\">#781</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/345462ab9e5090ddc595fc179952ed2fb03c74b7\"><code>345462a</code></a> chore: Bump jest from 29.6.1 to 29.6.2 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/779\">#779</a>)</li>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/80a7a6c2a2309f1aaa0ea3c8689a33b1647a4421\"><code>80a7a6c</code></a> chore: Bump aws-sdk from 2.1416.0 to 2.1421.0 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/778\">#778</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aws-actions/configure-aws-credentials&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-08-25T10:57:25Z",
  "comments":1,
  "created_at":"2023-08-24T17:46:01Z",
  "draft":false,
  "id":1865617524,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YuASB",
  "number":2669,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-25T10:57:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump aws-actions/configure-aws-credentials from 2 to 3",
  "updated_at":"2023-08-25T10:57:26Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"With pyarrow 13 it appears that `list.element` is used over `list.item` in some datasets. Looks like our original check to look for `list.element` was too strict (the final `.`). We also need to make this change in dask-awkward!\r\n\r\nmore info at https://github.com/dask-contrib/dask-awkward/issues/346",
  "closed_at":"2023-08-24T20:32:18Z",
  "comments":3,
  "created_at":"2023-08-24T19:27:53Z",
  "draft":false,
  "id":1865756624,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YuetC",
  "number":2670,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-24T20:32:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update string to search for in determing parquet column list separator",
  "updated_at":"2023-08-24T21:07:29Z",
  "user":"MDQ6VXNlcjMyMDIwOTA="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"1. Deprecation of `forget_length`:\r\n   This argument represents a leak of the implementation details; the function only accepts a form, which has no known length.\r\n  \r\n   - [ ] Add deprecation notice to wiki\r\n  \r\n   In future, we could add a `*, length=unknown_length` keyword-only argument that would be _more_ powerful, but I can't see any examples of people needing that right now.\r\n2. Extend `typetracer_with_report` parameters\r\n   Most uses of our `typetracer_with_report` function immediately wrap the result with an `ak.Array`. We should just support that, given that the `highlevel` argument is so widely used in our L1 API. Although typetracer isn't exactly L1, in my view L1-L2 is more about who uses these functions, rather than how painful they can be to use. @jpivarski this might reflect a changing view of mine, I am not sure. Please weigh in you think we should keep these functions \"simple\".",
  "closed_at":"2023-08-27T12:47:20Z",
  "comments":4,
  "created_at":"2023-08-25T08:26:37Z",
  "draft":false,
  "id":1866589354,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5YxUQP",
  "number":2671,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-27T12:47:20Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate `forget_length`, add parameters to `typetracer_with_report`",
  "updated_at":"2023-08-27T12:47:21Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This was requested in #2668, and I've identified that Coffea and dask-awkward currently use our private APIs. We should just make this public. \r\n\r\nAt this stage, I'd prefer to expose this via `ak.typetracer`, rather than `Content.touch_data`, as we can better control the public API (e.g. always recursive, return `self`), and most people are already working with `ak.Array` objects.\r\n\r\nCloses #2668 ",
  "closed_at":"2023-08-25T13:52:46Z",
  "comments":3,
  "created_at":"2023-08-25T08:53:06Z",
  "draft":false,
  "id":1866636073,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Yxeix",
  "number":2672,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-25T13:52:46Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `touch_data` to `ak.typetracer`",
  "updated_at":"2023-08-30T00:35:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\n`to_buffers` expects the array object to have a `byteswap` method, which we aren't supported across all ndarray implementations. We should add this to our nplikes instead.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-08-25T14:08:02Z",
  "id":1867125858,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vShRi",
  "number":2673,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Make `byteswap` an nplike function",
  "updated_at":"2024-01-17T15:01:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThe title says it all!",
  "closed_at":"2023-09-05T16:08:52Z",
  "comments":0,
  "created_at":"2023-08-25T14:12:05Z",
  "id":1867131988,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vSixU",
  "number":2674,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Support placeholders in `to_buffers`",
  "updated_at":"2023-09-05T16:08:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nI don't think we can fix this via adding support for typetracers in `to_arrow`, as we don't want to start mimicking the arrow objects.",
  "closed_at":"2023-09-01T20:11:48Z",
  "comments":0,
  "created_at":"2023-08-25T14:13:30Z",
  "id":1867134086,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vSjSG",
  "number":2675,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Fix typetracer for string operations",
  "updated_at":"2023-09-01T20:11:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Description of new feature\n\nAn awkward-array equivalent of `np.cumsum` seems useful.\r\nFor example, for `a : N * var * whatever`, `ak.local_index(a, axis=1)` could be implemented as `ak.cumsum(ak.ones_like(a), axis=1) - 1`.\r\n",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-08-28T23:11:14Z",
  "id":1870630862,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5vf4_O",
  "number":2676,
  "performed_via_github_app":null,
  "reactions":{
   "+1":2,
   "total_count":2
  },
  "state":"open",
  "state_reason":null,
  "title":"ak.cumsum",
  "updated_at":"2023-08-29T08:19:42Z",
  "user":"MDQ6VXNlcjY1ODc0MTI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.285 \u2192 v0.0.286](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.285...v0.0.286)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-08-30T14:13:14Z",
  "comments":1,
  "created_at":"2023-08-29T03:04:38Z",
  "draft":false,
  "id":1870799970,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Y_Vp3",
  "number":2677,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-30T14:13:14Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-08-30T14:13:15Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR ensures that `broadcast_and_apply` throws an error if the given arrays do not share the same backend. \r\n\r\nAt a high level, all `ak.XXX` operations that accept multiple array arguments should effectively compute\r\n```python\r\nbackend = backend_of(*args, default=..., coerce_to_common=True)\r\nlayouts = [ak.to_layout(x).to_backend(backend) for x in args]\r\n```\r\n\r\nWe _could_ add a helper to do this, although given that each `ak.XXX` function needs to set different layout conversion flags, this is probably best avoided.\r\n\r\nThere's an argument to be made for making `broadcast_and_apply` be more permissive and perform the coercion itself. However, I *think* we want to coerce to the same backend in the highlevel `ak.XXX` functions ASAP, i.e. before broadcasting. \r\n\r\nWhilst I was here, I cleaned up some of the routines that use `backend_of`.",
  "closed_at":"2023-08-29T15:02:30Z",
  "comments":1,
  "created_at":"2023-08-29T11:24:08Z",
  "draft":false,
  "id":1871462829,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZBlFO",
  "number":2678,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-29T15:02:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: guard `broadcast_and_apply` from mixed backends",
  "updated_at":"2023-08-29T15:02:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2675 by introducing a typetracer branch in a new `_apply_through_arrow` helper. This helper only handles the single-argument case, because the multi-array cases are more complex (they need finer control over how things get converted to arrow).\r\n\r\nSome functions in PyArrow [have bugs](https://github.com/apache/arrow/issues/37437) that require us to workaround by manually creating a layout from a form.",
  "closed_at":"2023-09-01T20:11:47Z",
  "comments":5,
  "created_at":"2023-08-29T13:38:56Z",
  "draft":false,
  "id":1871700794,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZCZBV",
  "number":2679,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-01T20:11:47Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support typetracer in `ak.str.` operations",
  "updated_at":"2023-09-01T20:11:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"1. Raises `DeprecationWarning` if `form_key` is passed to constructor of non-buffer forms\r\n   - `UnmaskedForm`\r\n   - `EmptyForm`\r\n   - `RecordForm`\r\n2. No longer passes `form_key` to these types from form factories, such as pickle, `form.from_XXX` methods, `Content._form_with_key`\r\n3. No longer outputs `form_key` in `form.to_dict(...)` for these types.",
  "closed_at":"2023-08-30T13:30:58Z",
  "comments":1,
  "created_at":"2023-08-30T12:57:29Z",
  "draft":false,
  "id":1873627271,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZI0S-",
  "number":2680,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: deprecate form key for forms that have no buffers",
  "updated_at":"2023-09-17T16:18:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":null,
  "closed_at":"2023-08-30T14:49:44Z",
  "comments":2,
  "created_at":"2023-08-30T14:21:53Z",
  "draft":false,
  "id":1873790123,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZJYDJ",
  "number":2681,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-08-30T14:49:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"test: keep testing Windows 32-bit.",
  "updated_at":"2023-08-31T16:35:53Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds support for customisation of the pickling `__reduce__` implementation by third-party libraries. The intention is to provide a mechanism for `dask-awkward` to intercept serialisation in a form-preserving manner c.f. dask-contrib/dask-awkward#344.\r\n\r\nThe problem in dask-contrib/dask-awkward#344 is that whilst regular users of Awkward Array are likely not that concerned about the form of an array, Dask requires guarantees that the form does not change during transfer between workers. As such, we need an environment-sensitive serialisation mechanism.\r\n\r\nThe simplest/decoupled way of doing this is to let dask-awkward handle the serialisation, rather than internally making Awkward aware of `dask-awkward` directly.\r\n\r\nWith this PR it is possible to define an `awkward.pickle.reduce` entrypoint that exposes a `__reduce_ex__` implementation, e.g. with hatchling:\r\n```toml\r\n[project.entry-points.\"awkward.pickle.reduce\"]\r\ndask-awkward-pickler = \"dask_awkward.pickle:plugin\"\r\n```\r\nwhere\r\n```python\r\ndef plugin(obj, protocol: int):\r\n    if isinstance(obj, (ak.Array, ak.Record)):\r\n        ...\r\n    else:\r\n        # Allow future extensions of this mechanism\r\n        return NotImplemented\r\n```",
  "closed_at":"2023-09-01T20:13:25Z",
  "comments":2,
  "created_at":"2023-08-30T17:23:41Z",
  "draft":false,
  "id":1874088543,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZKYhr",
  "number":2682,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-01T20:13:25Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add support for custom picklers",
  "updated_at":"2023-09-01T20:13:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-09-19T03:12:22Z",
  "comments":6,
  "created_at":"2023-08-31T15:48:59Z",
  "draft":false,
  "id":1875803900,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZQNTR",
  "number":2683,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-19T03:12:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add ak_to_feather and ak_from_feather functions",
  "updated_at":"2024-01-18T17:20:49Z",
  "user":"MDQ6VXNlcjcwNDQxNjQx"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"These dependencies now support Python 3.11",
  "closed_at":"2023-09-01T16:53:24Z",
  "comments":1,
  "created_at":"2023-09-01T08:51:42Z",
  "draft":false,
  "id":1877021987,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZUWSe",
  "number":2684,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-01T16:53:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: bump numba and pyarrow test pins",
  "updated_at":"2023-09-01T16:53:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"- Bumps minimum C++ standard\r\n- Bumps awkward-cpp version\r\n- Fixes #2608 ",
  "closed_at":"2023-09-04T17:27:07Z",
  "comments":11,
  "created_at":"2023-09-01T12:59:14Z",
  "draft":false,
  "id":1877382848,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZVk33",
  "number":2685,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-04T17:27:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: bump C++ standard version",
  "updated_at":"2023-09-04T17:27:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\nawkward-cpp>=14\n\n### Description and code to reproduce\n\nOn a standard [Compute Canada](https://docs.alliancecan.ca/wiki/Narval/en) system (narval), with cmake 3.16.5, `pip install awkward-cpp==14` (and more recent) fails to install with:\r\n```console\r\n[wdconinc@narval2 ~]$ pip install awkward-cpp==14\r\nDefaulting to user installation because normal site-packages is not writeable\r\nLooking in links: /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo2020/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/avx2, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo2020/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/gentoo/generic, /cvmfs/soft.computecanada.ca/custom/python/wheelhouse/generic\r\nCollecting awkward-cpp==14\r\n  Downloading awkward-cpp-14.tar.gz (1.4 MB)\r\n     \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 1.4/1.4 MB 425.5 kB/s eta 0:00:00\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n  Preparing metadata (pyproject.toml) ... done\r\nRequirement already satisfied: numpy>=1.17.0 in ./.local/lib/python3.10/site-packages (from awkward-cpp==14) (1.25.2+computecanada)\r\nBuilding wheels for collected packages: awkward-cpp\r\n  Building wheel for awkward-cpp (pyproject.toml) ... error\r\n  error: subprocess-exited-with-error\r\n  \r\n  \u00d7 Building wheel for awkward-cpp (pyproject.toml) did not run successfully.\r\n  \u2502 exit code: 1\r\n  \u2570\u2500> [66 lines of output]\r\n      *** scikit-build-core 0.5.0 using CMake 3.16.5 (wheel)\r\n      *** Configuring CMake...\r\n      loading initial cache file build/cpython-310/CMakeInit.txt\r\n      -- The CXX compiler identification is GNU 9.3.0\r\n      -- Check for working CXX compiler: /cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/bin/c++\r\n      -- Check for working CXX compiler: /cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/bin/c++ -- works\r\n      -- Detecting CXX compiler ABI info\r\n      -- Detecting CXX compiler ABI info - done\r\n      -- Detecting CXX compile features\r\n      -- Detecting CXX compile features - done\r\n      -- CMake version 3.16.5\r\n      -- CMAKE_BUILD_TYPE = Release\r\n      CMake Error at header-only/CMakeLists.txt:40 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_STANDARD\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:40 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_STANDARD_REQUIRED\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:40 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_EXTENSIONS\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:45 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_STANDARD\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:45 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_STANDARD_REQUIRED\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:45 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_EXTENSIONS\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:45 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_STANDARD\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:45 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_STANDARD_REQUIRED\" is not allowed.\r\n      \r\n      \r\n      CMake Error at header-only/CMakeLists.txt:45 (set_target_properties):\r\n        INTERFACE_LIBRARY targets may only have whitelisted properties.  The\r\n        property \"CXX_EXTENSIONS\" is not allowed.\r\n      \r\n      \r\n      -- Found PythonInterp: /cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.10.2/bin/python3.10 (found suitable version \"3.10.2\", minimum required is \"3.6\")\r\n      -- Found PythonLibs: /cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.10.2/lib/libpython3.10.so\r\n      -- Performing Test HAS_FLTO\r\n      -- Performing Test HAS_FLTO - Success\r\n      -- Found pybind11: /tmp/pip-build-env-38ljjx0t/overlay/lib/python3.10/site-packages/pybind11/include (found version \"2.11.1\")\r\n      -- Configuring incomplete, errors occurred!\r\n      See also \"/tmp/pip-install-6i0hycy6/awkward-cpp_284fedb430ee4f8c901bd70159420b95/build/cpython-310/CMakeFiles/CMakeOutput.log\".\r\n      \r\n      *** CMake configuration failed\r\n      [end of output]\r\n  \r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  ERROR: Failed building wheel for awkward-cpp\r\nFailed to build awkward-cpp\r\nERROR: Could not build wheels for awkward-cpp, which is required to install pyproject.toml-based projects\r\n```\r\n\r\n## Possible cause\r\nThis may be caused by the target properties on the interface library at https://github.com/scikit-hep/awkward/blob/main/header-only/CMakeLists.txt#L41-L51, which have only been allowed since CMake 3.19 (here is the limited list allowed in 3.18: https://cmake.org/cmake/help/v3.18/manual/cmake-buildsystem.7.html#interface-libraries). Possible solution is to update the minimum CMake version to 3.19 for the header-only directory.",
  "closed_at":"2023-09-05T14:32:29Z",
  "comments":10,
  "created_at":"2023-09-01T19:00:18Z",
  "id":1877921678,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5v7s-O",
  "number":2686,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"awkward-cpp header-only requires cmake 3.19 due to INTERFACE_LIBRARY property whitelist",
  "updated_at":"2023-09-05T14:32:30Z",
  "user":"MDQ6VXNlcjQ2NTYzOTE="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Looking at #2686, seeing if it can be easily replicated before attempting fix.\n",
  "closed_at":"2023-09-02T15:09:33Z",
  "comments":2,
  "created_at":"2023-09-01T20:09:59Z",
  "draft":false,
  "id":1877993166,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZXqK5",
  "number":2687,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support CMake < 3.19",
  "updated_at":"2024-02-01T21:17:55Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Per [the wiki](https://github.com/scikit-hep/awkward/wiki#api-breaking-changes-after-20):\r\n\r\n- `typestr` argument will be removed from `Form` objects.\r\n- `Form.type_from_behavior(...)` will be removed in favour of `Form.type`.\r\n- `ak.typetracer.empty_if_typetracer` will be removed in favour of `ak.typetracer.length_zero_if_typetracer`.\r\n- `UnionArray.simplified`'s `merge` argument will be removed.\r\n- The built-in string and categorical behaviors will be removed. \r\n",
  "closed_at":"2023-09-04T18:43:38Z",
  "comments":3,
  "created_at":"2023-09-02T15:29:01Z",
  "draft":false,
  "id":1878733610,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZaBcR",
  "number":2688,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-04T18:43:38Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: remove deprecations for 1.4.0 release",
  "updated_at":"2023-09-04T18:43:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<h2>v3.5.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Use correct API url / endpoint in GHES by <a href=\"https://github.com/fhammerl\"><code>@\u200bfhammerl</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1289\">actions/checkout#1289</a> based on <a href=\"https://redirect.github.com/actions/checkout/issues/1286\">#1286</a> by <a href=\"https://github.com/1newsr\"><code>@\u200b1newsr</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.1...v3.5.2\">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>\n<h2>v3.5.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve checkout performance on Windows runners by upgrading <code>@\u200bactions/github</code> dependency by <a href=\"https://github.com/BrettDong\"><code>@\u200bBrettDong</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/BrettDong\"><code>@\u200bBrettDong</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@\u200bactions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@\u200bactions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@\u200bactions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/770\">Add input <code>set-safe-directory</code></a></li>\n</ul>\n<h2>v3.0.1</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-05T14:32:48Z",
  "comments":1,
  "created_at":"2023-09-04T17:57:39Z",
  "draft":false,
  "id":1880698539,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZgeXg",
  "number":2689,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-05T14:32:48Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump actions/checkout from 3 to 4",
  "updated_at":"2023-09-05T14:32:49Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.286 \u2192 v0.0.287](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.286...v0.0.287)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-09-05T14:52:14Z",
  "comments":1,
  "created_at":"2023-09-05T03:50:38Z",
  "draft":false,
  "id":1881136635,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Zh795",
  "number":2692,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-05T14:52:14Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-09-05T14:52:15Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR:\r\n- preserves `PlaceholderArray` instances between `ak.to_buffers` and `ak.from_buffers`\r\n- fixes pickling of `Singleton` objects like `NumpyLike` and `Backend`\r\n\r\nFixes #2674 ",
  "closed_at":"2023-09-05T16:08:51Z",
  "comments":1,
  "created_at":"2023-09-05T14:41:45Z",
  "draft":false,
  "id":1882124269,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZlRV_",
  "number":2693,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-05T16:08:51Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support placeholder arrays in `ArrayModuleNumpyLike.frombuffer`",
  "updated_at":"2023-09-05T16:08:52Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nWe recently made endianness explicit in Awkward Array, with `to_buffers` producing little-endian buffers, and `from_buffers` converting to the system byteorder.\r\n\r\nThis poses a problem on big-endian host systems that use e.g. CuPy, as CUDA devices are little-endian. \r\n\r\n\r\nReally, endianness is a device property. If we impose the constraints that\r\n- all buffers must belong to the same backend `X`\r\n- all buffers operated upon by `X` must have the same device endianness\r\n\r\nthen we can fix this by taking the desired endianness from the backend.\r\n",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-09-05T14:52:55Z",
  "id":1882144676,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5wLz-k",
  "number":2694,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Endianness is determined by host system, not backend",
  "updated_at":"2024-01-19T23:38:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.4.1\r\n\r\n### Description and code to reproduce\r\n\r\nStarting from investigation in: https://github.com/dask-contrib/dask-histogram/issues/100\r\n\r\n```python3\r\nimport hist\r\nimport numpy as np\r\nimport awkward as ak\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    ar = ak.Array(200*np.random.random((100_000, 3)).astype(np.float32) + 32)\r\n\r\n    electrons = ak.zip({\"pt\": ar})\r\n\r\n    combos = ak.combinations(electrons, 2, fields=[\"first\", \"second\"])\r\n\r\n    for _ in range(10):\r\n        x = hist.Hist.new.Variable([0, 10, 20, 30, 40, 80, 120, 200], name=\"x\").Double()\r\n        print(x.fill(x=ak.flatten(combos.second.pt)).values(flow=True))\r\n```\r\n\r\nresults in:\r\n```\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n[2.00000e+00 6.00000e+00 0.00000e+00 0.00000e+00 1.20520e+04 5.98710e+04\r\n 6.01770e+04 1.20042e+05 4.78500e+04]\r\n```\r\nNote there are no underflows or values less than 32 in the dataset.\r\n\r\nIf I print out `ak.flatten(combos.second.pt)` before the histogram filling step the error magically goes away.\r\nStill might be a histogramming issue.",
  "closed_at":"2023-09-06T19:24:08Z",
  "comments":7,
  "created_at":"2023-09-06T16:20:03Z",
  "id":1884353025,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5wUPIB",
  "number":2695,
  "performed_via_github_app":null,
  "reactions":{
   "eyes":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"zip + combinations clobbers data on x86?",
  "updated_at":"2023-09-06T19:24:08Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Also improve performance/fix dlpack for the same.",
  "closed_at":"2023-09-06T18:02:31Z",
  "comments":2,
  "created_at":"2023-09-06T17:51:56Z",
  "draft":false,
  "id":1884490262,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZtWHi",
  "number":2696,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: implement dlpack-device for ArrayBuilder",
  "updated_at":"2023-09-17T16:18:04Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In the words of Taylor Swift, I'm the problem \u2014 it's me.\r\n\r\nIn #2649, I exposed a DLPack view of Awkward Arrays, alongside the `__array_interface__` and `__cuda_array_interface__` properties. However, these are supposed to be zero copy, and non-owned views. As such, we can't return local temporary copies that leave scope. \r\n\r\nSo, whoops, and here's a fix: we don't support DLPack or CUDA views of Awkward Arrays; they need to be explicitly converted to user-referenced backend arrays.",
  "closed_at":"2023-09-06T19:24:07Z",
  "comments":4,
  "created_at":"2023-09-06T18:28:58Z",
  "draft":false,
  "id":1884539695,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Ztg18",
  "number":2697,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-06T19:24:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: drop zero-cost views of `ak.Array`",
  "updated_at":"2023-09-06T19:24:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Noticed by @danielballan in https://github.com/bluesky/tiled/pull/549#issuecomment-1709418865.",
  "closed_at":"2023-09-08T06:42:47Z",
  "comments":2,
  "created_at":"2023-09-07T17:22:01Z",
  "draft":false,
  "id":1886309251,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ZzgWW",
  "number":2699,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-08T06:42:46Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"docs: update obsolete comment in docs (relevant only in v1).",
  "updated_at":"2023-09-08T06:42:47Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Over in bluesky/tiled#549, there's a need to perform a minimal read of an Awkward Array that's already in `to_buffers` form. This scenario, slicing an array on the server itself, differs from the dask-awkward partial-read case, in that the array form is allowed (and expected) to change with the slice operation.\r\n\r\nOur simplification logic has the ability to merge buffers e.g. if a union is no longer canonical. This means that this simplification step needs to happen _after_ the data have been read from disk. Upon discussing this with @jpivarski, we concluded that it would be useful to manipulate the form on the client, and perform a `from_buffers` that performs this simplification during reading.\r\n\r\nThis PR adds `ak.from_non_simplified_buffers`. @jpivarski suggested making this \"hidden\" as an L2 function. Whilst it still remains L2 by designation, I think the name is sufficient to export it in the `ak.operations` namespace and to publish the documentation. Our L2 layouts already introduce the `simplified` convention, so it should be clear what this function does.",
  "closed_at":"2023-09-09T19:37:12Z",
  "comments":5,
  "created_at":"2023-09-08T07:25:43Z",
  "draft":false,
  "id":1887111368,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5Z2ORZ",
  "number":2700,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: expose `ak.from_non_simplified_buffers`",
  "updated_at":"2023-09-17T16:18:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\n2.4.2\n\n### Description and code to reproduce\n\nSomething changed recently; this is a new error in the Coffea CI.\r\n\r\nhttps://github.com/CoffeaTeam/coffea/actions/runs/6113711628/job/16593791360?pr=891#step:10:249\r\n\r\n```\r\nevents = dask.awkward<from-uproot, npartitions=1>\r\n\r\n    def test_listify(events):\r\n>       assert ak.to_list(events.CaloJet02[0].compute())\r\n\r\ntests\\test_nanoevents_delphes.py:24: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\base.py:314: in compute\r\n    (result,) = compute(self, traverse=False, **kwargs)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\base.py:599: in compute\r\n    results = schedule(dsk, keys, **kwargs)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\threaded.py:89: in get\r\n    results = get_async(\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\local.py:511: in get_async\r\n    raise_exception(exc, tb)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\local.py:319: in reraise\r\n    raise exc\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\local.py:224: in execute_task\r\n    result = _execute_task(task, data)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\core.py:119: in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\optimization.py:990: in __call__\r\n    return core.get(self.dsk, self.outkey, dict(zip(self.inkeys, args)))\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\core.py:149: in get\r\n    result = _execute_task(task, cache)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\core.py:119: in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\core.py:119: in <genexpr>\r\n    return func(*(_execute_task(a, cache) for a in args))\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask\\core.py:119: in _execute_task\r\n    return func(*(_execute_task(a, cache) for a in args))\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\uproot\\_dask.py:933: in __call__\r\n    dask_awkward.lib.unproject_layout.unproject_layout(\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask_awkward\\lib\\unproject_layout.py:408: in unproject_layout\r\n    return _unproject_layout(form, layout, layout.length, layout.backend)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask_awkward\\lib\\unproject_layout.py:[275](https://github.com/CoffeaTeam/coffea/actions/runs/6113711628/job/16593791360?pr=891#step:10:276): in _unproject_layout\r\n    _unproject_layout(form.content(field), None, length, backend)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask_awkward\\lib\\unproject_layout.py:189: in _unproject_layout\r\n    _unproject_layout(form.content, None, unknown_length, backend),\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask_awkward\\lib\\unproject_layout.py:209: in _unproject_layout\r\n    [\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask_awkward\\lib\\unproject_layout.py:210: in <listcomp>\r\n    _unproject_layout(content, None, length, backend)\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\dask_awkward\\lib\\unproject_layout.py:194: in _unproject_layout\r\n    return RegularArray(\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <[AttributeError(\"'RegularArray' object has no attribute '_size'\") raised in repr()] RegularArray object at 0x1859835d4f0>\r\ncontent = <[AssertionError() raised in repr()] NumpyArray object at 0x1859835d430>\r\nsize = 5, zeros_length = awkward._nplikes.shape.unknown_length\r\n\r\n    def __init__(self, content, size, zeros_length=0, *, parameters=None):\r\n        if not isinstance(content, Content):\r\n            raise TypeError(\r\n                \"{} 'content' must be a Content subtype, not {}\".format(\r\n                    type(self).__name__, repr(content)\r\n                )\r\n            )\r\n        if size is unknown_length:\r\n            if content.backend.index_nplike.known_data:\r\n                raise TypeError(\r\n                    \"{} 'size' must be a non-negative integer for backends with known shapes, not None\".format(\r\n                        type(self).__name__\r\n                    )\r\n                )\r\n        else:\r\n            if not (is_integer(size) and size >= 0):\r\n                raise TypeError(\r\n                    \"{} 'size' must be a non-negative integer, not {}\".format(\r\n                        type(self).__name__, size\r\n                    )\r\n                )\r\n    \r\n        if zeros_length is unknown_length:\r\n            if content.backend.index_nplike.known_data:\r\n>               raise TypeError(\r\n                    \"{} 'zeros_length' must be a non-negative integer for backends with known shapes, not None\".format(\r\n                        type(self).__name__\r\n                    )\r\n                )\r\nE               TypeError: RegularArray 'zeros_length' must be a non-negative integer for backends with known shapes, not None\r\n\r\nC:\\hostedtoolcache\\windows\\Python\\3.8.10\\x64\\lib\\site-packages\\awkward\\contents\\regulararray.py:133: TypeError\r\n```\r\n\r\n(This is not a Windows-specific error.)",
  "closed_at":"2024-01-17T15:08:37Z",
  "comments":3,
  "created_at":"2023-09-08T14:37:15Z",
  "id":1887813199,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5whb5P",
  "number":2701,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Blocking issue for Coffea: RegularArrays from Delphes ROOT files NanoEvents",
  "updated_at":"2024-01-17T15:08:37Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\n\nOne issue: Awkward uses NumPy's `datetime64` and `timedelta64`, which are not _exactly_ the same as Arrow's date-time types.\r\n\r\n[NumPy's date-time types](https://numpy.org/doc/stable/reference/arrays.datetime.html) are all 64-bit, have very flexible units, and no (meaningful) timezones. (Timezone parsing is deprecated and will be an error in the future.) There is a `NaT` (not a time) value in the space, much like floating point types. The units can be _any integer multiple_ of any of the following units, by prepending them with an integer:\r\n\r\n* `Y`: year; `datetime64[Y]` are variable-length when converted to days or smaller units, depending on leap years, but conversions to months are always 1 year = 12 months and conversions to weeks are always 1 year = 52 weeks, and `timedelta64[Y]` are always 1 year = 365 days.\r\n* `M`: month; `datetime64[M]` are variable-length when converted to days or smaller units, since \"30 days hath September...\", but conversions to weeks are always 1 month = 4 weeks and `timedelta64[M]` are always 1 month = 30 days.\r\n* `W`: week, exactly 7 days\r\n* `D`: day, exactly 24 hours\r\n* `h`: hour, exactly 60 minutes\r\n* `m`: minute, exactly 60 seconds\r\n* `s`: second, exactly 1000 milliseconds\r\n* `ms`: millisecond, exactly 1000 microseconds\r\n* `us` or `\u03bcs`: microsecond, exactly 1000 nanoseconds\r\n* `ns`: nanosecond, exactly 1000 picoseconds\r\n* `ps`: picosecond, exactly 1000 femtoseconds\r\n* `fs`: femtosecond, exactly 1000 attoseconds\r\n* `as`: attosecond\r\n\r\nNumPy's `datetime64` is always anchored on 1970-01-01 (like UNIX), so different units imply specific timespans.\r\n\r\nArrow has 32-bit and 64-bit date, time, and duration types:\r\n\r\n* [date32](https://arrow.apache.org/docs/python/generated/pyarrow.date32.html): units are days, anchored on 1970-01-01\r\n* [date64](https://arrow.apache.org/docs/python/generated/pyarrow.date64.html): units are milliseconds, anchored on 1970-01-01\r\n* [time32](https://arrow.apache.org/docs/python/generated/pyarrow.time32.html): units are seconds (`s`) or milliseconds (`ms`), anchored on midnight\u2014not a date!\r\n* [time64](https://arrow.apache.org/docs/python/generated/pyarrow.time64.html): units are microseconds (`us`) or nanoseconds (`ns`), anchored on midnight\u2014not a date!\r\n* [duration](https://arrow.apache.org/docs/python/generated/pyarrow.duration.html): like `timedelta64`, but units can only be seconds (`s`), milliseconds (`ms`), microseconds (`us`), or nanoseconds (`ns`).\r\n\r\nSo, should NumPy `datetime64` and `timedelta64` be converted to Arrow's much more limited set of units on demand, or should we raise an exception when a unit is not available in Arrow? This decision should take into account NumPy's unit prefactors, like `timedelta64[25ns]`.\r\n\r\nCan we just not use the time-types at all, since they're not anchored on an absolute date? That would leave us with only one conversion target for `datetime64`: only `date64` in milliseconds, no other units.\r\n\r\nDo Arrow's datetime types have a concept of `NaT` (not a time)? What happens in the situations in which NumPy would return a `NaT`?\r\n\r\nIt seems that Arrow dates are timezone-aware, or at least that they can be.\r\n\r\nDoes Arrow behave the same way with regard to [NumPy's lack of leap seconds](https://numpy.org/doc/stable/reference/arrays.datetime.html#datetime64-shortcomings)?\r\n\r\n## Potentially useful functions to expose:\r\n\r\n### Temporal component extraction\r\n\r\n* [day](https://arrow.apache.org/docs/python/generated/pyarrow.compute.day.html#pyarrow.compute.day)\r\n* [day_of_week](https://arrow.apache.org/docs/python/generated/pyarrow.compute.day_of_week.html#pyarrow.compute.day_of_week)\r\n* [day_of_year](https://arrow.apache.org/docs/python/generated/pyarrow.compute.day_of_year.html#pyarrow.compute.day_of_year)\r\n* [hour](https://arrow.apache.org/docs/python/generated/pyarrow.compute.hour.html#pyarrow.compute.hour)\r\n* [iso_week](https://arrow.apache.org/docs/python/generated/pyarrow.compute.iso_week.html#pyarrow.compute.iso_week)\r\n* [iso_year](https://arrow.apache.org/docs/python/generated/pyarrow.compute.iso_year.html#pyarrow.compute.iso_year)\r\n* [iso_calendar](https://arrow.apache.org/docs/python/generated/pyarrow.compute.iso_calendar.html#pyarrow.compute.iso_calendar)\r\n* [is_leap_year](https://arrow.apache.org/docs/python/generated/pyarrow.compute.is_leap_year.html#pyarrow.compute.is_leap_year)\r\n* [microsecond](https://arrow.apache.org/docs/python/generated/pyarrow.compute.microsecond.html#pyarrow.compute.microsecond)\r\n* [millisecond](https://arrow.apache.org/docs/python/generated/pyarrow.compute.millisecond.html#pyarrow.compute.millisecond)\r\n* [minute](https://arrow.apache.org/docs/python/generated/pyarrow.compute.minute.html#pyarrow.compute.minute)\r\n* [month](https://arrow.apache.org/docs/python/generated/pyarrow.compute.month.html#pyarrow.compute.month)\r\n* [nanosecond](https://arrow.apache.org/docs/python/generated/pyarrow.compute.nanosecond.html#pyarrow.compute.nanosecond)\r\n* [quarter](https://arrow.apache.org/docs/python/generated/pyarrow.compute.quarter.html#pyarrow.compute.quarter)\r\n* [second](https://arrow.apache.org/docs/python/generated/pyarrow.compute.second.html#pyarrow.compute.second)\r\n* [subsecond](https://arrow.apache.org/docs/python/generated/pyarrow.compute.subsecond.html#pyarrow.compute.subsecond)\r\n* [us_week](https://arrow.apache.org/docs/python/generated/pyarrow.compute.us_week.html#pyarrow.compute.us_week)\r\n* [us_year](https://arrow.apache.org/docs/python/generated/pyarrow.compute.us_year.html#pyarrow.compute.us_year)\r\n* [week](https://arrow.apache.org/docs/python/generated/pyarrow.compute.week.html#pyarrow.compute.week)\r\n* [year](https://arrow.apache.org/docs/python/generated/pyarrow.compute.year.html#pyarrow.compute.year)\r\n* [year_month_day](https://arrow.apache.org/docs/python/generated/pyarrow.compute.year_month_day.html#pyarrow.compute.year_month_day)\r\n\r\n### Temporal difference\r\n\r\n* [day_time_interval_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.day_time_interval_between.html#pyarrow.compute.day_time_interval_between)\r\n* [days_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.days_between.html#pyarrow.compute.days_between)\r\n* [hours_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.hours_between.html#pyarrow.compute.hours_between)\r\n* [microseconds_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.microseconds_between.html#pyarrow.compute.microseconds_between)\r\n* [milliseconds_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.milliseconds_between.html#pyarrow.compute.milliseconds_between)\r\n* [minutes_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.minutes_between.html#pyarrow.compute.minutes_between)\r\n* [month_day_nano_interval_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.month_day_nano_interval_between.html#pyarrow.compute.month_day_nano_interval_between)\r\n* [month_interval_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.month_interval_between.html#pyarrow.compute.month_interval_between)\r\n* [nanoseconds_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.nanoseconds_between.html#pyarrow.compute.nanoseconds_between)\r\n* [quarters_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.quarters_between.html#pyarrow.compute.quarters_between)\r\n* [seconds_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.seconds_between.html#pyarrow.compute.seconds_between)\r\n* [weeks_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.weeks_between.html#pyarrow.compute.weeks_between)\r\n* [years_between](https://arrow.apache.org/docs/python/generated/pyarrow.compute.years_between.html#pyarrow.compute.years_between)\r\n\r\n### Timezone handling\r\n\r\n* [assume_timezone](https://arrow.apache.org/docs/python/generated/pyarrow.compute.assume_timezone.html#pyarrow.compute.assume_timezone): naive timestamp \u2192 timezone-aware timestamp\r\n\r\nWe might want to simplify the set of functions here. For instance, maybe we should have a single `ak.dt.component_extract` for all of the temporal component extraction routines with a required argument (enum string) to pick the right unit. Similarly for `ak.dt.between` (temporal difference).\r\n\r\nThe `assume_timezone` function converts from a naive timestamp to a timezone-aware timestamp, but what about the other direction? Does Arrow carry the timezone with the array, so the normal workflow would be to attach a timezone to an array of timestamps, then the temporal difference functions compute timezone-aware differences? (Those can even reverse their sign if they overlap the hour before or after the daylight savings switch.)\r\n\r\nI don't see any of these functions using Arrow's `duration` type. All of the temporal difference functions specify a unit, and therefore should be returning integers. Is `duration` only used in the result of a subtraction of two date-types or time-types?\r\n\r\nWhen a temporal difference function is used on time-types, rather than (anchored) date-types, it could either cycle around midnight or not. (Actually, it could cycle any integer number of times, though no one would be interested in anything but zero times or one time.) For instance, is the number of minutes between 12:05am and 11:55pm equal to 10 or is it equal to -1430? (We couldn't use that feature anyway, because we're coming from NumPy's types, which don't have this potentially cyclic \"time of day\" concept.)\r\n\r\n## NumPy also has some useful functions\r\n\r\nThese seem to provide different functionality than anything in the Arrow suite, so we might want to provide both. NumPy's functions are mostly about counting business days (skipping weekends and a provided list of holiday dates).\r\n\r\n* [busday_offset](https://numpy.org/doc/stable/reference/generated/numpy.busday_offset.html#numpy.busday_offset)\r\n* [is_busday](https://numpy.org/doc/stable/reference/generated/numpy.is_busday.html#numpy.is_busday)\r\n* [busday_count](https://numpy.org/doc/stable/reference/generated/numpy.busday_count.html#numpy.busday_count)\r\n\r\nSo... a lot of corner cases to check and choices to be made.\r\n\r\ncc: @martindurant ",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-09-08T16:01:41Z",
  "id":1887948585,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5wh88p",
  "number":2702,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Pass Arrow date functions through ak.dt.*, similar to string functions in ak.str.*",
  "updated_at":"2023-09-08T16:01:41Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Description of new feature\n\nAlthough [pyarrow.compute.unique](https://arrow.apache.org/docs/python/generated/pyarrow.compute.unique.html) and [pyarrow.compute.value_counds](https://arrow.apache.org/docs/python/generated/pyarrow.compute.value_counts.html) work for many data types, we could use them on strings only in the `ak.str.*` namespace.\r\n\r\nWhy not use them in general? Outside of the `ak.str.*` (and possible `ak.dt.*`) namespace, it would be surprising to encounter a function that does not work due to pyarrow not being installed. Also, I don't know how these functions would define equality for lists and records, with or without missing values. We'd want to know what semantics we're imposing.\r\n\r\nWe can already implement uniqueness and unique counts of primitive types with sorting and `ak.run_lengths`, so that wouldn't be a _new_ ability. Doing uniqueness-counting on strings is an especially useful case; it would be a positive asset to add even that one case.\r\n\r\nI must have overlooked it when scanning through lists of string functions; they're categorized differently. Are there any other functions that we could use in a string-only context in `ak.str.*`? ",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-09-08T16:45:15Z",
  "id":1888012851,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5wiMoz",
  "number":2703,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"uniques and distinct_counts in ak.str.*",
  "updated_at":"2024-01-17T15:02:39Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nWhen iterating over an Awkward Array of strings in Numba, we present them as Numba's internal lowered string objects, but we do it by creating Python strings (new `PyObject*` object, which has to be DECREFed and GIL-protected).\r\n\r\nhttps://github.com/scikit-hep/awkward/blob/461b990ede92a2b113628c97a33cf8a1d887c2ff/src/awkward/_connect/numba/layout.py#L74-L89\r\n\r\nThe above implementation uses `pyapi.to_native_value` to avoid having to even know what Numba's lowered string type is, but Numba does have a lowered string type.\r\n\r\nI think it's the `nb.types.UnicodeType`, which has a concrete instantiation as `nb.types.unicode_type`. For the equivalent of a Python `bytes`, there's `nb.types.Bytes`, but I don't know if that one has a concrete instantiation.\r\n\r\n---------------\r\n\r\nThis seems to be the way to make a `nb.types.Bytes` object, in a lowered context:\r\n\r\nhttps://github.com/numba/numba/blob/f4c4afcb180193064a0c985246c7c71d007c6b1d/numba/cpython/charseq.py#L222-L237\r\n\r\nThere's a `_make_constant_bytes` helper that would show how to do that. But also notice that it's extracting data from the `UnicodeType` by `create_struct_proxy`, so maybe `UnicodeType` is just a `StructModel` with fields `data` and `kind`.\r\n\r\nAha, here's the full `StructModel`:\r\n\r\nhttps://github.com/numba/numba/blob/f4c4afcb180193064a0c985246c7c71d007c6b1d/numba/cpython/unicode.py#L77-L90\r\n\r\nThe `pyapi.to_native_value` that I was using is probably [numba.cpython.unicode.unbox_unicode_str](https://github.com/numba/numba/blob/f4c4afcb180193064a0c985246c7c71d007c6b1d/numba/cpython/unicode.py#L175-L195), which gives a hint about how to set all of those fields (maybe need to follow [numba.core.pythonapi.string_as_string_size_and_kind](https://github.com/numba/numba/blob/f4c4afcb180193064a0c985246c7c71d007c6b1d/numba/core/pythonapi.py#L1105-L1133) for the definitions).\r\n\r\nNeed to get the reference-counts right, and they're not Python reference counts (NRT).\r\n\r\nProbably still need to allocate memory for the Numba unicode object and copy the data from the Awkward Array into it, rather than anything zero-copy. Numba will try to delete that memory when the unicode object goes out of scope.\r\n\r\nNumba's unicode type has all of the unicode functions, like the ones we imported from Arrow in `ak.str.*`. It would be interesting to do a race between them, recognizing that the Arrow functions do not need to copy string data and the Numba functions do.\r\n\r\ncc @martindurant and @douglasdavis ",
  "closed_at":null,
  "comments":2,
  "created_at":"2023-09-08T17:11:39Z",
  "id":1888045178,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5wiUh6",
  "number":2704,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Stop making Numba strings through PyObject*",
  "updated_at":"2024-01-19T23:39:28Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black-pre-commit-mirror: 23.7.0 \u2192 23.9.1](https://github.com/psf/black-pre-commit-mirror/compare/23.7.0...23.9.1)\n- [github.com/astral-sh/ruff-pre-commit: v0.0.287 \u2192 v0.0.288](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.287...v0.0.288)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-09-19T03:19:01Z",
  "comments":1,
  "created_at":"2023-09-12T04:43:11Z",
  "draft":false,
  "id":1891660032,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aFYYB",
  "number":2705,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-19T03:19:01Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-09-19T03:19:02Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [aws-actions/configure-aws-credentials](https://github.com/aws-actions/configure-aws-credentials) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aws-actions/configure-aws-credentials/releases\">aws-actions/configure-aws-credentials's releases</a>.</em></p>\n<blockquote>\n<h2>v4</h2>\n<p>This tag tracks the latest v4.x.x release</p>\n<h2>v4.0.0</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v4.0.0/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v3.0.2</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v3.0.2/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n<h2>v3.0.1</h2>\n<p>See the <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/v3.0.1/CHANGELOG.md\">changelog</a> for details about the changes included in this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aws-actions/configure-aws-credentials/blob/main/CHANGELOG.md\">aws-actions/configure-aws-credentials's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v3.0.0...v3.0.1\">3.0.1</a> (2023-08-24)</h2>\n<h3>Features</h3>\n<ul>\n<li>Can configure <code>special-characters-workaround</code> to keep retrying credentials if the returned\ncredentials have special characters (Fixes <a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/599\">#599</a>)</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Fixes <a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/792\">#792</a>: Action fails when intending to use existing credentials</li>\n<li>Minor typo fix from <a href=\"https://github.com/ubaid-ansari21\"><code>@\u200bubaid-ansari21</code></a></li>\n</ul>\n<h3>Changes to existing functionality</h3>\n<ul>\n<li>Special characters are now allowed in returned credential variables unless you configure the\n<code>special-characters-workaround</code> option</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2.2.0...v3.0.0\">3.0.0</a> (2023-08-21)</h2>\n<h3>Features</h3>\n<ul>\n<li>Can configure <code>max-retries</code> and <code>disable-retry</code> to modify retry functionality when the assume role call fails</li>\n<li>Set returned credentials as step outputs with <code>output-credentials</code></li>\n<li>Clear AWS related environment variables at the start of the action with <code>unset-current-credentials</code></li>\n<li>Unique role identifier is now printed in the workflow logs</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Can't use credentials if they contain a special character</li>\n<li>Retry functionality added when generating the JWT fails</li>\n<li>Can now use <code>webIdentityTokenFile</code> option</li>\n<li>Branch name validation too strict</li>\n<li>JS SDK v2 deprecation warning in workflow logs</li>\n</ul>\n<h3>Changes to existing functionality</h3>\n<ul>\n<li>Default session duration is now 1 hour in all cases (from 6 hours in some cases)</li>\n<li>Account ID will not be masked by default in logs</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2.1.0...v2.2.0\">2.2.0</a> (2023-05-31)</h2>\n<h3>Features</h3>\n<ul>\n<li><code>inline-session-policy</code> prop enables assuming a role with inline session policies (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/d00f6c6f41fde02a9fd0d469040be6ed0df69e73\">d00f6c6</a>)</li>\n<li><code>managed-session-policies</code> prop enables assuming a role with managed policy arns (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/d00f6c6f41fde02a9fd0d469040be6ed0df69e73\">d00f6c6</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v2.0.0...v2.1.0\">2.1.0</a> (2023-05-31)</h2>\n<h3>Features</h3>\n<ul>\n<li><code>role-chaining</code> prop enables role chaining use case (<a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/6fbd316fd15f52c3d9f68e7aa06eae4f5699a518\">6fbd316</a>)</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.7.0...v2.0.0\">2.0.0</a> (2023-03-06)</h2>\n<h3>Features</h3>\n<ul>\n<li>Version bump to use Node 16 by default.</li>\n</ul>\n<h2><a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v1.6.1...v1.7.0\">1.7.0</a> (2022-08-03)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aws-actions/configure-aws-credentials/commit/8c3f20df09ac63af7b3ae3d7c91f105f857d8497\"><code>8c3f20d</code></a> chore: release v4 (<a href=\"https://redirect.github.com/aws-actions/configure-aws-credentials/issues/840\">#840</a>)</li>\n<li>See full diff in <a href=\"https://github.com/aws-actions/configure-aws-credentials/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aws-actions/configure-aws-credentials&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-19T03:06:58Z",
  "comments":1,
  "created_at":"2023-09-12T17:25:52Z",
  "draft":false,
  "id":1892953719,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aJzMF",
  "number":2706,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-19T03:06:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump aws-actions/configure-aws-credentials from 3 to 4",
  "updated_at":"2023-09-19T03:06:59Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [docker/setup-qemu-action](https://github.com/docker/setup-qemu-action) from 2.2.0 to 3.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/docker/setup-qemu-action/releases\">docker/setup-qemu-action's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>Node 20 as default runtime (requires <a href=\"https://github.com/actions/runner/releases/tag/v2.308.0\">Actions Runner v2.308.0</a> or later) by <a href=\"https://github.com/crazy-max\"><code>@\u200bcrazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/102\">docker/setup-qemu-action#102</a></li>\n<li>Bump <code>@\u200bactions/core</code> from 1.10.0 to 1.10.1 in <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/103\">docker/setup-qemu-action#103</a></li>\n<li>Bump semver from 6.3.0 to 6.3.1 in <a href=\"https://redirect.github.com/docker/setup-qemu-action/pull/89\">docker/setup-qemu-action#89</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-qemu-action/compare/v2.2.0...v3.0.0\">https://github.com/docker/setup-qemu-action/compare/v2.2.0...v3.0.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/68827325e0b33c7199eb31dd4e31fbe9023e06e3\"><code>6882732</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/103\">#103</a> from docker/dependabot/npm_and_yarn/actions/core-1.10.1</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/183f4af5043c24c5dcd58e6e9868b7df0a201a17\"><code>183f4af</code></a> chore: update generated content</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/f17493529ee8f8b9fd58ed31aa1e9816c8345eb8\"><code>f174935</code></a> build(deps): bump <code>@\u200bactions/core</code> from 1.10.0 to 1.10.1</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/2e423eb50075d10a6af463e39e267d4057cc07bb\"><code>2e423eb</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/89\">#89</a> from docker/dependabot/npm_and_yarn/semver-6.3.1</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/ecc406afa7d79acce0ed8a04bb5eb086136fd000\"><code>ecc406a</code></a> Bump semver from 6.3.0 to 6.3.1</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/12dec5e201ab2f6dbea47c28f4a138590189069a\"><code>12dec5e</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-qemu-action/issues/102\">#102</a> from crazy-max/update-node20</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/c29b31213096fed2f8b8b36e66385d52653bf332\"><code>c29b312</code></a> chore: node 20 as default runtime</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/34ae628c8f4fb0d5c8921b9a0ffa9dcf66120c07\"><code>34ae628</code></a> chore: update generated content</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/1f3d2e1ac09548bbfb7d44b1809ac66e3d551ea4\"><code>1f3d2e1</code></a> chore: fix author in package.json</li>\n<li><a href=\"https://github.com/docker/setup-qemu-action/commit/277dbe8c9c1990b42dc38cb1f35a593889a31a62\"><code>277dbe8</code></a> vendor: bump <code>@\u200bdocker/actions-toolkit</code> from 0.3.0 to 0.12.0</li>\n<li>Additional commits viewable in <a href=\"https://github.com/docker/setup-qemu-action/compare/v2.2.0...v3.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=docker/setup-qemu-action&package-manager=github_actions&previous-version=2.2.0&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-19T03:10:50Z",
  "comments":1,
  "created_at":"2023-09-12T17:25:55Z",
  "draft":false,
  "id":1892953797,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aJzNO",
  "number":2707,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-19T03:10:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump docker/setup-qemu-action from 2.2.0 to 3.0.0",
  "updated_at":"2023-09-19T03:10:51Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nI thought that there was a strong reason _to_ do this, but I ran into a case where mixing `runtime_checkable` and `Protocol` from the two libraries raised an exception. ",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-09-12T17:34:15Z",
  "id":1892965969,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5w1F5R",
  "number":2708,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Should we be mixing `typing` and `typing_extensions`?",
  "updated_at":"2024-01-03T15:32:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.4.2\r\n\r\n### Description and code to reproduce\r\n\r\nWorking on usage of https://github.com/dask-contrib/dask-awkward/pull/94 and I've come across an issue in `ak.from_json` which is raising from `ak_from_buffers`:\r\n\r\n```\r\nTypeError: size of array (360) is less than size of form (7234)\r\n```\r\n\r\nreproducer:\r\n\r\n(The schema is meant to produce an array of records with top level field \"payload\" which contains a subfield \"pull_request\" that is either null or has subfield \"merged_at\" that is either a string or null.)\r\n\r\n```python\r\nIn [15]: schema = {\r\n    ...:     \"title\": \"untitled\",\r\n    ...:     \"description\": \"Auto generated by dask-awkward\",\r\n    ...:     \"type\": \"object\",\r\n    ...:     \"properties\": {\r\n    ...:         \"payload\": {\r\n    ...:             \"type\": \"object\",\r\n    ...:             \"properties\": {\r\n    ...:                 \"pull_request\": {\r\n    ...:                     \"type\": [\"object\", \"null\"],\r\n    ...:                     \"properties\": {\"merged_at\": {\"type\": [\"string\", \"null\"]}},\r\n    ...:                 }\r\n    ...:             },\r\n    ...:         }\r\n    ...:     },\r\n    ...: }\r\n\r\nIn [16]: with fsspec.open(\r\n    ...:     \"https://data.gharchive.org/2015-01-01-10.json.gz\", compression=\"infer\", mode=\"rt\"\r\n    ...: ) as f:\r\n    ...:     array = ak.from_json(f.read(), line_delimited=True, schema=schema)\r\n```\r\n\r\nMore info:\r\n\r\nMy assumption is that because the field that is sandwiched by `payload` and `merged_at`, `pull_request`, is of type `object` or `null`, and only 360 of them are not null, something is going wrong with building the array of this nested nullable type. (I double checked the numbers via):\r\n\r\n```python\r\n# here array was created without schema=!)\r\nIn [19]: ak.drop_none(array.payload.pull_request)\r\nOut[19]: <Array [{url: ..., ...}, ..., {url: ..., ...}] type='360 * {url: string, id...'>\r\n```\r\n\r\nMore info on how I came across the issue via dask-awkward:\r\n\r\nThe schema can be created manually with dask-awkward code:\r\n\r\n```python\r\n# here array was created without schema=!)\r\nIn [21]: schema = dak.layout_to_jsonschema(\r\n    ...:     array[[\"payload\"], [\"pull_request\"], [\"merged_at\"]].layout\r\n    ...: )\r\n```\r\n\r\nThis is the same schema that gets created automatically by the column optimizer if we try use field access on a dak collection and run compute:\r\n\r\n\r\n```python\r\nIn [28]: dak_array = dak.from_json([\"https://data.gharchive.org/2015-01-01-10.json.gz\"])\r\n\r\nIn [29]: dak_array.payload.pull_request.merged_at.compute()\r\n```",
  "closed_at":"2023-09-26T21:31:58Z",
  "comments":1,
  "created_at":"2023-09-13T16:47:29Z",
  "id":1894902379,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5w8epr",
  "number":2709,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.from_json` with a `schema=` argument raises exception in `ak_from_buffers` due to size difference",
  "updated_at":"2023-09-26T21:31:58Z",
  "user":"MDQ6VXNlcjMyMDIwOTA="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR makes `unknown_length` use the singleton machinery so that it's trivially pickleable.",
  "closed_at":"2023-09-14T16:50:24Z",
  "comments":1,
  "created_at":"2023-09-14T08:23:10Z",
  "draft":false,
  "id":1896017155,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aUE0p",
  "number":2710,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-14T16:50:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: unpickling of `unknown_length`",
  "updated_at":"2023-09-14T16:50:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/codecov/codecov-action/releases\">codecov/codecov-action's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0-beta.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>not adding -n if empty to do-upload command by <a href=\"https://github.com/dana-yaish\"><code>@\u200bdana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1085\">codecov/codecov-action#1085</a></li>\n<li>4.0.0-beta.2 by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1086\">codecov/codecov-action#1086</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/codecov/codecov-action/compare/v4.0.0-beta.1...v4.0.0-beta.2\">https://github.com/codecov/codecov-action/compare/v4.0.0-beta.1...v4.0.0-beta.2</a></p>\n<h2>4.0.0-beta.1</h2>\n<p><code>v4</code> represents a move from the <a href=\"https://github.com/codecov/uploader\">universal uploader</a> to the <a href=\"https://github.com/codecov/codecov-cli\">Codecov CLI</a>. Although this will unlock new features for our users, the CLI is not yet at feature parity with the universal uploader.</p>\n<h2>Breaking Changes</h2>\n<ul>\n<li>No current support for <code>aarch64</code> and <code>alpine</code> architectures.</li>\n<li>Tokenless uploading is unsuported</li>\n<li>Various arguments to the Action have been removed</li>\n</ul>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps): bump openpgp from 5.8.0 to 5.9.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/985\">codecov/codecov-action#985</a></li>\n<li>build(deps): bump actions/checkout from 3.0.0 to 3.5.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1000\">codecov/codecov-action#1000</a></li>\n<li>build(deps): bump ossf/scorecard-action from 2.1.3 to 2.2.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1006\">codecov/codecov-action#1006</a></li>\n<li>build(deps): bump tough-cookie from 4.0.0 to 4.1.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1013\">codecov/codecov-action#1013</a></li>\n<li>build(deps-dev): bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1024\">codecov/codecov-action#1024</a></li>\n<li>build(deps): bump node-fetch from 3.3.1 to 3.3.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1031\">codecov/codecov-action#1031</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.1.4 to 20.4.5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1032\">codecov/codecov-action#1032</a></li>\n<li>build(deps): bump github/codeql-action from 1.0.26 to 2.21.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1033\">codecov/codecov-action#1033</a></li>\n<li>build commit,report and upload args based on codecovcli by <a href=\"https://github.com/dana-yaish\"><code>@\u200bdana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/943\">codecov/codecov-action#943</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.4.5 to 20.5.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1055\">codecov/codecov-action#1055</a></li>\n<li>build(deps): bump github/codeql-action from 2.21.2 to 2.21.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1051\">codecov/codecov-action#1051</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.3 to 20.5.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1058\">codecov/codecov-action#1058</a></li>\n<li>chore(deps): update outdated deps by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1059\">codecov/codecov-action#1059</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.4 to 20.5.6 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1060\">codecov/codecov-action#1060</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.4.1 to 6.5.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1065\">codecov/codecov-action#1065</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.4.1 to 6.5.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1064\">codecov/codecov-action#1064</a></li>\n<li>build(deps): bump actions/checkout from 3.5.3 to 3.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1063\">codecov/codecov-action#1063</a></li>\n<li>build(deps-dev): bump eslint from 8.47.0 to 8.48.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1061\">codecov/codecov-action#1061</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.6 to 20.5.7 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1062\">codecov/codecov-action#1062</a></li>\n<li>build(deps): bump openpgp from 5.9.0 to 5.10.1 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1066\">codecov/codecov-action#1066</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.7 to 20.5.9 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1070\">codecov/codecov-action#1070</a></li>\n<li>build(deps): bump github/codeql-action from 2.21.4 to 2.21.5 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1069\">codecov/codecov-action#1069</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.5.0 to 6.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1072\">codecov/codecov-action#1072</a></li>\n<li>Update README.md by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@\u200bthomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1073\">codecov/codecov-action#1073</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.5.0 to 6.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1071\">codecov/codecov-action#1071</a></li>\n<li>build(deps-dev): bump <code>@\u200bvercel/ncc</code> from 0.36.1 to 0.38.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1074\">codecov/codecov-action#1074</a></li>\n<li>build(deps): bump <code>@\u200bactions/core</code> from 1.10.0 to 1.10.1 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1081\">codecov/codecov-action#1081</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.6.0 to 6.7.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1080\">codecov/codecov-action#1080</a></li>\n<li>build(deps): bump actions/checkout from 3.6.0 to 4.0.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1078\">codecov/codecov-action#1078</a></li>\n<li>build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1077\">codecov/codecov-action#1077</a></li>\n<li>build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.9 to 20.6.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1075\">codecov/codecov-action#1075</a></li>\n<li>build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.6.0 to 6.7.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1079\">codecov/codecov-action#1079</a></li>\n<li>build(deps-dev): bump eslint from 8.48.0 to 8.49.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1076\">codecov/codecov-action#1076</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md\">codecov/codecov-action's changelog</a>.</em></p>\n<blockquote>\n<h2>4.0.0-beta.2</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/1085\">#1085</a> not adding -n if empty to do-upload command</li>\n</ul>\n<h2>4.0.0-beta.1</h2>\n<p><code>v4</code> represents a move from the <a href=\"https://github.com/codecov/uploader\">universal uploader</a> to the <a href=\"https://github.com/codecov/codecov-cli\">Codecov CLI</a>. Although this will unlock new features for our users, the CLI is not yet at feature parity with the universal uploader.</p>\n<h3>Breaking Changes</h3>\n<ul>\n<li>No current support for <code>aarch64</code> and <code>alpine</code> architectures.</li>\n<li>Tokenless uploading is unsuported</li>\n<li>Various arguments to the Action have been removed</li>\n</ul>\n<h2>3.1.4</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/967\">#967</a> Fix typo in README.md</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/971\">#971</a> fix: add back in working dir</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/969\">#969</a> fix: CLI option names for uploader</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/970\">#970</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.15.12 to 18.16.3</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/979\">#979</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 20.1.0 to 20.1.2</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/981\">#981</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 20.1.2 to 20.1.4</li>\n</ul>\n<h2>3.1.3</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/960\">#960</a> fix: allow for aarch64 build</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/957\">#957</a> build(deps-dev): bump jest-junit from 15.0.0 to 16.0.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/958\">#958</a> build(deps): bump openpgp from 5.7.0 to 5.8.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/959\">#959</a> build(deps-dev): bump <code>@\u200btypes/node</code> from 18.15.10 to 18.15.12</li>\n</ul>\n<h2>3.1.2</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/718\">#718</a> Update README.md</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/851\">#851</a> Remove unsupported path_to_write_report argument</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/898\">#898</a> codeql-analysis.yml</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/901\">#901</a> Update README to contain correct information - inputs and negate feature</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/955\">#955</a> fix: add in all the extra arguments for uploader</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/819\">#819</a> build(deps): bump openpgp from 5.4.0 to 5.5.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/835\">#835</a> build(deps): bump node-fetch from 3.2.4 to 3.2.10</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/840\">#840</a> build(deps): bump ossf/scorecard-action from 1.1.1 to 2.0.4</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/841\">#841</a> build(deps): bump <code>@\u200bactions/core</code> from 1.9.1 to 1.10.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/843\">#843</a> build(deps): bump <code>@\u200bactions/github</code> from 5.0.3 to 5.1.1</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/869\">#869</a> build(deps): bump node-fetch from 3.2.10 to 3.3.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/872\">#872</a> build(deps-dev): bump jest-junit from 13.2.0 to 15.0.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/879\">#879</a> build(deps): bump decode-uri-component from 0.2.0 to 0.2.2</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/c4cf8a4f03f0ac8585acb7c1b7ce3460ec15782f\"><code>c4cf8a4</code></a> 4.0.0-beta.2 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1086\">#1086</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/845c445181131d954f0198d3d0f26242acc0376e\"><code>845c445</code></a> not adding -n if empty to do-upload command (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1085\">#1085</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/0016507ac73abde47045262c5eb6a92f777322ec\"><code>0016507</code></a> chore(release): 4.0.0-beta.1 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1084\">#1084</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/c9e4b7326764720e2d95c3a9615d9e6ba7fc949f\"><code>c9e4b73</code></a> use cli instead of node uploader (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1068\">#1068</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/c9e0f0b3cf5f112462339d69850c01735114b9ed\"><code>c9e0f0b</code></a> build(deps-dev): bump eslint from 8.48.0 to 8.49.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1076\">#1076</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/da8479a5b3816abcdf6296d5595225c8c2822d27\"><code>da8479a</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/parser</code> from 6.6.0 to 6.7.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1079\">#1079</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/8e29a53ea65f98e97f4ad4594d355d8e8fd5bcfe\"><code>8e29a53</code></a> build(deps-dev): bump <code>@\u200btypes/node</code> from 20.5.9 to 20.6.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1075\">#1075</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/162bda9838a53b5f35a4ed175b035db48651c736\"><code>162bda9</code></a> build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1077\">#1077</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/46acd9de81204f09c57137e70b715375df52ea4c\"><code>46acd9d</code></a> build(deps): bump actions/checkout from 3.6.0 to 4.0.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1078\">#1078</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/904bf5a0317421edb11d2be9bbd857c58af7a673\"><code>904bf5a</code></a> build(deps-dev): bump <code>@\u200btypescript-eslint/eslint-plugin</code> from 6.6.0 to 6.7.0 (#...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/codecov/codecov-action/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov/codecov-action&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-19T21:16:13Z",
  "comments":2,
  "created_at":"2023-09-14T17:19:28Z",
  "draft":false,
  "id":1897001511,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aXbnH",
  "number":2711,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump codecov/codecov-action from 3 to 4",
  "updated_at":"2023-09-19T21:16:25Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"To do this, every object must now keep a table of which of their fields have been filled and ensure that the table is completely filled at the end of an object. This adds more cross-checking, so let's try to not slow it down too much.\r\n\r\nThis PR adds the following.\r\n\r\n* When setting up the instructions (not performance-critical), a bitmap `record_checklist_init_` is set to 0 everywhere other than positions for each field. (So if a record has $n$ fields, the $n$ least significant bits are 1 and the rest are 0.) Each record has its own checklist.\r\n* In the RapidJSON-SAX parser's `StartObject` step (encountered a `{`), `record_checklist_init_` is copied into `record_checklist_`.\r\n* Whenever we find an expected field in `find_key`, the bit corresponding to that field in `record_checklist_` is set to 0.\r\n* In the RapidJSON-SAX parser's `EndObject` step (encountered a `}`), we `|` all of the bits in `record_checklist_` and see if it's different from 0.\r\n\r\nWe use a bitmap because setting up the table and checking the table can be done 64 fields at a time, using the vectorization built into ordinary 64-bit registers. The \"copying `record_checklist_init_` into `record_checklist_`\" and \"checking to see if it's different from zero\" steps each only involves a single `uint64_t` if there are fewer than 64 fields.[^1]\r\n\r\nThere's some indirection because we have `std::vector<std::vector<uint64_t>>` but these vectors remain a single allocation in the performance-critical code; they should stay in CPU cache.\r\n\r\nDoing this required me to introduce \"record identifiers\" (to find the right element of the outer `std::vector`). Since that was the blocker for an unrelated optimization, optimistically guessing that the fields in data will have the same order as the required fields in the schema, I put that in as a test of the machinery and left it because it's an optimization.\r\n\r\nTasks remaining for this PR:\r\n\r\n- [x] When finding a field in `find_key`, make sure that its bit is not already set, to raise an error (by returning `-1`) whenever a required field is set more than once.\r\n- [x] When we reach the condition \"not all required fields were seen,\" iterate through the expected fields and fill any option-type fields with a missing value (two kinds: `FillIndexedOptionArray` and `FillByteMaskedArray`) and raise an error (by returning `false`) on any missing non-option-type fields. This case is allowed to be slow. The implementation could be complex and may need to be put off for another PR. It's also a policy choice: if a field is required but not present, should we really consider that okay because it's option-type?\r\n- [x] Lots of tests, including nested records and more than 64 fields in a record.\r\n- [x] Get rid of the big lookup tables. A bit-shift and inverse isn't going to hurt anybody. And maybe using up precious L1 space makes it worse, anyway.\r\n\r\n[^1]: No comment on getting 512 fields in one go by invoking AVX-512...",
  "closed_at":"2023-09-26T21:31:57Z",
  "comments":12,
  "created_at":"2023-09-15T21:52:05Z",
  "draft":false,
  "id":1899118581,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aekfl",
  "number":2712,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-26T21:31:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: catch cases in which fields required by a JSON schema are not in the JSON object",
  "updated_at":"2023-09-27T13:05:29Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR supersedes #2700 in simplify adding a new `allow_noncanonical_form` argument to `from_buffers`. This is a much more concise API change.",
  "closed_at":"2023-09-18T19:15:05Z",
  "comments":6,
  "created_at":"2023-09-17T16:15:18Z",
  "draft":false,
  "id":1899835100,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5agvOP",
  "number":2713,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-18T19:15:05Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: expose simplification from `ak.from_buffers`",
  "updated_at":"2023-09-20T11:33:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"With #2693 we support writing placeholder arrays using `to_buffers`, which is used for pickling re-hydrated arrays. This PR supports reading such arrays.\r\n\r\nBy design, this routine throws an error if a placeholder has an unknown length but a known length can be determined by the recursion; the caller should ensure that placeholders have valid lengths. We can relax this in future, but for now it makes things easier to reason about.",
  "closed_at":"2023-09-18T22:19:01Z",
  "comments":1,
  "created_at":"2023-09-17T16:22:03Z",
  "draft":false,
  "id":1899837265,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5agvpI",
  "number":2714,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-18T22:19:01Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support placeholders in `from_buffers`",
  "updated_at":"2023-09-18T22:19:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.288 \u2192 v0.0.290](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.288...v0.0.290)\n- [github.com/asottile/pyupgrade: v3.10.1 \u2192 v3.11.0](https://github.com/asottile/pyupgrade/compare/v3.10.1...v3.11.0)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-09-19T15:39:28Z",
  "comments":1,
  "created_at":"2023-09-19T04:10:01Z",
  "draft":false,
  "id":1902170447,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5aoqlU",
  "number":2715,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-19T15:39:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-09-19T15:39:29Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.15.0 to 2.16.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.16.0</h2>\n<ul>\n<li>\u2728 Add the ability to pass additional flags to a build frontend through the <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#build-frontend\">CIBW_BUILD_FRONTEND</a> option (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1588\">#1588</a>).</li>\n<li>\u2728 The environment variable SOURCE_DATE_EPOCH is now automatically passed through to container Linux builds (useful for <a href=\"https://reproducible-builds.org/docs/source-date-epoch/\">reproducible builds</a>!) (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1589\">#1589</a>)</li>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0rc2 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1604\">#1604</a>)</li>\n<li>\ud83d\udc1b Fix <code>requires_python</code> auto-detection from setup.py when the call to <code>setup()</code> is within an <code>if __name__ == &quot;__main__&quot;</code> block (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1613\">#1613</a>)</li>\n<li>\ud83d\udc1b Fix a bug that prevented building Linux wheels in Docker on a Windows host (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1573\">#1573</a>)</li>\n<li>\ud83d\udc1b <code>--only</code> can now select prerelease-pythons (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1564\">#1564</a>)</li>\n<li>\ud83d\udcda Docs &amp; examples updates (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1582\">#1582</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1593\">#1593</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1598\">#1598</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1615\">#1615</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.16.0</h3>\n<p><em>18 September 2023</em></p>\n<ul>\n<li>\u2728 Add the ability to pass additional flags to a build frontend through the <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#build-frontend\">CIBW_BUILD_FRONTEND</a> option (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1588\">#1588</a>).</li>\n<li>\u2728 The environment variable SOURCE_DATE_EPOCH is now automatically passed through to container Linux builds (useful for <a href=\"https://reproducible-builds.org/docs/source-date-epoch/\">reproducible builds</a>!) (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1589\">#1589</a>)</li>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0rc2 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1604\">#1604</a>)</li>\n<li>\ud83d\udc1b Fix <code>requires_python</code> auto-detection from setup.py when the call to <code>setup()</code> is within an `if <strong>name</strong> == &quot;<strong>main</strong>&quot; block (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1613\">#1613</a>)</li>\n<li>\ud83d\udc1b Fix a bug that prevented building Linux wheels in Docker on a Windows host (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1573\">#1573</a>)</li>\n<li>\ud83d\udc1b <code>--only</code> can now select prerelease-pythons (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1564\">#1564</a>)</li>\n<li>\ud83d\udcda Docs &amp; examples updates (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1582\">#1582</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1593\">#1593</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1598\">#1598</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1615\">#1615</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/a873dd9cbf9e3c4c73a1fd11ac31cf835f6eb502\"><code>a873dd9</code></a> Bump version: v2.16.0</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/e8ba0d49edd2845a1a46395921609f1b7a194bbf\"><code>e8ba0d4</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1615\">#1615</a> from pypa/dependabot/github_actions/docker/setup-qem...</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f0feaffbaabd508d48bb83b5d46b83cac7107181\"><code>f0feaff</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1613\">#1613</a> from henryiii/henryiii/fix/mainif</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/80a54b0226a8a4cc643bc24a968570871dd84364\"><code>80a54b0</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1589\">#1589</a> from dalcinl/source_date_epoch</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/76dba0b9ba3b5143ff833d8414b023ecf2ce8a90\"><code>76dba0b</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1588\">#1588</a> from pypa/frontend-flags</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/0954ffaa6586fffcdc720ab2b788ec1abcdf3481\"><code>0954ffa</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1618\">#1618</a> from pypa/rtd-update</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/753cbd1ca526543d317f0678fb5bc16018ed5ee9\"><code>753cbd1</code></a> Update RtD config to include mandatory build.os option</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/825d89818ab1c7ca0bb9b9781b0b9beb74925b6d\"><code>825d898</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1614\">#1614</a> from henryiii/henryiii/chore/minor</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f5e60d647fe700ba6e357c30376e8a48f91e5974\"><code>f5e60d6</code></a> fix: include examples too</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/adc991c47b1cb56b6de3bb052686f8081791b21b\"><code>adc991c</code></a> [Bot] Update dependencies (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1604\">#1604</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.15.0...v2.16.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.15.0&new-version=2.16.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-25T21:21:49Z",
  "comments":2,
  "created_at":"2023-09-19T17:04:38Z",
  "draft":false,
  "id":1903400675,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5as0Ff",
  "number":2716,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-25T21:21:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.15.0 to 2.16.0",
  "updated_at":"2023-09-25T21:21:50Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`ak.zeros_like` should support typetracer. This PR ensures that concrete buffers, such as those used in `zeros_like`, are supported. I didn't add support for using typetracer arrays here, because we don't yet need it.",
  "closed_at":"2023-09-27T19:24:35Z",
  "comments":1,
  "created_at":"2023-09-20T12:53:35Z",
  "draft":false,
  "id":1904935230,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ayAy4",
  "number":2718,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-27T19:24:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support concrete buffers in `TypeTracer.frombuffer`",
  "updated_at":"2023-09-27T19:24:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR makes it possible to format the `form_key`s assigned to typetracer buffers via `ak.typetracer.typetracer_with_report`. Although the default behaviour is unchanged, this permits us to ensure that buffer keys are unique within a typetracer layout.",
  "closed_at":"2023-09-22T20:11:57Z",
  "comments":1,
  "created_at":"2023-09-22T09:32:23Z",
  "draft":false,
  "id":1908546187,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5a-OUj",
  "number":2719,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-22T20:11:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `buffer_key` to `typetracer_with_report`",
  "updated_at":"2023-09-22T20:11:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":null,
  "comments":1,
  "created_at":"2023-09-25T13:28:29Z",
  "draft":true,
  "id":1911515733,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bIAiX",
  "number":2720,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"fix: rework to use numba typed list",
  "updated_at":"2024-02-01T21:57:00Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [amannn/action-semantic-pull-request](https://github.com/amannn/action-semantic-pull-request) from 5.2.0 to 5.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/releases\">amannn/action-semantic-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>v5.3.0</h2>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.2.0...v5.3.0\">5.3.0</a> (2023-09-25)</h2>\n<h3>Features</h3>\n<ul>\n<li>Use Node.js 20 in action (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/240\">#240</a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4c0d5a21fc86635c67cc57ffe89d842c34ade284\">4c0d5a2</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/blob/main/CHANGELOG.md\">amannn/action-semantic-pull-request's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.2.0...v5.3.0\">5.3.0</a> (2023-09-25)</h2>\n<h3>Features</h3>\n<ul>\n<li>Use Node.js 20 in action (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/240\">#240</a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4c0d5a21fc86635c67cc57ffe89d842c34ade284\">4c0d5a2</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/47b15d52c5c30e94a17ec87eb8dd51ff5221fed9\"><code>47b15d5</code></a> chore: Release 5.3.0 [skip ci]</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4c0d5a21fc86635c67cc57ffe89d842c34ade284\"><code>4c0d5a2</code></a> feat: Use Node.js 20 in action (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/240\">#240</a>)</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/00282d63cda40a6eaf3e9d0cbb1ac4384de896e8\"><code>00282d6</code></a> docs: Update users</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/a67a88bf051cb544d35cce2a3b64bd0216bcbc65\"><code>a67a88b</code></a> docs: Fix permissions for sticky-pull-request-comment example (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/235\">#235</a> by <a href=\"https://github.com/sheer\"><code>@\u200bsheer</code></a>...</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/3bb5af3c0c8f5e85d328728c1ab68dd6cefd03af\"><code>3bb5af3</code></a> ci: Add push permission for release workflow</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/c91b8fb449859051dc39d9684aa20a73788e5e5e\"><code>c91b8fb</code></a> docs: Add permissions (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/215\">#215</a> by <a href=\"https://github.com/natterstefan\"><code>@\u200bnatterstefan</code></a>)</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/ff373f4e8056b732dfd0eadd42ae54c004e5523b\"><code>ff373f4</code></a> docs: Minor README improvements</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/3da6b20b9f06784d238f318dad45239e79db2cc5\"><code>3da6b20</code></a> docs: README improvements</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4fc2eda2efdd8667c682a9b5d1249c9bdb912e5d\"><code>4fc2eda</code></a> docs: Update link in error message (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/230\">#230</a>)</li>\n<li>See full diff in <a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.2.0...v5.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=amannn/action-semantic-pull-request&package-manager=github_actions&previous-version=5.2.0&new-version=5.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-25T20:46:24Z",
  "comments":1,
  "created_at":"2023-09-25T17:18:04Z",
  "draft":false,
  "id":1911961809,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bJizM",
  "number":2721,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-25T20:46:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump amannn/action-semantic-pull-request from 5.2.0 to 5.3.0",
  "updated_at":"2023-09-25T20:46:25Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.0.290 \u2192 v0.0.291](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.290...v0.0.291)\n- [github.com/asottile/pyupgrade: v3.11.0 \u2192 v3.13.0](https://github.com/asottile/pyupgrade/compare/v3.11.0...v3.13.0)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-09-26T08:12:50Z",
  "comments":1,
  "created_at":"2023-09-26T04:24:48Z",
  "draft":false,
  "id":1912651490,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bL3b0",
  "number":2722,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-26T08:12:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-09-26T08:12:50Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.16.0 to 2.16.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.16.1</h2>\n<ul>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0rc3 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1625\">#1625</a>)</li>\n<li>\ud83d\udee0 Only calls <code>linux32</code> in containers when necessary (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1599\">#1599</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.16.1</h3>\n<p><em>26 September 2023</em></p>\n<ul>\n<li>\ud83d\udee0 Updates the prerelease CPython 3.12 version to 3.12.0rc3 (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1625\">#1625</a>)</li>\n<li>\ud83d\udee0 Only calls <code>linux32</code> in containers when necessary (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1599\">#1599</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7da7df1efc530f07d1945c00934b8cfd34be0d50\"><code>7da7df1</code></a> Bump version: v2.16.1</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9deb1b6794913450fc222b73e2ada1a0eec00487\"><code>9deb1b6</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1625\">#1625</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/271c5fe6e461766c93e9c45d29923ca93ed751e8\"><code>271c5fe</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1627\">#1627</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/c716cfaeb8bb52556017300e35cbd7044a614804\"><code>c716cfa</code></a> Update dependencies</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/099d397aee3ec4bead60ae0c8a554d77b156c86c\"><code>099d397</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1599\">#1599</a> from mayeut/manylinux-entrypoint</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/72222654f48f70f792df979f05e0c1dea470ae35\"><code>7222265</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1619\">#1619</a>)</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7a8b8012ffe79448b50852f8b7c327292ed61f48\"><code>7a8b801</code></a> clearer simulate_32_bit initialization</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/0ccf1dc016d1bb88e118ce6549475e82b21217bd\"><code>0ccf1dc</code></a> remove GHA runner cached docker images</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/ba11212a135469b1b3c878756cba85d5258ba9c9\"><code>ba11212</code></a> use fixture in oci_container_test.py to clean-up images after tests</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/6d0890e7e04f37bf026d12e72031430f4f85b06c\"><code>6d0890e</code></a> add tests</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.16.0...v2.16.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.16.0&new-version=2.16.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-09-27T22:01:28Z",
  "comments":1,
  "created_at":"2023-09-26T17:18:38Z",
  "draft":false,
  "id":1913962291,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bQWw3",
  "number":2723,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-27T22:01:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.16.0 to 2.16.1",
  "updated_at":"2023-09-27T22:01:29Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In the work to support buffer-shape touching in dask-awkward, I found it useful to be able to disable recursion in `expected_from_buffers` in order to identify the buffers associated directly with each form node. I think this has merit, so I've created this PR.",
  "closed_at":"2023-10-03T15:33:53Z",
  "comments":2,
  "created_at":"2023-09-26T20:28:21Z",
  "draft":false,
  "id":1914251472,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bRWgn",
  "number":2724,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-03T15:33:53Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `recursive` argument to `expected_from_buffers`",
  "updated_at":"2023-10-03T15:33:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I noticed that the header-only C++ examples didn't reflect the changes made in the C++ LayoutBuilder API in #2553. Fixed the code to add the required changes.",
  "closed_at":"2023-09-27T14:29:14Z",
  "comments":1,
  "created_at":"2023-09-27T10:20:27Z",
  "draft":false,
  "id":1915191123,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bUfAy",
  "number":2725,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-27T14:29:14Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: make the examples consistent with the changes in #2553",
  "updated_at":"2023-09-27T14:29:15Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Discussed in https://github.com/scikit-hep/awkward/discussions/2726\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **WWWonderer** September 27, 2023</sup>\r\nFor the code below:\r\n\r\n```\r\narr = ak.Array(\r\n    [\r\n        [\r\n            [1, 2], \r\n            [1]\r\n        ],\r\n        [\r\n            [1], \r\n            [1], \r\n            [1]\r\n        ]\r\n    ]\r\n)\r\n\r\nprint(f'mean: {ak.mean(arr)}') # prints mean: 1.1666666666666667\r\nprint(f'std: {ak.std(arr)}') # error\r\n```\r\nThe mean works fine while the std gives me error with following stack trace:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n[/usr/local/lib/python3.10/dist-packages/awkward/_dispatch.py](https://localhost:8080/#) in dispatch(*args, **kwargs)\r\n     59                 try:\r\n---> 60                     next(gen_or_result)\r\n     61                 except StopIteration as err:\r\n\r\n19 frames\r\nValueError: cannot broadcast nested list (in compiled code: https://github.com/scikit-hep/awkward/blob/awkward-cpp-23/awkward-cpp/src/cpu-kernels/awkward_ListArray_broadcast_tooffsets.cpp#L27)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\n[/usr/local/lib/python3.10/dist-packages/awkward/_errors.py](https://localhost:8080/#) in handle_exception(self, cls, exception)\r\n     80             self.decorate_exception(cls, exception)\r\n     81         else:\r\n---> 82             raise self.decorate_exception(cls, exception)\r\n     83 \r\n     84     def decorate_exception(self, cls: type[E], exception: E) -> E:\r\n\r\nValueError: cannot broadcast nested list (in compiled code: https://github.com/scikit-hep/awkward/blob/awkward-cpp-23/awkward-cpp/src/cpu-kernels/awkward_ListArray_broadcast_tooffsets.cpp#L27)\r\n\r\nThis error occurred while calling\r\n\r\n    ak.std(\r\n        <Array [[[1, 2], [1]], [[1], ...]] type='2 * var * var * int64'>\r\n    )\r\n```\r\nThis seems very counterintuitive to me as the std is nothing but some operations on mean. What can be done in mean in terms of broadcasting should also be doable in std. Is there a reason this is happening and how to solve this issue? Thanks!\r\n\r\nEdit: \r\n\r\nI went a bit deeper into the codebase and found this in variance implementation which is used by std (https://github.com/scikit-hep/awkward/blob/main/src/awkward/operations/ak_var.py):\r\n```\r\n            sumwxx = ak.operations.ak_sum._impl(\r\n                (x - xmean) ** 2, # maybe here is the broadcasting??? \r\n                axis,\r\n                keepdims=True,\r\n                mask_identity=True,\r\n                highlevel=True,\r\n                behavior=None,\r\n            )\r\n```\r\nIn the implementation of mean (https://github.com/scikit-hep/awkward/blob/main/src/awkward/operations/ak_mean.py#L156) only x is passed into ak_sum:\r\n```\r\n            sumwx = ak.operations.ak_sum._impl(\r\n                x,\r\n                axis,\r\n                keepdims=True,\r\n                mask_identity=True,\r\n                highlevel=True,\r\n                behavior=None,\r\n            )\r\n```\r\nMaybe this is the cause of the issue? But is there a way to fix it? \r\n</div>\r\n\r\n--------------\r\n\r\nI looked into the implementation of `ak.std`, and found the same issue in `ak.var`. The step where it fails is when we subtract the mean from each value:\r\n\r\n```python\r\nxmean = ak.mean(arr, keepdims=True)\r\narr - xmean   # fails with \"can't broadcast\"\r\n```\r\n\r\nwhere\r\n\r\n```python\r\n>>> arr\r\n<Array [[[1, 2], [1]], [[1], [1], [1]]] type='2 * var * var * int64'>\r\n>>> xmean\r\n<Array [[[1.17]]] type='1 * var * 1 * float64'>\r\n```\r\n\r\nThe problem is not with the `var * int64` versus `1 * float64`, it's with the `2 *` versus `1 *`. It doesn't look like a problem with the definition of broadcasting, but with the output of `ak.mean` with `keepdims=True`. It should be length-2, not length-1.\r\n\r\n(I don't know how this didn't get caught in tests! My mistake, of course, since I wrote the `ak.mean`, `ak.var`, etc. suite.)",
  "closed_at":"2023-09-28T17:22:53Z",
  "comments":2,
  "created_at":"2023-09-27T17:38:28Z",
  "id":1916038674,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5yNG4S",
  "number":2727,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.mean with `keepdims=True` is returning arrays of the wrong length",
  "updated_at":"2023-09-28T17:22:53Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2727 \r\n\r\nAss discussed in https://github.com/scikit-hep/awkward/issues/2727#issuecomment-1738032109, the cause of this bug is that `keepdims=True` for `axis=None` doesn't introduce regular nodes, unlike `axis!=None` which replaces the node at `axis` with a regular one. \r\n\r\nThis makes sense; unlike `axis=None`, `axis=N` only operates upon a single dimension. We _probably_ want to replace list nodes with regular nodes in `_remove_structure`.\r\n\r\nThis PR adds `list_to_regular` as an argument to `ak._do.remove_structure`. As this is an L3 function, we don't need to worry about whether this is too niche (i.e. whether `list_to_ragged` should also be an argument).",
  "closed_at":"2023-09-28T17:22:52Z",
  "comments":2,
  "created_at":"2023-09-27T20:37:42Z",
  "draft":false,
  "id":1916280511,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bYMaY",
  "number":2728,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-09-28T17:22:51Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: reduction with `axis=None`, `keepdims=True`",
  "updated_at":"2023-09-28T17:22:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR adds the Python 3.12 classifier to `awkward-cpp`",
  "closed_at":"2023-10-25T09:16:50Z",
  "comments":1,
  "created_at":"2023-09-28T18:59:48Z",
  "draft":false,
  "id":1918099691,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bebxm",
  "number":2729,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-25T09:16:50Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: add trove classifier to awkward-cpp",
  "updated_at":"2023-10-25T09:16:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThis would remove the patch in dask-awkward requiring `if buffer_key == \"None\"`",
  "closed_at":"2024-01-03T15:43:54Z",
  "comments":4,
  "created_at":"2023-09-29T14:23:46Z",
  "id":1919366851,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5yZzbD",
  "number":2731,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"If `form_key` is None, we should not interpolate it to build a buffer key",
  "updated_at":"2024-01-03T15:43:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR follows up from #2718 by relaxing some rules:\r\n\r\n- Placeholder arrays no longer need known lengths if `from_buffers` is able to deduce the length. \r\n   This requirement was originally made for safety reasons \u2014 if something went wrong during rehydration etc., we would see placeholders without known lengths in contexts where they should be known. However, by imposing this restriction, the caller would need to recreate much of `from_buffers` to compute lengths from offset buffers. Thus, we relax this rule, and permit `from_buffers` to update placeholders (via a new placeholder) with new _known_ lengths.\r\n- Non-placeholder arrays can be encountered in contexts where the outer length is not known.\r\n   Originally we wanted this to be an error so that we could clearly identify strange touching behaviour. However, in general it should be possible to refer to the same buffer multiple times within a form, so we should remove this rule.\r\n   \r\n",
  "closed_at":"2023-10-03T16:15:41Z",
  "comments":1,
  "created_at":"2023-10-02T12:43:27Z",
  "draft":false,
  "id":1921849285,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bq1nq",
  "number":2732,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-03T16:15:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: infer unknown lengths from context in `from_buffers`",
  "updated_at":"2023-10-03T16:15:42Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 \u2192 v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\n- [github.com/asottile/setup-cfg-fmt: v2.4.0 \u2192 v2.5.0](https://github.com/asottile/setup-cfg-fmt/compare/v2.4.0...v2.5.0)\n- [github.com/psf/black-pre-commit-mirror: 23.9.1 \u2192 23.10.0](https://github.com/psf/black-pre-commit-mirror/compare/23.9.1...23.10.0)\n- [github.com/astral-sh/ruff-pre-commit: v0.0.291 \u2192 v0.1.1](https://github.com/astral-sh/ruff-pre-commit/compare/v0.0.291...v0.1.1)\n- [github.com/codespell-project/codespell: v2.2.5 \u2192 v2.2.6](https://github.com/codespell-project/codespell/compare/v2.2.5...v2.2.6)\n- [github.com/shellcheck-py/shellcheck-py: v0.9.0.5 \u2192 v0.9.0.6](https://github.com/shellcheck-py/shellcheck-py/compare/v0.9.0.5...v0.9.0.6)\n- [github.com/asottile/pyupgrade: v3.13.0 \u2192 v3.15.0](https://github.com/asottile/pyupgrade/compare/v3.13.0...v3.15.0)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-10-23T22:19:31Z",
  "comments":2,
  "created_at":"2023-10-03T05:28:01Z",
  "draft":false,
  "id":1923339953,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5bv879",
  "number":2733,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-23T22:19:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-10-23T22:19:32Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\n1.x\n\n### Description and code to reproduce\n\nIn scikit-hep/vector#388, [a test based on Awkward 1.x](https://github.com/scikit-hep/vector/actions/runs/6394289115/job/17355399815?pr=388) is failing:\r\n\r\n```\r\nFAILED tests/backends/test_awkward_numba.py::test - numba.core.errors.LoweringError: Failed in nopython mode pipeline (step: native lowering)\r\nFailed in nopython mode pipeline (step: nopython frontend)\r\nCode using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors\r\nException origin:\r\n  File \"/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/site-packages/awkward/_connect/_numba/arrayview.py\", line 877, in generic\r\n    raise TypeError(\r\n\r\n\r\nFile \"tests/backends/test_awkward_numba.py\", line 23:\r\n    def extract(x):\r\n        return x[2][0]\r\n        ^\r\n\r\nDuring: lowering \"$20binary_subscr.4 = static_getitem(value=$8binary_subscr.2, index=0, index_var=$const18.3, fn=<built-in function getitem>)\" at /home/runner/work/vector/vector/tests/backends/test_awkward_numba.py (23)\r\n```\r\n\r\nAwkward 1.x should either fix this (Coffea 0.7 users are using it, and Coffea uses Numba) or put an upper cap on Numba versions, which would be difficult because Numba is a soft/runtime dependency.\r\n\r\nThe warning about old-style and new-style Numba error capturing might be like #2659, which fixed the issue for Awkward 2.x. Maybe all this needs is for the Numba-handling in Awkward 1.x to get the same kind of fix.\r\n\r\nIt will require a new Awkward 1.x release, which will take some thinking to remember how to do.",
  "closed_at":"2023-10-11T16:30:56Z",
  "comments":4,
  "created_at":"2023-10-03T15:31:02Z",
  "id":1924403173,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5ytA_l",
  "number":2734,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Awkward version 1.x has a conflict (just a warning?) with Numba 0.53",
  "updated_at":"2023-10-11T16:30:57Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"address issue https://github.com/scikit-hep/awkward/issues/2734",
  "closed_at":"2023-10-04T20:15:32Z",
  "comments":5,
  "created_at":"2023-10-04T06:10:55Z",
  "draft":false,
  "id":1925473550,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5b3Ik_",
  "number":2735,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-04T20:15:32Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update backport for changes in Numba, NumExpr, Arrow, and RDataFrame",
  "updated_at":"2023-10-09T12:59:32Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/cibuildwheel](https://github.com/pypa/cibuildwheel) from 2.16.1 to 2.16.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/releases\">pypa/cibuildwheel's releases</a>.</em></p>\n<blockquote>\n<h2>v2.16.2</h2>\n<ul>\n<li>\ud83d\udee0 Updates CPython 3.12 version to 3.12.0, final release (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1635\">#1635</a>)</li>\n<li>\u2728 Adds a debug option <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#cibw_debug_keep_container\"><code>CIBW_DEBUG_KEEP_CONTAINER</code></a> to stop cibuildwheel deleting build containers after the build finishes. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1620\">#1620</a>)</li>\n<li>\ud83d\udcda Adds support for <code>[tool.cibuildwheel]</code> checking by adding a schema compatible with the <a href=\"https://github.com/abravalheri/validate-pyproject/\">validate-pyproject</a> tool (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1622\">#1622</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1628\">#1628</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1629\">#1629</a>)</li>\n<li>\ud83d\udc1b Fix parsing of <code>CIBW_CONTAINER_ENGINE</code> and <code>CIBW_BUILD_FRONTEND</code> options to not break arguments on <code>:</code> characters (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1621\">#1621</a>)</li>\n<li>\ud83d\udc1b Fix the evaluation order of <code>CIBW_ENVIRONMENT</code> and <code>CIBW_ENVIRONMENT_PASS</code> so that <code>CIBW_ENVIRONMENT</code> assignments can reference environment variables passed through from the host machine. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1617\">#1617</a>)</li>\n<li>\ud83d\udee0 Supports manylinux images' deferred installation of interpreters through the <code>manylinux-interpreters</code> tool (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1630\">#1630</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/cibuildwheel/blob/main/docs/changelog.md\">pypa/cibuildwheel's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.16.2</h3>\n<p><em>3 October 2023</em></p>\n<ul>\n<li>\ud83d\udee0 Updates CPython 3.12 version to 3.12.0, final release (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1635\">#1635</a>)</li>\n<li>\u2728 Adds a debug option <a href=\"https://cibuildwheel.readthedocs.io/en/stable/options/#cibw_debug_keep_container\"><code>CIBW_DEBUG_KEEP_CONTAINER</code></a> to stop cibuildwheel deleting build containers after the build finishes. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1620\">#1620</a>)</li>\n<li>\ud83d\udcda Adds support for <code>[tool.cibuildwheel]</code> checking by adding a schema compatible with the <a href=\"https://github.com/abravalheri/validate-pyproject/\">validate-pyproject</a> tool (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1622\">#1622</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1628\">#1628</a>, <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1629\">#1629</a>)</li>\n<li>\ud83d\udc1b Fix parsing of <code>CIBW_CONTAINER_ENGINE</code> and <code>CIBW_BUILD_FRONTEND</code> options to not break arguments on <code>:</code> characters (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1621\">#1621</a>)</li>\n<li>\ud83d\udc1b Fix the evaluation order of <code>CIBW_ENVIRONMENT</code> and <code>CIBW_ENVIRONMENT_PASS</code> so that <code>CIBW_ENVIRONMENT</code> assignments can reference environment variables passed through from the host machine. (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1617\">#1617</a>)</li>\n<li>\ud83d\udee0 Supports manylinux images' deferred installation of interpreters through the <code>manylinux-interpreters</code> tool (<a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1630\">#1630</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/fff9ec32ed25a9c576750c91e06b410ed0c15db7\"><code>fff9ec3</code></a> Bump version: v2.16.2</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/f4291e7492ca7d2d51314a5734f103541e300e3d\"><code>f4291e7</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1617\">#1617</a> from pypa/env-order</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9da4ede6166a2e1fc5774216d8f4d15d2c902395\"><code>9da4ede</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1620\">#1620</a> from Helveg/cibw-debug-keep-container</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/77d3a5f98ef09fa92567006bc4209fadb59ed16b\"><code>77d3a5f</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1621\">#1621</a> from pypa/parse-kvs-colons</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/9535d168faa75eac2085e92defb27ce9194b5707\"><code>9535d16</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1629\">#1629</a> from henryiii/henryiii/refactor/schemaref</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/70fae8d0b7341087e736ace9aa753ce18a8afd06\"><code>70fae8d</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1630\">#1630</a> from mayeut/manylinux-interpreters</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/7699db3017051aad483f46772f8d8aaafe734427\"><code>7699db3</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1632\">#1632</a> from gdementen/patch-1</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/6dceb290087321f43a4252b093471f1ebe4f2d5f\"><code>6dceb29</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1634\">#1634</a> from pypa/pre-commit-ci-update-config</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/035f5a2297c3a3236d1521aed8d0c2965b91fc43\"><code>035f5a2</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/cibuildwheel/issues/1635\">#1635</a> from pypa/update-dependencies-pr</li>\n<li><a href=\"https://github.com/pypa/cibuildwheel/commit/951d453a2ea22631a315c19aa6c5104aef1d8458\"><code>951d453</code></a> [pre-commit.ci] auto fixes from pre-commit.com hooks</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/cibuildwheel/compare/v2.16.1...v2.16.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/cibuildwheel&package-manager=github_actions&previous-version=2.16.1&new-version=2.16.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-10-04T19:49:49Z",
  "comments":1,
  "created_at":"2023-10-04T17:29:26Z",
  "draft":false,
  "id":1926676116,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5b7Ojy",
  "number":2736,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-04T19:49:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/cibuildwheel from 2.16.1 to 2.16.2",
  "updated_at":"2023-10-04T19:49:50Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\n2.4.4 and HEAD\n\n### Description and code to reproduce\n\nI've been tracking down my inability to run `tests/test_2682_custom_pickler.py` locally. It's pretty consistent about working when I don't have dask-awkward installed and not working when I do have dask-awkward installed.\r\n\r\n## Notes\r\n\r\nI haven't seen this issue before, but it's the first time I'm running in Python 3.10 environments. I don't know if that's related. (Or maybe I've never tested it before because I didn't have dask-awkward installed between the time when the custom picklers were added and now.)\r\n\r\nAlso, I can't say why CI isn't seeing this. Perhaps it has something to do with conda.\r\n\r\nAlso, I verified that I don't have any self-installed libraries outside of the conda environment. In particular,\r\n\r\n```python\r\nimportlib.metadata.entry_points(group=\"awkward.pickle.reduce\")\r\n```\r\n\r\nshows nothing outside of my environment and dask-awkward's contribution within it, if dask-awkward has been installed.\r\n\r\n## Clean-slate test\r\n\r\nI created a new conda environment with these initial packages:\r\n\r\n```\r\n  Prefix: /home/jpivarski/mambaforge/envs/just-dask-awkward\r\n\r\n  Updating specs:\r\n\r\n   - python=3.10\r\n   - dask\r\n   - typing_extensions\r\n   - importlib_metadata\r\n   - numpy\r\n   - packaging\r\n\r\n\r\n  Package                    Version  Build                Channel           Size\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n  Install:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\r\n  + _libgcc_mutex                0.1  conda_forge          conda-forge     Cached\r\n  + libstdcxx-ng              13.2.0  h7e041cc_2           conda-forge     Cached\r\n  + python_abi                  3.10  4_cp310              conda-forge     Cached\r\n  + ld_impl_linux-64            2.40  h41732ed_0           conda-forge     Cached\r\n  + ca-certificates        2023.7.22  hbcca054_0           conda-forge     Cached\r\n  + libgomp                   13.2.0  h807b86a_2           conda-forge     Cached\r\n  + _openmp_mutex                4.5  2_gnu                conda-forge     Cached\r\n  + libgcc-ng                 13.2.0  h807b86a_2           conda-forge     Cached\r\n  + rdma-core                   28.9  h59595ed_1           conda-forge     Cached\r\n  + libnuma                   2.0.16  h0b41bf4_1           conda-forge     Cached\r\n  + xorg-libxdmcp              1.1.3  h7f98852_0           conda-forge     Cached\r\n  + pthread-stubs                0.4  h36c2ea0_1001        conda-forge        6kB\r\n  + libev                       4.33  h516909a_1           conda-forge     Cached\r\n  + libgfortran5              13.2.0  ha4646dd_2           conda-forge     Cached\r\n  + gflags                     2.2.2  he1b5a44_1004        conda-forge     Cached\r\n  + libbrotlicommon            1.1.0  hd590300_1           conda-forge     Cached\r\n  + aws-c-common               0.9.3  hd590300_0           conda-forge     Cached\r\n  + keyutils                   1.6.1  h166bdaf_0           conda-forge     Cached\r\n  + xorg-libxau               1.0.11  hd590300_0           conda-forge     Cached\r\n  + lz4-c                      1.9.4  hcb278e6_0           conda-forge     Cached\r\n  + libdeflate                  1.19  hd590300_0           conda-forge       67kB\r\n  + lerc                       4.0.0  h27087fc_0           conda-forge     Cached\r\n  + libjpeg-turbo              3.0.0  hd590300_1           conda-forge      619kB\r\n  + libnsl                     2.0.0  hd590300_1           conda-forge     Cached\r\n  + libffi                     3.4.2  h7f98852_5           conda-forge     Cached\r\n  + bzip2                      1.0.8  h7f98852_4           conda-forge     Cached\r\n  + yaml                       0.2.5  h7f98852_2           conda-forge     Cached\r\n  + libzlib                   1.2.13  hd590300_5           conda-forge     Cached\r\n  + libwebp-base               1.3.2  hd590300_0           conda-forge      402kB\r\n  + libcrc32c                  1.1.2  h9c3ff4c_0           conda-forge     Cached\r\n  + c-ares                    1.19.1  hd590300_0           conda-forge     Cached\r\n  + snappy                    1.1.10  h9fff704_0           conda-forge     Cached\r\n  + re2                   2023.03.02  h8c504da_0           conda-forge     Cached\r\n  + openssl                    3.1.3  hd590300_0           conda-forge     Cached\r\n  + libabseil             20230802.1  cxx17_h59595ed_0     conda-forge     Cached\r\n  + libutf8proc                2.8.0  h166bdaf_0           conda-forge     Cached\r\n  + ncurses                      6.4  hcb278e6_0           conda-forge     Cached\r\n  + libuuid                   2.38.1  h0b41bf4_0           conda-forge     Cached\r\n  + xz                         5.2.6  h166bdaf_0           conda-forge     Cached\r\n  + ucx                       1.14.1  h64cca9d_5           conda-forge     Cached\r\n  + libgfortran-ng            13.2.0  h69a702a_2           conda-forge     Cached\r\n  + glog                       0.6.0  h6f12383_0           conda-forge     Cached\r\n  + libbrotlienc               1.1.0  hd590300_1           conda-forge     Cached\r\n  + libbrotlidec               1.1.0  hd590300_1           conda-forge     Cached\r\n  + aws-c-compression         0.2.17  h184a658_3           conda-forge     Cached\r\n  + aws-checksums             0.1.17  h184a658_2           conda-forge     Cached\r\n  + aws-c-sdkutils            0.1.12  h184a658_2           conda-forge     Cached\r\n  + libxcb                      1.15  h0b41bf4_0           conda-forge     Cached\r\n  + libpng                    1.6.39  h753d276_0           conda-forge     Cached\r\n  + libsqlite                 3.43.0  h2797004_0           conda-forge     Cached\r\n  + tk                        8.6.13  h2797004_0           conda-forge     Cached\r\n  + zstd                       1.5.5  hfc55251_0           conda-forge     Cached\r\n  + libevent                  2.1.12  hf998b51_1           conda-forge     Cached\r\n  + s2n                       1.3.51  h06160fa_0           conda-forge     Cached\r\n  + aws-c-cal                  0.6.2  h09139f6_2           conda-forge     Cached\r\n  + libssh2                   1.11.0  h0841786_0           conda-forge     Cached\r\n  + libnghttp2                1.52.0  h61bc06f_0           conda-forge     Cached\r\n  + libprotobuf               4.23.4  hf27288f_6           conda-forge     Cached\r\n  + libedit             3.1.20191231  he28a2e2_2           conda-forge     Cached\r\n  + readline                     8.2  h8228510_1           conda-forge     Cached\r\n  + libopenblas               0.3.24  pthreads_h413a1c8_0  conda-forge     Cached\r\n  + freetype                  2.12.1  h267a509_2           conda-forge     Cached\r\n  + libtiff                    4.6.0  ha9c0a0a_2           conda-forge      283kB\r\n  + libthrift                 0.19.0  hb90f79a_1           conda-forge     Cached\r\n  + aws-c-io                 0.13.32  h89a0be2_4           conda-forge     Cached\r\n  + orc                        1.9.0  h52d3b3c_2           conda-forge     Cached\r\n  + libgrpc                   1.57.0  ha4d0f93_1           conda-forge     Cached\r\n  + krb5                      1.21.2  h659d440_0           conda-forge     Cached\r\n  + libblas                    3.9.0  18_linux64_openblas  conda-forge     Cached\r\n  + lcms2                       2.15  hb7c19ff_3           conda-forge      240kB\r\n  + openjpeg                   2.5.0  h488ebb8_3           conda-forge      357kB\r\n  + aws-c-event-stream         0.3.2  hd6ebb48_1           conda-forge     Cached\r\n  + aws-c-http                0.7.13  hc690213_1           conda-forge     Cached\r\n  + libcurl                    8.3.0  hca28451_0           conda-forge     Cached\r\n  + libcblas                   3.9.0  18_linux64_openblas  conda-forge     Cached\r\n  + liblapack                  3.9.0  18_linux64_openblas  conda-forge     Cached\r\n  + aws-c-auth                 0.7.4  hc8144f4_1           conda-forge     Cached\r\n  + aws-c-mqtt                 0.9.6  h32970c0_2           conda-forge     Cached\r\n  + libgoogle-cloud           2.12.0  h8d7e28b_2           conda-forge     Cached\r\n  + aws-c-s3                  0.3.17  hb5e3142_3           conda-forge     Cached\r\n  + aws-crt-cpp               0.23.1  h94c364a_5           conda-forge     Cached\r\n  + aws-sdk-cpp             1.11.156  h6600424_3           conda-forge     Cached\r\n  + libarrow                  13.0.0  h1935d02_5_cpu       conda-forge     Cached\r\n  + tzdata                     2023c  h71feb2d_0           conda-forge     Cached\r\n  + python                   3.10.12  hd12c33a_0_cpython   conda-forge     Cached\r\n  + wheel                     0.41.2  pyhd8ed1ab_0         conda-forge     Cached\r\n  + setuptools                68.2.2  pyhd8ed1ab_0         conda-forge     Cached\r\n  + pip                       23.2.1  pyhd8ed1ab_0         conda-forge     Cached\r\n  + six                       1.16.0  pyh6c4a22f_0         conda-forge     Cached\r\n  + pysocks                    1.7.1  pyha2e5f31_6         conda-forge     Cached\r\n  + pytz                2023.3.post1  pyhd8ed1ab_0         conda-forge     Cached\r\n  + python-tzdata             2023.3  pyhd8ed1ab_0         conda-forge     Cached\r\n  + xyzservices             2023.7.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + fsspec                  2023.9.2  pyh1a96a4e_0         conda-forge     Cached\r\n  + toolz                     0.12.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + tblib                      2.0.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + sortedcontainers           2.4.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + cloudpickle                2.2.1  pyhd8ed1ab_0         conda-forge     Cached\r\n  + click                      8.1.7  unix_pyh707e725_0    conda-forge     Cached\r\n  + zipp                      3.17.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + packaging                   23.2  pyhd8ed1ab_0         conda-forge     Cached\r\n  + typing_extensions          4.8.0  pyha770c72_0         conda-forge     Cached\r\n  + zict                       3.0.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + locket                     1.0.0  pyhd8ed1ab_0         conda-forge     Cached\r\n  + python-dateutil            2.8.2  pyhd8ed1ab_0         conda-forge     Cached\r\n  + importlib-metadata         6.8.0  pyha770c72_0         conda-forge     Cached\r\n  + partd                      1.4.1  pyhd8ed1ab_0         conda-forge     Cached\r\n  + importlib_metadata         6.8.0  hd8ed1ab_0           conda-forge        9kB\r\n  + brotli-python              1.1.0  py310hc6cd4ac_1      conda-forge     Cached\r\n  + markupsafe                 2.1.3  py310h2372a71_1      conda-forge     Cached\r\n  + pillow                    10.0.1  py310h01dd4db_2      conda-forge       47MB\r\n  + lz4                        4.3.2  py310h350c4a5_1      conda-forge     Cached\r\n  + tornado                    6.3.3  py310h2372a71_1      conda-forge     Cached\r\n  + pyyaml                     6.0.1  py310h2372a71_1      conda-forge     Cached\r\n  + psutil                     5.9.5  py310h2372a71_1      conda-forge     Cached\r\n  + msgpack-python             1.0.6  py310hd41b1e2_0      conda-forge     Cached\r\n  + numpy                     1.26.0  py310hb13e2d6_0      conda-forge     Cached\r\n  + cytoolz                   0.12.2  py310h2372a71_1      conda-forge     Cached\r\n  + contourpy                  1.1.1  py310hd41b1e2_1      conda-forge     Cached\r\n  + pyarrow                   13.0.0  py310hf9e7431_5_cpu  conda-forge     Cached\r\n  + pandas                     2.1.1  py310hcc13569_1      conda-forge     Cached\r\n  + urllib3                    2.0.6  pyhd8ed1ab_0         conda-forge       98kB\r\n  + jinja2                     3.1.2  pyhd8ed1ab_1         conda-forge     Cached\r\n  + dask-core               2023.9.3  pyhd8ed1ab_0         conda-forge     Cached\r\n  + bokeh                      3.2.2  pyhd8ed1ab_0         conda-forge     Cached\r\n  + distributed             2023.9.3  pyhd8ed1ab_0         conda-forge     Cached\r\n  + dask                    2023.9.3  pyhd8ed1ab_0         conda-forge        7kB\r\n\r\nand\r\n\r\n  Prefix: /home/jpivarski/mambaforge/envs/just-dask-awkward\r\n\r\n  Updating specs:\r\n\r\n   - pytest\r\n   - ca-certificates\r\n   - openssl\r\n\r\n\r\n  Package           Version  Build         Channel           Size\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n  Install:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\r\n  + colorama          0.4.6  pyhd8ed1ab_0  conda-forge     Cached\r\n  + pluggy            1.3.0  pyhd8ed1ab_0  conda-forge     Cached\r\n  + exceptiongroup    1.1.3  pyhd8ed1ab_0  conda-forge     Cached\r\n  + iniconfig         2.0.0  pyhd8ed1ab_0  conda-forge     Cached\r\n  + tomli             2.0.1  pyhd8ed1ab_0  conda-forge     Cached\r\n  + pytest            7.4.2  pyhd8ed1ab_0  conda-forge     Cached\r\n```\r\n\r\nFirst, I install `awkward` from conda-forge:\r\n\r\n```\r\n  Install:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\r\n  + awkward-cpp       24  py310hd41b1e2_0  conda-forge     649kB\r\n  + awkward        2.4.4  pyhd8ed1ab_0     conda-forge     351kB\r\n```\r\n\r\nThe tests pass.\r\n\r\nThen, I install `dask-awkward` from conda-forge:\r\n\r\n```\r\n  Install:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\r\n  + dask-awkward  2023.9.3  pyhd8ed1ab_0  conda-forge     62kB\r\n```\r\n\r\nThe tests fail.\r\n\r\nThen I remove them both.\r\n\r\n```\r\n  Remove:\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\r\n  - dask-awkward  2023.9.3  pyhd8ed1ab_0     conda-forge     Cached\r\n  - awkward          2.4.4  pyhd8ed1ab_0     conda-forge     Cached\r\n  - awkward-cpp         24  py310hd41b1e2_0  conda-forge     Cached\r\n```\r\n\r\nNext, I install `awkward` from PyPI:\r\n\r\n```\r\nCollecting awkward\r\n  Obtaining dependency information for awkward from https://files.pythonhosted.org/packages/de/5a/7f75daa08ced64a466649133436548d7f830222afa0e2eb6f07c94469a2a/awkward-2.4.4-py3-none-any.whl.metadata\r\n  Using cached awkward-2.4.4-py3-none-any.whl.metadata (6.9 kB)\r\nCollecting awkward-cpp==24 (from awkward)\r\n  Obtaining dependency information for awkward-cpp==24 from https://files.pythonhosted.org/packages/b9/29/63575d5b7cbf6b1e7090078031442975376764ea56670c282ec61edd7ce8/awkward_cpp-24-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata\r\n  Using cached awkward_cpp-24-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB)\r\nRequirement already satisfied: importlib-metadata>=4.13.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward) (6.8.0)\r\nRequirement already satisfied: numpy>=1.18.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward) (1.26.0)\r\nRequirement already satisfied: packaging in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward) (23.2)\r\nRequirement already satisfied: typing-extensions>=4.1.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward) (4.8.0)\r\nRequirement already satisfied: zipp>=0.5 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from importlib-metadata>=4.13.0->awkward) (3.17.0)\r\nUsing cached awkward-2.4.4-py3-none-any.whl (707 kB)\r\nUsing cached awkward_cpp-24-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\r\nInstalling collected packages: awkward-cpp, awkward\r\nSuccessfully installed awkward-2.4.4 awkward-cpp-24\r\n```\r\n\r\nThe tests pass.\r\n\r\nThen I install `dask-awkward` from PyPI:\r\n\r\n```\r\nCollecting dask-awkward\r\n  Obtaining dependency information for dask-awkward from https://files.pythonhosted.org/packages/7d/4f/c0717deb5e7c167c93f6fcd74a9329ef7560fa829fe2386c6f744eed8270/dask_awkward-2023.9.3-py3-none-any.whl.metadata\r\n  Downloading dask_awkward-2023.9.3-py3-none-any.whl.metadata (3.4 kB)\r\nRequirement already satisfied: awkward>=2.4.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask-awkward) (2.4.4)\r\nRequirement already satisfied: dask>=2023.04.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask-awkward) (2023.9.3)\r\nRequirement already satisfied: typing-extensions>=4.8.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask-awkward) (4.8.0)\r\nRequirement already satisfied: awkward-cpp==24 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward>=2.4.0->dask-awkward) (24)\r\nRequirement already satisfied: importlib-metadata>=4.13.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward>=2.4.0->dask-awkward) (6.8.0)\r\nRequirement already satisfied: numpy>=1.18.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward>=2.4.0->dask-awkward) (1.26.0)\r\nRequirement already satisfied: packaging in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from awkward>=2.4.0->dask-awkward) (23.2)\r\nRequirement already satisfied: click>=8.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask>=2023.04.0->dask-awkward) (8.1.7)\r\nRequirement already satisfied: cloudpickle>=1.5.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask>=2023.04.0->dask-awkward) (2.2.1)\r\nRequirement already satisfied: fsspec>=2021.09.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask>=2023.04.0->dask-awkward) (2023.9.2)\r\nRequirement already satisfied: partd>=1.2.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask>=2023.04.0->dask-awkward) (1.4.1)\r\nRequirement already satisfied: pyyaml>=5.3.1 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask>=2023.04.0->dask-awkward) (6.0.1)\r\nRequirement already satisfied: toolz>=0.10.0 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from dask>=2023.04.0->dask-awkward) (0.12.0)\r\nRequirement already satisfied: zipp>=0.5 in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from importlib-metadata>=4.13.0->awkward>=2.4.0->dask-awkward) (3.17.0)\r\nRequirement already satisfied: locket in /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages (from partd>=1.2.0->dask>=2023.04.0->dask-awkward) (1.0.0)\r\nDownloading dask_awkward-2023.9.3-py3-none-any.whl (72 kB)\r\n   \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501 72.9/72.9 kB 5.8 MB/s eta 0:00:00\r\nInstalling collected packages: dask-awkward\r\nSuccessfully installed dask-awkward-2023.9.3\r\n```\r\n\r\nThe tests fail.\r\n\r\nNext, I remove them both.\r\n\r\n```\r\nFound existing installation: dask-awkward 2023.9.3\r\nUninstalling dask-awkward-2023.9.3:\r\n  Would remove:\r\n    /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages/dask_awkward-2023.9.3.dist-info/*\r\n    /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages/dask_awkward/*\r\nProceed (Y/n)? y\r\n  Successfully uninstalled dask-awkward-2023.9.3\r\nFound existing installation: awkward 2.4.4\r\nUninstalling awkward-2.4.4:\r\n  Would remove:\r\n    /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages/awkward-2.4.4.dist-info/*\r\n    /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages/awkward/*\r\nProceed (Y/n)? y\r\n  Successfully uninstalled awkward-2.4.4\r\nFound existing installation: awkward-cpp 24\r\nUninstalling awkward-cpp-24:\r\n  Would remove:\r\n    /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages/awkward_cpp-24.dist-info/*\r\n    /home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/site-packages/awkward_cpp/*\r\nProceed (Y/n)? y\r\n  Successfully uninstalled awkward-cpp-24\r\n```\r\n\r\nNow I install `awkward` from source (`main`), using the nox, `awkward-cpp` compilation, install-in-place procedure.\r\n\r\nThe tests pass.\r\n\r\nThen I install `dask-awkward` from source (`main`).\r\n\r\nThe tests fail.\r\n\r\n## Error messages\r\n\r\nWhen the tests fail, they fail like this:\r\n\r\n```\r\n============================================================= test session starts =============================================================\r\nplatform linux -- Python 3.10.12, pytest-7.4.2, pluggy-1.3.0\r\nrootdir: /home/jpivarski/irishep/awkward\r\nconfigfile: pyproject.toml\r\ncollected 4 items                                                                                                                             \r\n\r\ntests/test_2682_custom_pickler.py FFFF                                                                                                  [100%]\r\n\r\n================================================================== FAILURES ===================================================================\r\n____________________________________________________________ test_default_pickler _____________________________________________________________\r\n\r\n    def test_default_pickler():\r\n>       assert _pickle_complex_array_and_return_form_impl() == ak.forms.from_dict(\r\n            {\"class\": \"ListOffsetArray\", \"offsets\": \"i64\", \"content\": \"int64\"}\r\n        )\r\nE       AssertionError: assert ListForm('i64', 'i64', NumpyForm('int64')) == ListOffsetForm('i64', NumpyForm('int64'))\r\nE        +  where ListForm('i64', 'i64', NumpyForm('int64')) = _pickle_complex_array_and_return_form_impl()\r\nE        +  and   ListOffsetForm('i64', NumpyForm('int64')) = <function from_dict at 0x7faed7961510>({'class': 'ListOffsetArray', 'content': 'int64', 'offsets': 'i64'})\r\nE        +    where <function from_dict at 0x7faed7961510> = <module 'awkward.forms' from '/home/jpivarski/irishep/awkward/src/awkward/forms/__init__.py'>.from_dict\r\nE        +      where <module 'awkward.forms' from '/home/jpivarski/irishep/awkward/src/awkward/forms/__init__.py'> = ak.forms\r\n\r\n\r\ntests/test_2682_custom_pickler.py:44: AssertionError\r\n______________________________________________________________ test_noop_pickler ______________________________________________________________\r\nconcurrent.futures.process._RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/process.py\", line 246, in _process_worker\r\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\r\n  File \"/home/jpivarski/irishep/awkward/tests/test_2682_custom_pickler.py\", line 26, in _pickle_complex_array_and_return_form_impl\r\n    return pickle.loads(pickle.dumps(array)).layout.form\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1468, in __reduce_ex__\r\n    result = custom_reduce(self, protocol)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 70, in custom_reduce\r\n    plugin = get_custom_reducer()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 60, in get_custom_reducer\r\n    _plugin = _load_reduce_plugin()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 43, in _load_reduce_plugin\r\n    raise RuntimeError(\r\nRuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\ntmp_path = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_noop_pickler0')\r\n\r\n    def test_noop_pickler(tmp_path):\r\n>       assert (\r\n            pickle_complex_array_and_return_form(\r\n                \"\"\"\r\n    def plugin(obj, protocol: int):\r\n        return NotImplemented\"\"\",\r\n                tmp_path,\r\n            )\r\n            == ak.forms.from_dict(\r\n                {\"class\": \"ListOffsetArray\", \"offsets\": \"i64\", \"content\": \"int64\"}\r\n            )\r\n        )\r\n\r\ntmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_noop_pickler0')\r\n\r\ntests/test_2682_custom_pickler.py:50: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntests/test_2682_custom_pickler.py:40: in pickle_complex_array_and_return_form\r\n    return pickle_future.result()\r\n        executor   = <concurrent.futures.process.ProcessPoolExecutor object at 0x7faed6a29300>\r\n        pickle_future = <Future at 0x7faed6a292d0 state=finished raised RuntimeError>\r\n        pickler_source = '\\ndef plugin(obj, protocol: int):\\n    return NotImplemented'\r\n        tmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_noop_pickler0')\r\n../../mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/_base.py:458: in result\r\n    return self.__get_result()\r\n        self       = None\r\n        timeout    = None\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = None\r\n\r\n    def __get_result(self):\r\n        if self._exception:\r\n            try:\r\n>               raise self._exception\r\nE               RuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\n\r\nself       = None\r\n\r\n../../mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/_base.py:403: RuntimeError\r\n__________________________________________________________ test_non_packing_pickler ___________________________________________________________\r\nconcurrent.futures.process._RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/process.py\", line 246, in _process_worker\r\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\r\n  File \"/home/jpivarski/irishep/awkward/tests/test_2682_custom_pickler.py\", line 26, in _pickle_complex_array_and_return_form_impl\r\n    return pickle.loads(pickle.dumps(array)).layout.form\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1468, in __reduce_ex__\r\n    result = custom_reduce(self, protocol)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 70, in custom_reduce\r\n    plugin = get_custom_reducer()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 60, in get_custom_reducer\r\n    _plugin = _load_reduce_plugin()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 43, in _load_reduce_plugin\r\n    raise RuntimeError(\r\nRuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\ntmp_path = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_non_packing_pickler0')\r\n\r\n    def test_non_packing_pickler(tmp_path):\r\n>       assert (\r\n            pickle_complex_array_and_return_form(\r\n                \"\"\"\r\n    def plugin(obj, protocol):\r\n        import awkward as ak\r\n        if isinstance(obj, ak.Array):\r\n            form, length, container = ak.to_buffers(obj)\r\n            return (\r\n                object.__new__,\r\n                (ak.Array,),\r\n                (form.to_dict(), length, container, obj.behavior),\r\n            )\r\n        else:\r\n            return NotImplemented\"\"\",\r\n                tmp_path,\r\n            )\r\n            == ak.forms.from_dict(\r\n                {\"class\": \"ListArray\", \"starts\": \"i64\", \"stops\": \"i64\", \"content\": \"int64\"}\r\n            )\r\n        )\r\n\r\ntmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_non_packing_pickler0')\r\n\r\ntests/test_2682_custom_pickler.py:64: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntests/test_2682_custom_pickler.py:40: in pickle_complex_array_and_return_form\r\n    return pickle_future.result()\r\n        executor   = <concurrent.futures.process.ProcessPoolExecutor object at 0x7faed6e5c5b0>\r\n        pickle_future = <Future at 0x7faed6e5e710 state=finished raised RuntimeError>\r\n        pickler_source = '\\ndef plugin(obj, protocol):\\n    import awkward as ak\\n    if isinstance(obj, ak.Array):\\n        form, length, cont...,\\n            (form.to_dict(), length, container, obj.behavior),\\n        )\\n    else:\\n        return NotImplemented'\r\n        tmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_non_packing_pickler0')\r\n../../mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/_base.py:458: in result\r\n    return self.__get_result()\r\n        self       = None\r\n        timeout    = None\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = None\r\n\r\n    def __get_result(self):\r\n        if self._exception:\r\n            try:\r\n>               raise self._exception\r\nE               RuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\n\r\nself       = None\r\n\r\n../../mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/_base.py:403: RuntimeError\r\n___________________________________________________________ test_malformed_pickler ____________________________________________________________\r\nconcurrent.futures.process._RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/process.py\", line 246, in _process_worker\r\n    r = call_item.fn(*call_item.args, **call_item.kwargs)\r\n  File \"/home/jpivarski/irishep/awkward/tests/test_2682_custom_pickler.py\", line 26, in _pickle_complex_array_and_return_form_impl\r\n    return pickle.loads(pickle.dumps(array)).layout.form\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1468, in __reduce_ex__\r\n    result = custom_reduce(self, protocol)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 70, in custom_reduce\r\n    plugin = get_custom_reducer()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 60, in get_custom_reducer\r\n    _plugin = _load_reduce_plugin()\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_pickle.py\", line 43, in _load_reduce_plugin\r\n    raise RuntimeError(\r\nRuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\ntmp_path = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_malformed_pickler0')\r\n\r\n    def test_malformed_pickler(tmp_path):\r\n        with pytest.raises(RuntimeError, match=r\"malformed pickler!\"):\r\n>           pickle_complex_array_and_return_form(\r\n                \"\"\"\r\n    def plugin(obj, protocol: int):\r\n        raise RuntimeError('malformed pickler!')\"\"\",\r\n                tmp_path,\r\n            )\r\n\r\ntmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_malformed_pickler0')\r\n\r\ntests/test_2682_custom_pickler.py:88: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntests/test_2682_custom_pickler.py:40: in pickle_complex_array_and_return_form\r\n    return pickle_future.result()\r\n        executor   = <concurrent.futures.process.ProcessPoolExecutor object at 0x7faed6ea3310>\r\n        pickle_future = <Future at 0x7faed6ea34c0 state=finished raised RuntimeError>\r\n        pickler_source = \"\\ndef plugin(obj, protocol: int):\\n    raise RuntimeError('malformed pickler!')\"\r\n        tmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_malformed_pickler0')\r\n../../mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/_base.py:458: in result\r\n    return self.__get_result()\r\n        self       = None\r\n        timeout    = None\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = None\r\n\r\n    def __get_result(self):\r\n        if self._exception:\r\n            try:\r\n>               raise self._exception\r\nE               RuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\n\r\nself       = None\r\n\r\n../../mambaforge/envs/just-dask-awkward/lib/python3.10/concurrent/futures/_base.py:403: RuntimeError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\ntmp_path = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_malformed_pickler0')\r\n\r\n    def test_malformed_pickler(tmp_path):\r\n>       with pytest.raises(RuntimeError, match=r\"malformed pickler!\"):\r\nE       AssertionError: Regex pattern did not match.\r\nE        Regex: 'malformed pickler!'\r\nE        Input: 'Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint'\r\n\r\ntmp_path   = PosixPath('/tmp/pytest-of-jpivarski/pytest-88/test_malformed_pickler0')\r\n\r\ntests/test_2682_custom_pickler.py:87: AssertionError\r\n=========================================================== short test summary info ===========================================================\r\nFAILED tests/test_2682_custom_pickler.py::test_default_pickler - AssertionError: assert ListForm('i64', 'i64', NumpyForm('int64')) == ListOffsetForm('i64', NumpyForm('int64'))\r\nFAILED tests/test_2682_custom_pickler.py::test_noop_pickler - RuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\nFAILED tests/test_2682_custom_pickler.py::test_non_packing_pickler - RuntimeError: Encountered multiple Awkward pickle reducers under the `awkward.pickle.reduce` entrypoint\r\nFAILED tests/test_2682_custom_pickler.py::test_malformed_pickler - AssertionError: Regex pattern did not match.\r\n============================================================== 4 failed in 1.15s ==============================================================\r\n```\r\n\r\nI'm going to see if this can be captured in a GitHub Action.",
  "closed_at":"2023-10-05T21:01:37Z",
  "comments":4,
  "created_at":"2023-10-04T20:29:57Z",
  "id":1926932986,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5y2qn6",
  "number":2738,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Custom pickler doesn't work in a conda environment (with Python 3.10, at least)",
  "updated_at":"2023-10-05T21:01:38Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"We had one special test, `Linux-ROOT`, for testing ROOT (which is based on conda). Rather than add another test runner, I extended `Linux-ROOT` to `Linux-ROOT-dask-awkward`, to test both third-party interactions.\r\n\r\nI believe that the set of issues we could face with ROOT and the set of issues we could face with dask-awkward are disjoint\u2014I don't think that ROOT or Dask is augmented in a relevant way by the presence of the other one. (Maybe ROOT will notice that Dask is present and adjust one of its backends, but I don't see how that could affect our tests of `ak.to_rdataframe` and `ak.from_rdataframe`.)",
  "closed_at":"2023-10-05T21:01:36Z",
  "comments":4,
  "created_at":"2023-10-04T21:10:19Z",
  "draft":false,
  "id":1926987777,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5b8SJv",
  "number":2739,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-05T21:01:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"test: add dask-awkward to at least one of our tests.",
  "updated_at":"2023-10-05T21:01:37Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`nplike.asarray` ultimately delegates to the underlying NumPy-like library's `asarray`. For NumPy, this invokes `obj.__array__()`. If our object is e.g. an `Index` that wraps a placeholder, this conversion fails because NumPy et al. are not aware of our placeholder type, and eagerly tries to convert it to a buffer.\r\n\r\nThis would also fail during typetracing time, but it may well be that there are branches where this gets skipped.\r\n\r\nWe could add our own protocol to the `Content` and `Index` types that permits `Content` and `Index` objects to pass through `asarray`, e.g.\r\n```python\r\nclass Numpy:\r\n    ...\r\n    def asarray(self, obj, *, ...):\r\n        if hasattr(obj, \"_awkward_asarray_\"):\r\n            return obj._awkward_asarray_(self, ...)\r\n        else:\r\n            return numpy.asarray(obj, ...)\r\n\r\nclass Index:\r\n    ...\r\n    def _awkward_asarray_(self, nplike, ...):\r\n        return nplike.asarray(self.data, ...)\r\n```\r\n\r\nbut on balance I think it might be easier just to pull out `.data` by hand, because most of the time we should know that we have a `Content` / `Index` object.\r\n\r\nAt the same time, we've long prohibited `np.asarray` on e.g. `RegularArray`, and I think we should just do this for all Content nodes to be more thorough. Thus, this PR removes `NumpyArray.__array__`, and the same for `EmptyArray` et al.\r\n\r\nI didn't change `Index`, because I suspect that's used _everywhere_ in the wild (in legitimate NumPy-only cases), and the argument for `ak.Array` being the high-level `np.asarray` interface does not apply. Thus, library authors must take care not to use `asarray` even in NumPy-only contexts iff. there's a chance that the incoming array is a placeholder.\r\n\r\nSo, this PR changes two things:\r\n1. Don't pass in `Content` or `Index` arguments to `nplike.asarray`, as they nest the true buffers within themselves.\r\n2. Don't support `Content.__array__` for any content type, for the reason discussed above.\r\n",
  "closed_at":"2023-10-05T06:08:28Z",
  "comments":2,
  "created_at":"2023-10-04T22:18:31Z",
  "draft":false,
  "id":1927063509,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5b8iv2",
  "number":2740,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-05T06:08:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't use `np.asarray` on `Index` or `Content` objects",
  "updated_at":"2023-10-11T08:09:43Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Somehow, when authoring #2649, I swapped the names for the query descriptor and the dlpack method itself.",
  "closed_at":"2023-10-04T22:49:34Z",
  "comments":1,
  "created_at":"2023-10-04T22:27:22Z",
  "draft":false,
  "id":1927071062,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5b8kYD",
  "number":2741,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-04T22:49:34Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: swap names for `__dlpack__`",
  "updated_at":"2023-10-04T22:49:35Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"After becoming more familiar with environments, prompted by a comment made by @henryiii, I've decided to share our deployment environments across targets, and rename them accordingly. This should slightly improve UX.\r\n\r\nI've also added URLs to the PyPI deployments, and a linter for the YML files in GH.",
  "closed_at":"2023-10-05T21:06:49Z",
  "comments":1,
  "created_at":"2023-10-05T15:55:07Z",
  "draft":false,
  "id":1928611133,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5cByL-",
  "number":2742,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-05T21:06:49Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: improve deployment environment UX",
  "updated_at":"2023-10-05T21:06:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nAs discussed in meeting.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-10-06T14:35:32Z",
  "id":1930308533,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5zDiu1",
  "number":2743,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add guard to disable pyarrow features in older pyarrow versions",
  "updated_at":"2024-01-19T23:49:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-10-06T15:14:17Z",
  "comments":1,
  "created_at":"2023-10-06T15:14:03Z",
  "draft":false,
  "id":1930402141,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5cHyzl",
  "number":2744,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-06T15:14:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `__array__` accepts positional arguments",
  "updated_at":"2024-02-01T21:37:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"cppyy module relied on ak._utils to check the version.\r\nAlso we need to import cling. I'm not sure this is the best place, but it works:\r\n```python \r\nimport awkward._connect.cling  # noqa: F401\r\n```",
  "closed_at":"2023-10-09T14:39:17Z",
  "comments":4,
  "created_at":"2023-10-08T07:55:35Z",
  "draft":false,
  "id":1931694961,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5cMAAP",
  "number":2747,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-09T14:39:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update cppyy module",
  "updated_at":"2023-10-09T17:52:02Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"as discussed at the cppyy meeting the next cppyy version is going to be 3.1.0",
  "closed_at":"2023-10-11T08:50:41Z",
  "comments":2,
  "created_at":"2023-10-11T07:50:54Z",
  "draft":false,
  "id":1937087473,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5cel0H",
  "number":2748,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-11T08:50:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update cppyy version",
  "updated_at":"2023-10-11T08:50:42Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR follows #2740. I've updated that PR's description for context, but let me restart the problem here!\r\n\r\n`nplike.asarray` ultimately invokes NumPy's array interface mechanisms when it acts upon an `Index` or `Content` object. If we don't make this PR change, an array with placeholders that hits this codepath will lead to an exception being thrown.\r\n\r\nAs outlined in #2740, we *could* update `nplike.asarray` to handle these types, but I'm really in favour of having our internals be strict where possible; both to do less work, but also to make it easier to reason about.\r\n\r\nSo, this PR replaces any as-yet uncaught uses of `nplike.asarray(index)` with `index.data` if the `nplike` is unchanged, or `nplike.asarray(index.data)` if not.\r\n\r\nI haven't been exhaustive; anything that isn't being run in our test suite won't have been caught, but I'm happy enough with our coverage that those will hopefully not be too many that we can't deal with them as they come in.\r\n\r\nI haven't added anything to the test suite to catch this. I'm slightly reluctant to e.g. add a strict-mode for our test suite that throws an exception if `Index._array_interface_` is inspected. We could do this, though, and I'd welcome @jpivarski thoughts!",
  "closed_at":"2023-10-11T16:29:43Z",
  "comments":2,
  "created_at":"2023-10-11T08:42:40Z",
  "draft":false,
  "id":1937201555,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ce_CW",
  "number":2749,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-11T16:29:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't call asarray on `Index` objects internally",
  "updated_at":"2023-10-11T16:29:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR sets my affiliation as Princeton!",
  "closed_at":"2023-10-11T15:27:15Z",
  "comments":0,
  "created_at":"2023-10-11T14:46:56Z",
  "draft":false,
  "id":1937980842,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5chqs-",
  "number":2750,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-11T15:27:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update CITATION.cff",
  "updated_at":"2023-10-11T15:27:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nSee the discussion in #2749",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-10-11T16:30:23Z",
  "id":1938216685,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws5zhtbt",
  "number":2751,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Add strict-mode to test suite for `np.asarray(index)`",
  "updated_at":"2023-10-11T16:30:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR reverts the breaking parts of #2740 to introduce a deprecation period.",
  "closed_at":"2023-10-12T15:57:28Z",
  "comments":1,
  "created_at":"2023-10-11T21:13:13Z",
  "draft":false,
  "id":1938749852,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ckWY6",
  "number":2752,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-12T15:57:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: revert breaking component of `asarray` PR",
  "updated_at":"2023-10-12T15:57:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"A number of high-level operations in Awkward Array did not accept the `highlevel` or `behavior` arguments. I don't think we ever explicitly decided upon this, so I assume that it is an oversight in need of correction!",
  "closed_at":"2023-10-13T19:32:21Z",
  "comments":2,
  "created_at":"2023-10-12T20:49:37Z",
  "draft":false,
  "id":1940773256,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5crSR_",
  "number":2754,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-13T19:32:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add `highlevel`, `behavior` arguments to composite reducers",
  "updated_at":"2023-10-14T11:53:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"When we invoke `pyupgrade`, it should be given the minimum Python version explicitly; it doesn't read `pyproject.toml`.",
  "closed_at":"2023-10-13T19:07:16Z",
  "comments":1,
  "created_at":"2023-10-13T11:38:27Z",
  "draft":false,
  "id":1941782709,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5cuvMT",
  "number":2756,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-13T19:07:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: set `pyupgrade` version",
  "updated_at":"2023-10-13T19:07:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This will partially fix #1391 by adding `.attrs`, a dictionary of metadata that is associated with the top-level array, with the following semantics:\r\n- Operations with multiple arrays take the set-union of properties, first wins\r\n- Keys beginning with a special prefix (`@`) will be removed at serialisation time.\r\n\r\nWhilst touching some of this code, I did some work on type hints and refactoring.\r\n\r\n",
  "closed_at":"2023-11-08T16:23:07Z",
  "comments":16,
  "created_at":"2023-10-13T11:44:29Z",
  "draft":false,
  "id":1941790886,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5cuw_t",
  "number":2757,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-08T16:23:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `.attrs` to highlevel objects",
  "updated_at":"2023-11-08T16:23:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We have high-level `ak.XXX` reducers that include `nan`-aware variants. We should export those!",
  "closed_at":"2023-10-16T16:14:51Z",
  "comments":1,
  "created_at":"2023-10-16T14:40:47Z",
  "draft":false,
  "id":1945375810,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5c6I15",
  "number":2758,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-16T16:14:51Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: export `nan` variants",
  "updated_at":"2023-10-16T16:14:52Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Presently, setting `.behavior` and `.layout` does not consistently update `__class__`. This PR rectifies the behavior such that `__class__` is updated for both attributes!",
  "closed_at":"2023-10-16T17:08:17Z",
  "comments":1,
  "created_at":"2023-10-16T14:49:05Z",
  "draft":false,
  "id":1945401057,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5c6Oby",
  "number":2759,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-16T17:08:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: update `__class__` for both `layout` and `behavior` consistently",
  "updated_at":"2023-10-16T17:08:18Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nI suspect this is a general bug with reducers implemented through multiple-step operations, i.e. not just `axis=0`.\r\n\r\nThe problem arises when reducing a ragged array e.g.\r\n```python\r\nimport awkward as ak\r\n\r\nassert isinstance(\r\n    ak.softmax([[1, 2, 3, 4], [5], [10]], axis=0, highlevel=True), ak.Array\r\n)\r\n```",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-10-17T21:40:19Z",
  "id":1948327116,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws50IRzM",
  "number":2760,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`ak.softmax` with `axis=0` fails",
  "updated_at":"2023-10-17T21:40:26Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The `behavior` for one array given to broadcasting functions no longer _needs_ to be broadcast against the other array behaviors. Thus, let's remove that restriction.\r\n\r\nThis would break users who introduce behaviors on array X, and expect `ak.broadcast_arrays` to merge them.",
  "closed_at":"2023-10-19T18:56:28Z",
  "comments":2,
  "created_at":"2023-10-19T16:19:16Z",
  "draft":false,
  "id":1952635256,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dS1as",
  "number":2761,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-19T18:56:28Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: drop `behavior` broadcasting",
  "updated_at":"2023-10-19T18:56:29Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\n```python\r\nimport numba\r\nimport awkward as ak\r\n\r\nSOME_ATTRS = {\"FOO\": \"BAR\"}\r\nbuilder = ak.ArrayBuilder(behavior=SOME_ATTRS)\r\n\r\n\r\n@numba.njit\r\ndef func(array):\r\n    return array\r\n\r\n\r\nassert func(builder).behavior is SOME_ATTRS\r\n\r\n```",
  "closed_at":"2023-10-26T17:35:38Z",
  "comments":4,
  "created_at":"2023-10-19T22:38:23Z",
  "id":1953163194,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws50aue6",
  "number":2762,
  "performed_via_github_app":null,
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"Numba's `njit` doesn't support non-default behaviors",
  "updated_at":"2023-10-26T17:35:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"At present, `to_layout` eagerly converts anything it can recognise into an array. Yet, there are several places where we want to be stricter about what is supported and to be able to identify scalar inputs.\r\n\r\nThis PR extends the configurability of `to_layout`, to permit finer control of scalar input handling. It adds new parameters to `ak.to_layout:`\r\n- `allow_none` \u2014 whether `None` values are permitted as inputs\r\n- `use_from_iter` \u2014 whether iterable values are permitted as inputs\r\n- `primitive_policy` \u2014 the policy governing handling of scalars, e.g. promotion, pass-through, error\r\n- `string_policy` \u2014 the policy governing handling of strings, e.g. promotion, pass-through, as-characters, error\r\nI also removed the `__cast__` default that casts `str` to length-1 arrays of strings. \r\n",
  "closed_at":"2023-10-26T09:50:24Z",
  "comments":8,
  "created_at":"2023-10-20T17:01:00Z",
  "draft":false,
  "id":1954708553,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dZ6hg",
  "number":2763,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-26T09:50:24Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: extend `to_layout` options",
  "updated_at":"2023-10-26T09:50:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nThis is either a bug in Tiled's implementation of Awkward slices or in Awkward, but from the error message, I think it's Awkward.\r\n\r\nWith an `array` that has `RecordType(ListType(RecordType(...))`, I can't slice\r\n\r\n```python\r\narray[0, \"field_name\", 0]\r\n```\r\n\r\nwithout getting\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/highlevel.py\", line 1014, in __getitem__\r\n    prepare_layout(self._layout[where]), self._behavior, allow_other=True\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/contents/content.py\", line 519, in __getitem__\r\n    return self._getitem(where)\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/contents/content.py\", line 569, in _getitem\r\n    return out._getitem_at(0)\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/contents/indexedarray.py\", line 277, in _getitem_at\r\n    return self._content._getitem_at(where)\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/contents/recordarray.py\", line 447, in _getitem_at\r\n    raise ak._errors.index_error(self, where)\r\nIndexError: cannot slice RecordArray (of length 0) with 0\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jpivarski/irishep/tiled/tiled/client/awkward.py\", line 55, in __getitem__\r\n    return self.read(slice=slice)\r\n  File \"/home/jpivarski/irishep/tiled/tiled/client/awkward.py\", line 33, in read\r\n    awkward.typetracer.touch_data(proxy_array[slice])\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/highlevel.py\", line 1012, in __getitem__\r\n    with ak._errors.SlicingErrorContext(self, where):\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/_errors.py\", line 67, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/home/jpivarski/mambaforge/envs/tiled/lib/python3.10/site-packages/awkward/_errors.py\", line 82, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nIndexError: cannot slice RecordArray (of length 0) with 0\r\n\r\nThis error occurred while attempting to slice\r\n\r\n    <Array-typetracer [...] type='## * {offsets: var * int64, file: var * {...'>\r\n\r\nwith\r\n\r\n    (0, 'era', 0)\r\n```\r\n\r\nMy work-around is https://github.com/jpivarski/tiled-uproot/pull/3/commits/586f3c565e8ed85eccd3d8891a71c270a96616f7.\r\n\r\nThe real `RecordArray` doesn't have length zero (or the work-around wouldn't work). Could this be a case in which an effect on a Form is computed by converting it to a length-0 array, then converting back? (If so, it will eventually get us in the Dask world, too.)\r\n\r\nCc: @danielballan",
  "closed_at":"2023-10-27T09:31:39Z",
  "comments":1,
  "created_at":"2023-10-20T20:05:13Z",
  "id":1954947669,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws50hiJV",
  "number":2764,
  "performed_via_github_app":null,
  "reactions":{
   "eyes":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":"completed",
  "title":"Typetracer can't slice with `(int, str, int)`",
  "updated_at":"2023-10-27T09:31:39Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fix #2764 by adding support for recursive erasure of length information. \r\n\r\nInstead of `forget_length: bool`, we have `forget_length: Literal[\"keep\", \"drop_outer\", \"drop_recursive\"]`, which enables us to decide how deep the lengths are forgotten. For the `Form \u2192 Content` case, we always want recursively to drop lengths.\r\n\r\n> **Warning**\r\n> This PR introduces a deprecation in the `forget_length` argument.",
  "closed_at":"2023-10-26T09:43:04Z",
  "comments":7,
  "created_at":"2023-10-22T15:50:57Z",
  "draft":true,
  "id":1955952355,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dd5EQ",
  "number":2765,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add policy for length erasure",
  "updated_at":"2024-02-01T19:24:06Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Added some methods to be able to the features of `LayoutBuilder.h` in `C` where `std::map` can't be used.\r\n- `to_buffer` method for each builder to copy and concatenate the data of each builder buffer to user-defined pointer based on the given node name instead of passing a map.\r\n- some other helper functions to extract the names, sizes (in bytes) and the number of buffers in a separate namespace.",
  "closed_at":"2023-10-23T15:37:12Z",
  "comments":11,
  "created_at":"2023-10-23T12:57:58Z",
  "draft":false,
  "id":1957107836,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dhwDp",
  "number":2766,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-23T15:37:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `to_buffer` and helper methods in layout builder",
  "updated_at":"2023-10-23T15:37:13Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"In pursuing recent PRs, the fragility of our ufunc handling became clearer; we've spoken for a while about NEP-50 and value-based promotion, and the complexities of NumPy's type conversion rules. This PR I *believe* makes a pragmatic step in this direction, using https://numpy.org/doc/stable/reference/generated/numpy.ufunc.resolve_dtypes.html to predict the input and output type combination that a ufunc would use. As such, it applies [NEP-50 rules](https://numpy.org/neps/nep-0050-scalar-promotion.html#abstract) which are value-insensitive. \r\n\r\nHow does this PR change Awkward?\r\n\r\nIn `main`, the following behavior is exhibited:\r\n```pycon\r\n>>> import awkward as ak\r\n>>> import numpy as np\r\n>>> x = ak.from_numpy(np.arange(10, dtype=np.uint8)) + np.int64(1)\r\n>>> x.type.show()\r\n10 * uint8\r\n>>> y = ak.from_numpy(np.arange(10, dtype=np.uint8)) + np.int64(2**32 - 1)\r\n>>> y.type.show()\r\n10 * uint32\r\n>>> z = ak.from_numpy(np.arange(10, dtype=np.uint8)) + (2**32 - 1)\r\n>>> z.type.show()\r\n10 * uint32\r\n```\r\n\r\nAfter this PR:\r\n\r\n```pycon\r\n>>> import awkward as ak\r\n>>> import numpy as np\r\n>>> x = ak.from_numpy(np.arange(10, dtype=np.uint8)) + np.int64(1)\r\n>>> x.type.show()\r\n10 * int64\r\n>>> y = ak.from_numpy(np.arange(10, dtype=np.uint8)) + np.int64(2**32 - 1)\r\n>>> y.type.show()\r\n10 * int64\r\n>>> z = ak.from_numpy(np.arange(10, dtype=np.uint8)) + (2**32 - 1)\r\nDeprecationWarning: NumPy will stop allowing conversion of out-of-bound Python integers to integer arrays.  The conversion of 4294967296 to uint8 will fail in the future.\r\nFor the old behavior, usually:\r\n    np.array(value).astype(dtype)\r\nwill give the desired result (the cast overflows).\r\n  return self._module.asarray(obj, dtype=dtype)\r\n>>> z.type.show()\r\n10 * uint8\r\n```\r\n\r\nCrucially this means that old code will start throwing warnings if bare Python scalars exceed the size of the array `dtype`. This is probably not all that likely; most of the time we pull values from other array operations, e.g.\r\n```pycon\r\n>>> array_of_large_values = ak.from_numpy(np.array([2**32-20], dtype=np.uint32))\r\n>>> large_value = np.max(array_of_large_values)\r\n>>> w = ak.from_numpy(np.arange(10, dtype=np.uint8)) + large_value\r\n>>> w\r\n<Array [4294967276, 4294967277, ..., 4294967284, 4294967285] type='10 * uint32'>\r\n```\r\n\r\nNumPy is going in this direction with NEP-50 (under _consideration_ only so far). The only other way we could do this in a \"safer\" type agnostic fashion is to _always_ take the default for the Python value kind (e.g. `int64` for integrals, etc.), or the _largest_ type for value kinds. I prefer to align with NumPy, and let warnings inform users.",
  "closed_at":"2023-10-24T17:00:11Z",
  "comments":8,
  "created_at":"2023-10-23T17:32:42Z",
  "draft":false,
  "id":1957666311,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5djpXa",
  "number":2767,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-24T17:00:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: rework ufunc type promotion handling",
  "updated_at":"2023-10-24T17:00:12Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.4.6\n\n### Description and code to reproduce\n\nIt seems that `ak.argsort` does not work on arrays that are entirely `None`, though `ak.sort` works fine. I would have naively expected that if `sort` works on an array, `argsort` would also work on the array, so it is not clear to me if this behavior would be expected or not. Here is an example that reproduces the behavior: \r\n```\r\nimport awkward as ak\r\n  \r\na = ak.Array([None,None,[None,None]])\r\nprint(ak.sort(a,axis=1))\r\nprint(ak.argsort(a,axis=1))\r\n```  \r\nThe `ak.sort` line is ok (and prints `[None, None, [None, None]]`), while the `ak.argsort` line fails with the error below: \r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/contents/numpyarray.py\", line 301, in _getitem_at\r\n    out = self._data[where]\r\n          ~~~~~~~~~~^^^^^^^\r\nIndexError: index 2 is out of bounds for axis 0 with size 2\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/k.mohrman/coffea_dir/ewkcoffea/analysis/wwz/mre2.py\", line 6, in <module>\r\n    print(ak.argsort(a,axis=1))\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/highlevel.py\", line 1233, in __str__\r\n    return awkward._prettyprint.valuestr(self, 1, 80)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/_prettyprint.py\", line 240, in valuestr\r\n    _, strs = valuestr_horiz(data, limit_cols)\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/_prettyprint.py\", line 135, in valuestr_horiz\r\n    cols_taken, strs = valuestr_horiz(current, limit_cols - 2)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/_prettyprint.py\", line 117, in valuestr_horiz\r\n    current = get_at(data, index)\r\n              ^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/_prettyprint.py\", line 43, in get_at\r\n    out = data._layout._getitem_at(index)\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/contents/indexedoptionarray.py\", line 308, in _getitem_at\r\n    return self._content._getitem_at(self._index[where])\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/k.mohrman/miniconda3/envs/ak-env/lib/python3.12/site-packages/awkward/contents/numpyarray.py\", line 303, in _getitem_at\r\n    raise ak._errors.index_error(self, where, str(err)) from err\r\nIndexError: cannot slice NumpyArray (of length 2) with 2: index 2 is out of bounds for axis 0 with size 2\r\n```",
  "closed_at":"2023-10-24T17:02:07Z",
  "comments":2,
  "created_at":"2023-10-24T03:33:46Z",
  "id":1958430753,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws50u0gh",
  "number":2768,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`IndexError` for `ak.argsort` on arrays with `None` ",
  "updated_at":"2023-10-24T17:02:08Z",
  "user":"MDQ6VXNlcjM2MTQ1MDI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR fixes #2768 by adding support for the all-none case to our `awkward_Index_nones_as_index.cpp` kernel. It also ensures that if we're argsorting the final dimension, we drop the option type from that dimension i.e. for this argsort result `[10, 20, None, 5] \u2192 [3, 0, 1, 4]` the array doesn't contain any `None`.\r\n\r\nI think we should probably refactor this logic, but right now that's not the highest priority, so I've just patched",
  "closed_at":"2023-10-24T17:02:06Z",
  "comments":2,
  "created_at":"2023-10-24T08:48:34Z",
  "draft":false,
  "id":1958792926,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dncna",
  "number":2769,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-24T17:02:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support all-`None` index in `awkward_Index_nones_as_index.cpp`",
  "updated_at":"2023-10-24T17:02:07Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"fixes #2762",
  "closed_at":"2023-10-26T17:35:37Z",
  "comments":4,
  "created_at":"2023-10-25T11:14:52Z",
  "draft":false,
  "id":1961143192,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dvV_d",
  "number":2770,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-26T17:35:37Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: handle unhashable behaviour type",
  "updated_at":"2023-10-26T17:35:38Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I have added the helper functions to `utils.h` as we discussed.\r\n\r\nI am not sure about the comments we want to add regarding not recommending it. ",
  "closed_at":"2023-10-26T07:55:36Z",
  "comments":2,
  "created_at":"2023-10-25T14:37:57Z",
  "draft":false,
  "id":1961586564,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dw2mc",
  "number":2771,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-26T07:55:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add helper methods to `utils.h`",
  "updated_at":"2023-10-26T07:55:37Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain`\n\n### Description and code to reproduce\n\nWe should stash metadata in the parquet schema, rather than using extensionarray.\r\nWe still need `ExtensionArray` for `to_arrow` because `pa.array` doesn't otherwise have a mechanism for stashing metadata.",
  "closed_at":null,
  "comments":2,
  "created_at":"2023-10-25T15:05:28Z",
  "id":1961650911,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws507Grf",
  "number":2772,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"PyArrow doesn't permit selective reading with ExtensionArray",
  "updated_at":"2023-10-27T15:32:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Prepare for ruff-format.\n",
  "closed_at":"2023-10-26T14:00:00Z",
  "comments":3,
  "created_at":"2023-10-25T19:00:08Z",
  "draft":false,
  "id":1962041626,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dyZK6",
  "number":2773,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-26T14:00:00Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: prepare for ruff-format",
  "updated_at":"2023-10-26T14:00:01Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Comes from working on https://github.com/dask-contrib/dask-awkward/issues/396, I found that unknown_length objects cannot be `truediv`ed!\r\n\r\n`Scalar / Scalar` operations in dask-awkward are unoptimizable because the optimization only graph eventually hits `unkown_length / unknown_length` if the `Scalar` comes from a `dak.num(..., axis=0)`",
  "closed_at":"2023-10-30T11:28:40Z",
  "comments":4,
  "created_at":"2023-10-25T19:54:50Z",
  "draft":false,
  "id":1962126707,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5dyror",
  "number":2774,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: add `truediv` support for `unknown_length`",
  "updated_at":"2023-10-30T11:28:40Z",
  "user":"MDQ6VXNlcjMyMDIwOTA="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As discussed in https://github.com/scikit-hep/awkward/pull/2765#issuecomment-1780771826, it doesn't make sense for us to retain interior (buffer) lengths when the outer length is not known. If we think about layouts as being built in a `from_buffers` style, we *must* know parent lengths to know child lengths. \r\n\r\nFixes #2764",
  "closed_at":"2023-10-27T09:31:38Z",
  "comments":3,
  "created_at":"2023-10-26T09:45:57Z",
  "draft":false,
  "id":1963126902,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5d2FY5",
  "number":2775,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-27T09:31:38Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: drop lengths recursively",
  "updated_at":"2023-11-01T22:34:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Noticed this while @ioanaif was debugging an issue in Uproot.\r\n\r\nNo time pressure; just thought I'd fix it while we see it.\r\n\r\nIf you approve, @agoose77, go ahead and merge it.",
  "closed_at":"2023-10-26T13:47:14Z",
  "comments":0,
  "created_at":"2023-10-26T13:25:15Z",
  "draft":false,
  "id":1963566855,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5d3nP3",
  "number":2776,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-26T13:47:14Z"
  },
  "reactions":{
   "hooray":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"fix: protect RecordForm against len(fields) != len(contents)",
  "updated_at":"2023-10-26T13:47:15Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"This moves to Ruff-format. Most changes are better (and the one that's worse is being fixed, see https://github.com/astral-sh/ruff/issues/8226).\r\n\r\nI've also removed a few checks that were redundant (pyupgrade) or slow and not very helpful / probably redundant (check debug statements).\r\n\r\nAn uncached run of black took 4.63s. With caching it's 0.4s. Ruff-format doesn't have caching yet AFAIK, but it takes 0.06 seconds.\r\n\r\nDropping pyupgrade saves 2 more seconds. Debug statements saves another 0.5 seconds.\r\n\r\nTotal time is now under 4 seconds for me. It used to be 6.5-10 seconds.\r\n\r\nSee https://github.com/scientific-python/cookie/pull/299.",
  "closed_at":"2023-10-27T09:25:33Z",
  "comments":1,
  "created_at":"2023-10-26T15:18:51Z",
  "draft":false,
  "id":1963810732,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5d4c3V",
  "number":2777,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-27T09:25:33Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: move to Ruff-format",
  "updated_at":"2023-10-27T09:25:34Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This follows our planned removal in 2.5.0",
  "closed_at":"2023-11-05T15:02:39Z",
  "comments":1,
  "created_at":"2023-10-27T10:06:57Z",
  "draft":false,
  "id":1965191322,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5d9IKZ",
  "number":2779,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-05T15:02:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: remove `ak.to_categorical`",
  "updated_at":"2023-11-05T15:02:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-10-28T09:06:16Z",
  "comments":2,
  "created_at":"2023-10-27T15:09:54Z",
  "draft":true,
  "id":1965723601,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5d-9U9",
  "number":2781,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support older NumPy",
  "updated_at":"2024-02-01T19:23:44Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\r\n\r\nHello, thanks for making `awkward`! I'd love a way to save an `awkward` Array to the [`Zarr`](https://zarr.readthedocs.io/en/stable/index.html) format if possible! I've checked the links and searched for `Zarr` and found a discussion [post](https://github.com/scikit-hep/awkward/discussions/29)\r\n\r\nThis would be specifically beneficial for Image Mass Spectrometry, where we may have tens of thousands to hundreds of thousands of pixels, each having variable length masses and intensities (this is where `awkward` has been helping me). \r\n\r\nIf this is a feature worth considering / in the scope of `awkward`, I'd also love to help with a contribution or two!",
  "closed_at":"2024-01-17T15:02:41Z",
  "comments":2,
  "created_at":"2023-10-27T17:51:42Z",
  "id":1965950577,
  "labels":null,
  "locked":true,
  "milestone":null,
  "node_id":"I_kwDODBCWws51LgZx",
  "number":2782,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Write to `Zarr`",
  "updated_at":"2024-01-17T15:02:41Z",
  "user":"MDQ6VXNlcjg5MDkzMTU="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"It turns out that our CI wasn't properly testing the package combinations that we'd asked it to \u2014 there were subsequent install steps that overwrote the intended variations. This means that #2767 was not properly tested against older versions of NumPy, leading to a bug.\r\n\r\nAlthough it's possible to use multiple install steps, it best reflects our intentions if we use a single install command.\r\n\r\nIn future, we probably just want to have a single `requirements.txt` file, and a separate `constraints.txt` that pins these dependency versions on our lower-bound configuration. However, we don't currently test *all* dependencies at the lower bound. This PR only runs core tests (NumPy + PyArrow) in the 3.8 tests.\r\n\r\nFixes #2784 ",
  "closed_at":"2023-10-30T13:28:35Z",
  "comments":2,
  "created_at":"2023-10-28T09:05:54Z",
  "draft":false,
  "id":1966512318,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eBnT5",
  "number":2783,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-10-30T13:28:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: fix oldest-supported-dependencies test workflow",
  "updated_at":"2023-10-30T13:28:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\nNumPy 1.18 is very old, so few people were actually testing this.\r\n\r\nWe were not aware of the problem until we introduced features that silently depended upon \"NumPy>=1.24\", which is much newer; downstream projects (coffea) tested against `1.18 < numpy < 1.24` and raised the alarm.",
  "closed_at":"2023-10-30T13:28:36Z",
  "comments":3,
  "created_at":"2023-10-30T11:06:43Z",
  "id":1968082763,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws51To9L",
  "number":2784,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"NumPy 1.18 is not properly supported",
  "updated_at":"2023-10-30T13:28:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Replaces #2774 by ensuring the return type of `ak.num` is always a valid \"index type\" (something that kernels produce).\r\n\r\nIt might be that this is an integer rather than an `np.ndarray` (or `cp.ndarray`, etc); this is up to the nplike. Right now, nplikes don't promote Python integers to 0D arrays.",
  "closed_at":"2023-11-01T12:22:48Z",
  "comments":3,
  "created_at":"2023-10-30T11:11:39Z",
  "draft":false,
  "id":1968091187,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eGw4o",
  "number":2785,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-01T12:22:48Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `ak.num` should always return a useful (non-unknown length) type",
  "updated_at":"2023-11-01T12:22:49Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [numpy](https://github.com/numpy/numpy) from 1.18.0 to 1.22.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/numpy/numpy/releases\">numpy's releases</a>.</em></p>\n<blockquote>\n<h2>v1.22.0</h2>\n<h1>NumPy 1.22.0 Release Notes</h1>\n<p>NumPy 1.22.0 is a big release featuring the work of 153 contributors\nspread over 609 pull requests. There have been many improvements,\nhighlights are:</p>\n<ul>\n<li>Annotations of the main namespace are essentially complete. Upstream\nis a moving target, so there will likely be further improvements,\nbut the major work is done. This is probably the most user visible\nenhancement in this release.</li>\n<li>A preliminary version of the proposed Array-API is provided. This is\na step in creating a standard collection of functions that can be\nused across application such as CuPy and JAX.</li>\n<li>NumPy now has a DLPack backend. DLPack provides a common interchange\nformat for array (tensor) data.</li>\n<li>New methods for <code>quantile</code>, <code>percentile</code>, and related functions. The\nnew methods provide a complete set of the methods commonly found in\nthe literature.</li>\n<li>A new configurable allocator for use by downstream projects.</li>\n</ul>\n<p>These are in addition to the ongoing work to provide SIMD support for\ncommonly used functions, improvements to F2PY, and better documentation.</p>\n<p>The Python versions supported in this release are 3.8-3.10, Python 3.7\nhas been dropped. Note that 32 bit wheels are only provided for Python\n3.8 and 3.9 on Windows, all other wheels are 64 bits on account of\nUbuntu, Fedora, and other Linux distributions dropping 32 bit support.\nAll 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix\nthe occasional problems encountered by folks using truly huge arrays.</p>\n<h2>Expired deprecations</h2>\n<h3>Deprecated numeric style dtype strings have been removed</h3>\n<p>Using the strings <code>&quot;Bytes0&quot;</code>, <code>&quot;Datetime64&quot;</code>, <code>&quot;Str0&quot;</code>, <code>&quot;Uint32&quot;</code>,\nand <code>&quot;Uint64&quot;</code> as a dtype will now raise a <code>TypeError</code>.</p>\n<p>(<a href=\"https://redirect.github.com/numpy/numpy/pull/19539\">gh-19539</a>)</p>\n<h3>Expired deprecations for <code>loads</code>, <code>ndfromtxt</code>, and <code>mafromtxt</code> in npyio</h3>\n<p><code>numpy.loads</code> was deprecated in v1.15, with the recommendation that\nusers use <code>pickle.loads</code> instead. <code>ndfromtxt</code> and <code>mafromtxt</code> were both\ndeprecated in v1.17 - users should use <code>numpy.genfromtxt</code> instead with\nthe appropriate value for the <code>usemask</code> parameter.</p>\n<p>(<a href=\"https://redirect.github.com/numpy/numpy/pull/19615\">gh-19615</a>)</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03\"><code>4adc87d</code></a> Merge pull request <a href=\"https://redirect.github.com/numpy/numpy/issues/20685\">#20685</a> from charris/prepare-for-1.22.0-release</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf\"><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba\"><code>125304b</code></a> wip</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea\"><code>c283859</code></a> Merge pull request <a href=\"https://redirect.github.com/numpy/numpy/issues/20682\">#20682</a> from charris/backport-20416</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee\"><code>5399c03</code></a> Merge pull request <a href=\"https://redirect.github.com/numpy/numpy/issues/20681\">#20681</a> from charris/backport-20954</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e\"><code>f9c45f8</code></a> Merge pull request <a href=\"https://redirect.github.com/numpy/numpy/issues/20680\">#20680</a> from charris/backport-20663</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b\"><code>794b36f</code></a> Update armccompiler.py</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f\"><code>d93b14e</code></a> Update test_public_api.py</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6\"><code>7662c07</code></a> Update <strong>init</strong>.py</li>\n<li><a href=\"https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef\"><code>311ab52</code></a> Update armccompiler.py</li>\n<li>Additional commits viewable in <a href=\"https://github.com/numpy/numpy/compare/v1.18.0...v1.22.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.18.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/scikit-hep/awkward/network/alerts).\n\n</details>",
  "closed_at":"2023-10-30T13:31:51Z",
  "comments":3,
  "created_at":"2023-10-30T13:30:41Z",
  "draft":false,
  "id":1968365461,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eHtPK",
  "number":2786,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump numpy from 1.18.0 to 1.22.0",
  "updated_at":"2023-10-30T13:44:36Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nNumPy's `full_like` functions implement asymmetric broadcasting; the `fill_value` argument is broadcast to the `array` argument's structure. We should also support this.",
  "closed_at":null,
  "comments":0,
  "created_at":"2023-10-30T15:32:36Z",
  "id":1968656512,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws51V1CA",
  "number":2787,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"`ak.full_like` should support asymmetric broadcasting",
  "updated_at":"2024-01-03T15:30:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Description of new feature\r\n\r\n[pint](https://pint.readthedocs.io) is a nice Python units library with [built-in support for NumPy arrays](https://pint.readthedocs.io/en/stable/user/numpy.html) and [other integrations](https://pint.readthedocs.io/en/stable/ecosystem.html?#pint-integrations). Would be nice to be able to propagate units with Awkward arrays too. Is there any interest/plan to have this in the future?",
  "closed_at":"2023-10-31T13:43:42Z",
  "comments":4,
  "created_at":"2023-10-31T13:42:29Z",
  "id":1970505419,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws51c4bL",
  "number":2788,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Support for physical units through pint",
  "updated_at":"2023-10-31T14:45:33Z",
  "user":"MDQ6VXNlcjIwMzU4MTky"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR enables `mypy` checks on a subset of the codebase and runs it as part of CI.\r\nRight now, we don't publicly declare type-hints via `py.typed`, so these are only used internally.\r\n\r\nSome things don't type super well; the `Sentinel` singleton doesn't seem very easy to handle. The closest we could get I *think* is to use e.g. \r\n```python\r\nimport enum\r\nfrom typing import Literal\r\n\r\n\r\nclass Unset(enum.Enum):\r\n    TOKEN = enum.auto()\r\n\r\n\r\ndef func_with_defaults(x: int, y: int | Literal[Unset.TOKEN]):\r\n    ...\r\n```\r\n\r\nBut for now, we'll just ignore this part of the typing.\r\n\r\nWe're not running in strict mode, so this only checks places where we declare types.",
  "closed_at":"2023-11-01T11:44:55Z",
  "comments":2,
  "created_at":"2023-10-31T21:24:58Z",
  "draft":false,
  "id":1971325385,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eR2WS",
  "number":2789,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-01T11:44:55Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: run mypy in CI",
  "updated_at":"2023-11-01T11:44:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"A recent PR made this change, but it looks like I missed one usage. I've made the function keyword-only for the non-leading arguments. `broadcast_and_apply` is an internal function, but I also think these functions benefit from this change: future refactors will throw exceptions rather than silently re-interpreting an argument, and it helps readability. Incidentally, that's how most of the usages of `broadcast_and_apply` are written; keyword arguments for the non-leading order args. \r\n\r\nAs this fixes a bug that's clearly from a previous PR, and it doesn't change any behaviour, I'm going to merge in the interest of unblocking main.",
  "closed_at":"2023-11-01T12:23:44Z",
  "comments":1,
  "created_at":"2023-11-01T11:57:28Z",
  "draft":false,
  "id":1972232831,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eU5Dv",
  "number":2790,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-01T12:23:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: remove old argument from `broadcast_and_apply`",
  "updated_at":"2023-11-01T12:23:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-11-01T21:00:33Z",
  "comments":1,
  "created_at":"2023-11-01T15:24:48Z",
  "draft":false,
  "id":1972591953,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eWH7t",
  "number":2791,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-01T21:00:33Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: run mypy on `ak.types`",
  "updated_at":"2023-11-01T21:00:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"PyArrow 14 started returning an option type, which follows from [the new `null_matching_behavior` option](https://github.com/apache/arrow/pull/36739).\r\n\r\n@jpivarski I'm wondering about the `_drop_option_preserving_form` helper function that we use to erase options. Should we only check the bitmasks being erased in our test suite? i.e., at production, we don't assert that each entry is 0, but rather assume that the operation doesn't do this \u2014 the mask is just PyArrow adding a mask node?",
  "closed_at":"2023-11-01T20:12:16Z",
  "comments":1,
  "created_at":"2023-11-01T17:46:51Z",
  "draft":false,
  "id":1972822757,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eW6TZ",
  "number":2792,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-01T20:12:16Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: don't preserve unexpected option for is_in",
  "updated_at":"2023-11-01T20:12:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This regression was introduced by #2763. This PR ensures that strings are treated as scalars in `fill_none`.",
  "closed_at":"2023-11-03T17:52:12Z",
  "comments":1,
  "created_at":"2023-11-01T22:33:25Z",
  "draft":false,
  "id":1973207179,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eYOOt",
  "number":2793,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-03T17:52:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support scalar strings in `fill_none`",
  "updated_at":"2023-11-03T17:52:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR is intended to serve as a conversation topic relating to #1391. I'm not intending to merge this PR as-is.\r\n\r\n@jpivarski and I discussed the needs of the XArray issue, and it seems that we want a mechanism that can set the deepest node's parameters, while following a path. The names here aren't final; it's just a talking point.\r\n\r\nHere's an example of the semantics.\r\n\r\n```python\r\nimport awkward as ak\r\n\r\n\r\nlayout = ak.contents.ListOffsetArray(\r\n    ak.index.Index64([0, 2, 4, 6]),\r\n    ak.contents.RecordArray(\r\n        [\r\n            ak.contents.IndexedOptionArray(\r\n                ak.index.Index64([0, 1, 2, 3, 4, 5, 6]),\r\n                ak.contents.NumpyArray([1, 2, 3, 1, 2, 3]),\r\n            )\r\n        ],\r\n        [\"x\"],\r\n    ),\r\n)\r\n\r\nresult = ak.with_field_attr(layout, \"x\", \"foo\", \"bar\", highlevel=False)\r\nmapping = ak.field_attrs(result, \"x\")\r\nassert mapping.get(\"foo\") == \"bar\"\r\n\r\n\r\nlayout = ak.contents.ListOffsetArray(\r\n    ak.index.Index64([0, 2, 4, 6]),\r\n    ak.contents.RecordArray(\r\n        [\r\n            ak.contents.IndexedOptionArray(\r\n                ak.index.Index64([0, 1, 2, 3, 4, 5, 6]),\r\n                ak.contents.NumpyArray([1, 2, 3, 1, 2, 3], parameters={\"foo\": \"bar\"}),\r\n            )\r\n        ],\r\n        [\"x\"],\r\n    ),\r\n)\r\n\r\nmapping = ak.field_attrs(layout, \"x\")\r\nassert mapping.get(\"foo\") == \"bar\"\r\n\r\n\r\nlayout = ak.contents.ListOffsetArray(\r\n    ak.index.Index64([0, 2, 4, 6]),\r\n    ak.contents.RecordArray(\r\n        [\r\n            ak.contents.IndexedOptionArray(\r\n                ak.index.Index64([0, 1, 2, 3, 4, 5, 6]),\r\n                ak.contents.NumpyArray([1, 2, 3, 1, 2, 3], parameters={\"foo\": \"baz\"}),\r\n                parameters={\"foo\": \"baz\"},\r\n            )\r\n        ],\r\n        [\"x\"],\r\n    ),\r\n)\r\n\r\nmapping = ak.field_attrs(layout, \"x\")\r\nassert mapping.get(\"foo\") == \"baz\"\r\n```",
  "closed_at":"2023-12-19T21:41:26Z",
  "comments":4,
  "created_at":"2023-11-02T23:13:26Z",
  "draft":false,
  "id":1975182703,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ee6wK",
  "number":2794,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `with_field_attr`",
  "updated_at":"2024-02-01T19:23:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The existing type hints for `nplike` were watered down to support a single `ArrayLike` protocol. This prevents us from imposing the constraint that a CuPy array can only be handled by a CuPy nplike. \r\n\r\nThis PR restores the original parametrised-nplike protocol, so that it's possible to declare an nplike as operating upon fixed array types. Unfortunately, mypy doesn't support higher-kinded-types, which are required to compose generic types. This means that we can't e.g. have \r\n```python\r\nclass NumpyArray(Generic[Backend]):\r\n    @property\r\n    def backend(self) -> Backend:\r\n        ...\r\n```\r\nand so on. There are higher-kinded-type works related to mypy, e.g. https://sobolevn.me/2020/10/higher-kinded-types-in-python, but they don't look like a good fit for our needs; they have some drawbacks and impose constraints on the runtime logic.\r\n\r\nSo, this PR won't have huge sweeping impact, but it will allow us to explicitly type an nplike as a typetracer nplike, e.g.\r\n\r\n\r\n```python\r\ndef is_typetracer_nplike(nplike: NumpyLike) -> TypeGuard[TypeTracer]:\r\n    return not nplike.known_data\r\n\r\n\r\nif is_typetracer_nplike(nplike):\r\n    print(nplike.zeros(4).report)\r\n```\r\n\r\nsuch that we can use fewer assertions.\r\n",
  "closed_at":"2023-11-03T14:04:15Z",
  "comments":2,
  "created_at":"2023-11-03T13:31:56Z",
  "draft":false,
  "id":1976214136,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eicou",
  "number":2795,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-03T14:04:15Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: introduce parametrised nplike types",
  "updated_at":"2023-11-03T14:04:16Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [amannn/action-semantic-pull-request](https://github.com/amannn/action-semantic-pull-request) from 5.3.0 to 5.4.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/releases\">amannn/action-semantic-pull-request's releases</a>.</em></p>\n<blockquote>\n<h2>v5.4.0</h2>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.3.0...v5.4.0\">5.4.0</a> (2023-11-03)</h2>\n<h3>Features</h3>\n<ul>\n<li>Use <code>github.api_url</code> as default for <code>githubBaseUrl</code> (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/243\">#243</a> by <a href=\"https://github.com/fty4\"><code>@\u200bfty4</code></a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4d5734a0a29e548daecc9e7bfeb9bb8b3acdee1e\">4d5734a</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/amannn/action-semantic-pull-request/blob/main/CHANGELOG.md\">amannn/action-semantic-pull-request's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.3.0...v5.4.0\">5.4.0</a> (2023-11-03)</h2>\n<h3>Features</h3>\n<ul>\n<li>Use <code>github.api_url</code> as default for <code>githubBaseUrl</code> (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/243\">#243</a> by <a href=\"https://github.com/fty4\"><code>@\u200bfty4</code></a>) (<a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4d5734a0a29e548daecc9e7bfeb9bb8b3acdee1e\">4d5734a</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/e9fabac35e210fea40ca5b14c0da95a099eff26f\"><code>e9fabac</code></a> chore: Release 5.4.0 [skip ci]</li>\n<li><a href=\"https://github.com/amannn/action-semantic-pull-request/commit/4d5734a0a29e548daecc9e7bfeb9bb8b3acdee1e\"><code>4d5734a</code></a> feat: Use <code>github.api_url</code> as default for <code>githubBaseUrl</code> (<a href=\"https://redirect.github.com/amannn/action-semantic-pull-request/issues/243\">#243</a> by <a href=\"https://github.com/fty4\"><code>@\u200bfty4</code></a>)</li>\n<li>See full diff in <a href=\"https://github.com/amannn/action-semantic-pull-request/compare/v5.3.0...v5.4.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=amannn/action-semantic-pull-request&package-manager=github_actions&previous-version=5.3.0&new-version=5.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-11-05T14:59:06Z",
  "comments":1,
  "created_at":"2023-11-03T17:26:23Z",
  "draft":false,
  "id":1976637296,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ej2MV",
  "number":2796,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-05T14:59:06Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump amannn/action-semantic-pull-request from 5.3.0 to 5.4.0",
  "updated_at":"2023-11-05T14:59:07Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-11-07T09:37:07Z",
  "comments":1,
  "created_at":"2023-11-05T15:03:13Z",
  "draft":false,
  "id":1977826978,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5enpzU",
  "number":2798,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-07T09:37:07Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: prepare for 2.5.0",
  "updated_at":"2023-11-07T09:37:08Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR takes into consideration the failure of Numba ufuncs in our NEP-50 aware machinery. It's unfortunate that this has taken a subsequent PR, but in retrospect we should have duck-typed this from the beginning.\r\n\r\nNow, we just ask the ufunc object if it supports NEP-50 via `resolve_dtypes`. In future, we should gracefully support Numba's implementation, assuming that it implements this in a similar way to NumPy, which it ought to.\r\n\r\nOur test suite will fail once Numba >=0.59.0 is available, because we can't know for certain what kind of exception it will throw. Thus, we'll catch that at the time and implement the correct exception handler in pytest.",
  "closed_at":"2023-11-06T16:17:26Z",
  "comments":2,
  "created_at":"2023-11-06T10:04:31Z",
  "draft":false,
  "id":1978753234,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eqtr9",
  "number":2799,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-06T16:17:26Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support arbitrary ufuncs with respect to NEP-50",
  "updated_at":"2023-11-06T16:17:27Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR updates our linting rules to always require annotation module imports. This was inspired by the default in https://github.com/scientific-python/cookie\r\n\r\nWe also update the tests. I would probably prefer to allow the tests to skip this import, but it doesn't seem possible to do this at the moment, so let's just make life easy and impose the same rules for all source files.",
  "closed_at":"2023-11-07T09:55:17Z",
  "comments":4,
  "created_at":"2023-11-06T16:59:21Z",
  "draft":false,
  "id":1979618343,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5etrcn",
  "number":2801,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-07T09:55:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: drop `isort` config, require annotation imports",
  "updated_at":"2023-11-07T09:55:18Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.3 \u2192 v0.1.4](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.3...v0.1.4)\n- [github.com/python-jsonschema/check-jsonschema: 0.27.0 \u2192 0.27.1](https://github.com/python-jsonschema/check-jsonschema/compare/0.27.0...0.27.1)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-11-06T22:13:44Z",
  "comments":1,
  "created_at":"2023-11-06T19:25:04Z",
  "draft":false,
  "id":1979908243,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5eusIq",
  "number":2802,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-06T22:13:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-11-06T22:13:44Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR closes #1281 by adding support for a subset of NumPy's `printoptions` simple string formatting configuration. These options are compatible with NumPy's formatting options, apart from strings (only `str_kind` is compatible with both libraries): \r\n- NumPy's `\"numpystr\"` is ignored\r\n- Awkward's `\"str\"` and `\"bytes\"` are used for str/bytes\r\n\r\nN.B. we use the `g` conversion type, which is different to NumPy's default mode.\r\n\r\n### Precision:\r\n```pycon\r\n>>> ak.Array([1.0, 2.02313123123123123123123123]).show(precision=4)\r\n[1,\r\n 2.023]\r\n```\r\n\r\n### Formatter:\r\n```pycon\r\n>>> ak.Array([\"foo\", \"bar\"]).show(formatter={'str': \"<STRING {!r}>\".format})\r\n[<STRING 'foo'>,\r\n <STRING 'bar'>]\r\n```\r\n\r\nI don't think we need to fully replicate NumPy's features here, or support their options context. This PR should add enough control for some additional use cases.\r\n",
  "closed_at":"2023-11-07T21:43:48Z",
  "comments":3,
  "created_at":"2023-11-07T16:59:01Z",
  "draft":false,
  "id":1981817250,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5e1NLt",
  "number":2803,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-07T21:43:48Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add string formatter to `ak.Array.show`",
  "updated_at":"2023-11-07T21:43:49Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-11-07T18:01:39Z",
  "comments":1,
  "created_at":"2023-11-07T17:35:18Z",
  "draft":false,
  "id":1981879810,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5e1a2l",
  "number":2804,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-07T18:01:39Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: more type hints",
  "updated_at":"2023-11-07T18:01:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This prepares the way to drop this argument in `recursively_apply`",
  "closed_at":"2023-11-07T19:18:31Z",
  "comments":2,
  "created_at":"2023-11-07T17:35:38Z",
  "draft":false,
  "id":1981880376,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5e1a-r",
  "number":2805,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-07T19:18:31Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: drop use of `behavior` in `recursively_apply`",
  "updated_at":"2023-11-07T19:18:32Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR exposes the new `attrs` mapping argument in the `ak.typetracer` public L2 API.",
  "closed_at":"2023-11-08T22:02:18Z",
  "comments":0,
  "created_at":"2023-11-08T20:35:21Z",
  "draft":false,
  "id":1984356675,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5e968S",
  "number":2806,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-08T22:02:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: expose attrs in typetracer",
  "updated_at":"2023-11-08T22:02:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR follows the deprecation schedule to remove this argument.",
  "closed_at":"2023-11-11T10:37:18Z",
  "comments":2,
  "created_at":"2023-11-08T22:15:02Z",
  "draft":false,
  "id":1984481503,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5e-V5M",
  "number":2807,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-11T10:37:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat!: drop `forget_length` in `typetracer_with_report`",
  "updated_at":"2023-11-11T10:37:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.4.9\r\n\r\n### Description and code to reproduce\r\n\r\nI have some analysis code which eventually produces a mask of shape `n * var * bool`. As a diagnostic, I want to compare the mask to `True`, flatten, and count_nonzero[^1]. With awkward 2.3.1 and numpy 1.24.4, this worked. I updated my dependencies to awkward 2.4.9 and numpy 1.26.1, and I get a type error regarding the dtype. See the reproducer below (and the relevant parquet file, renamed to txt to allow for attachment\r\n[out.parquet.txt](https://github.com/scikit-hep/awkward/files/13301786/out.parquet.txt) )\r\n\r\n[^1]: I know I could just flatten and count_nonzero in this case, but sometimes it was conceptually cleaner to make it explicit - sometimes the check is compared to False. In any case, this comparison should work, and it worked previously.\r\n\r\n```python\r\nPython 3.11.6 (main, Oct  2 2023, 13:45:54) [Clang 15.0.0 (clang-1500.0.40.1)]\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 8.12.2 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import awkward as ak\r\n\r\nIn [2]: arr = ak.from_parquet(\"out.parquet\")\r\n\r\nIn [3]: arr.type.show()\r\n38 * var * bool\r\n\r\nIn [4]: arr.layout\r\nOut[4]:\r\n<ListOffsetArray len='38'>\r\n    <offsets><Index dtype='int64' len='39'>\r\n        [  0   4  11  24  28  35  46  51  55  65  66  74  81  91  95 105 118\r\n         129 140 146 157 181 187 194 201 201 216 223 234 249 258 263 273 282\r\n         287 304 321 328 333]\r\n    </Index></offsets>\r\n    <content><NumpyArray dtype='bool' len='333'>\r\n        [ True  True  True  True  True  True  True  True  True  True  True\r\n          True  True  True  True  True  True  True  True  True  True  True\r\n         ...\r\n          True  True  True  True  True  True  True  True  True  True  True\r\n          True  True  True]\r\n    </NumpyArray></content>\r\n</ListOffsetArray>\r\n\r\nIn [5]: arr == True\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[5], line 1\r\n----> 1 arr == True\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_operators.py:50, in _binary_method.<locals>.func(self, other)\r\n     48 if _disables_array_ufunc(other):\r\n     49     return NotImplemented\r\n---> 50 return ufunc(self, other)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/highlevel.py:1438, in Array.__array_ufunc__(self, ufunc, method, *inputs, **kwargs)\r\n   1436 name = f\"{type(ufunc).__module__}.{ufunc.__name__}.{method!s}\"\r\n   1437 with ak._errors.OperationErrorContext(name, inputs, kwargs):\r\n-> 1438     return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_connect/numpy.py:449, in array_ufunc(ufunc, method, inputs, kwargs)\r\n    441         raise TypeError(\r\n    442             \"no {}.{} overloads for custom types: {}\".format(\r\n    443                 type(ufunc).__module__, ufunc.__name__, \", \".join(error_message)\r\n    444             )\r\n    445         )\r\n    447     return None\r\n--> 449 out = ak._broadcasting.broadcast_and_apply(\r\n    450     inputs, action, allow_records=False, function_name=ufunc.__name__\r\n    451 )\r\n    453 if len(out) == 1:\r\n    454     return wrap_layout(out[0], behavior)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:1026, in broadcast_and_apply(inputs, action, depth_context, lateral_context, allow_records, left_broadcast, right_broadcast, numpy_to_regular, regular_to_jagged, function_name, broadcast_parameters_rule)\r\n   1024 backend = backend_of(*inputs, coerce_to_common=False)\r\n   1025 isscalar = []\r\n-> 1026 out = apply_step(\r\n   1027     backend,\r\n   1028     broadcast_pack(inputs, isscalar),\r\n   1029     action,\r\n   1030     0,\r\n   1031     depth_context,\r\n   1032     lateral_context,\r\n   1033     {\r\n   1034         \"allow_records\": allow_records,\r\n   1035         \"left_broadcast\": left_broadcast,\r\n   1036         \"right_broadcast\": right_broadcast,\r\n   1037         \"numpy_to_regular\": numpy_to_regular,\r\n   1038         \"regular_to_jagged\": regular_to_jagged,\r\n   1039         \"function_name\": function_name,\r\n   1040         \"broadcast_parameters_rule\": broadcast_parameters_rule,\r\n   1041     },\r\n   1042 )\r\n   1043 assert isinstance(out, tuple)\r\n   1044 return tuple(broadcast_unpack(x, isscalar) for x in out)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:1004, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, options)\r\n   1002     return result\r\n   1003 elif result is None:\r\n-> 1004     return continuation()\r\n   1005 else:\r\n   1006     raise AssertionError(result)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:973, in apply_step.<locals>.continuation()\r\n    971 # Any non-string list-types?\r\n    972 elif any(x.is_list and not is_string_like(x) for x in contents):\r\n--> 973     return broadcast_any_list()\r\n    975 # Any RecordArrays?\r\n    976 elif any(x.is_record for x in contents):\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:629, in apply_step.<locals>.broadcast_any_list()\r\n    626         nextinputs.append(x)\r\n    627         nextparameters.append(NO_PARAMETERS)\r\n--> 629 outcontent = apply_step(\r\n    630     backend,\r\n    631     nextinputs,\r\n    632     action,\r\n    633     depth + 1,\r\n    634     copy.copy(depth_context),\r\n    635     lateral_context,\r\n    636     options,\r\n    637 )\r\n    638 assert isinstance(outcontent, tuple)\r\n    639 parameters = parameters_factory(nextparameters, len(outcontent))\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:1004, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, options)\r\n   1002     return result\r\n   1003 elif result is None:\r\n-> 1004     return continuation()\r\n   1005 else:\r\n   1006     raise AssertionError(result)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:973, in apply_step.<locals>.continuation()\r\n    971 # Any non-string list-types?\r\n    972 elif any(x.is_list and not is_string_like(x) for x in contents):\r\n--> 973     return broadcast_any_list()\r\n    975 # Any RecordArrays?\r\n    976 elif any(x.is_record for x in contents):\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:693, in apply_step.<locals>.broadcast_any_list()\r\n    690         nextinputs.append(x)\r\n    691         nextparameters.append(NO_PARAMETERS)\r\n--> 693 outcontent = apply_step(\r\n    694     backend,\r\n    695     nextinputs,\r\n    696     action,\r\n    697     depth + 1,\r\n    698     copy.copy(depth_context),\r\n    699     lateral_context,\r\n    700     options,\r\n    701 )\r\n    702 assert isinstance(outcontent, tuple)\r\n    703 parameters = parameters_factory(nextparameters, len(outcontent))\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_broadcasting.py:986, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, options)\r\n    979     else:\r\n    980         raise ValueError(\r\n    981             \"cannot broadcast: {}{}\".format(\r\n    982                 \", \".join(repr(type(x)) for x in inputs), in_function(options)\r\n    983             )\r\n    984         )\r\n--> 986 result = action(\r\n    987     inputs,\r\n    988     depth=depth,\r\n    989     depth_context=depth_context,\r\n    990     lateral_context=lateral_context,\r\n    991     continuation=continuation,\r\n    992     backend=backend,\r\n    993     options=options,\r\n    994 )\r\n    996 if isinstance(result, tuple) and all(isinstance(x, Content) for x in result):\r\n    997     if any(content.backend is not backend for content in result):\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_connect/numpy.py:415, in array_ufunc.<locals>.action(inputs, **ignore)\r\n    410 parameters = functools.reduce(\r\n    411     parameters_intersect, (c._parameters for c in contents)\r\n    412 )\r\n    414 input_args = [x.data if isinstance(x, NumpyArray) else x for x in inputs]\r\n--> 415 result = backend.nplike.apply_ufunc(ufunc, method, input_args, kwargs)\r\n    417 if isinstance(result, tuple):\r\n    418     return tuple(\r\n    419         NumpyArray(x, backend=backend, parameters=parameters)\r\n    420         for x in result\r\n    421     )\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_nplikes/array_module.py:206, in ArrayModuleNumpyLike.apply_ufunc(self, ufunc, method, args, kwargs)\r\n    203     raise NotImplementedError\r\n    205 if hasattr(ufunc, \"resolve_dtypes\"):\r\n--> 206     return self._apply_ufunc_nep_50(ufunc, method, args, kwargs)\r\n    207 else:\r\n    208     return self._apply_ufunc_legacy(ufunc, method, args, kwargs)\r\n\r\nFile ~/software/dev/mammoth/.venv-3.11/lib/python3.11/site-packages/awkward/_nplikes/array_module.py:222, in ArrayModuleNumpyLike._apply_ufunc_nep_50(self, ufunc, method, args, kwargs)\r\n    220 # Resolve these for the given ufunc\r\n    221 arg_dtypes = tuple(input_arg_dtypes + [None] * ufunc.nout)\r\n--> 222 resolved_dtypes = ufunc.resolve_dtypes(arg_dtypes)\r\n    223 # Interpret the arguments under these dtypes, converting scalars to length-1 arrays\r\n    224 resolved_args = [\r\n    225     cast(\"ArrayLikeT\", self.asarray(arg, dtype=dtype))\r\n    226     for arg, dtype in zip(args, resolved_dtypes)\r\n    227 ]\r\n\r\nTypeError: Provided dtype must be a valid NumPy dtype, int, float, complex, or None.\r\n\r\nIn [7]: ak.__version__\r\nOut[7]: '2.4.9'\r\n\r\nIn [8]: import numpy as np\r\n\r\nIn [9]: np.__version__\r\nOut[9]: '1.26.1'\r\n\r\nIn [10]:\r\n```\r\n\r\nI'm a little rusty with this codebase at the moment , but I'm fairly confident this is a regression within awkward. Thanks in advance!\r\n\r\nedit: Just for completeness, I'm using the obvious workaround of `np.count_nonzero(np.asarray(ak.flatten(arr == True, axis=None)))` -> `np.count_nonzero(np.asarray(ak.flatten(arr, axis=None)) == True)`",
  "closed_at":"2023-11-09T13:38:38Z",
  "comments":4,
  "created_at":"2023-11-08T22:19:10Z",
  "id":1984486679,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws52SN0X",
  "number":2808,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Regression: wrong dtype error when comparing mask to `True`",
  "updated_at":"2023-11-09T23:29:17Z",
  "user":"MDQ6VXNlcjE1NzE5Mjc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"NumPy's `ufunc.resolve_dtypes` function does not accept bare Python `bool` types, despite upholding that pattern for the `int`, `float`, and `complex` types. This PR converts `bool` to `np.dtype(\"bool\")`.",
  "closed_at":"2023-11-09T11:50:52Z",
  "comments":1,
  "created_at":"2023-11-08T22:32:56Z",
  "draft":false,
  "id":1984507656,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5e-byt",
  "number":2809,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-09T11:50:52Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support bool types in `resolve_dtypes`",
  "updated_at":"2023-11-09T11:50:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Backport #2809 to 2.4.x",
  "closed_at":"2023-11-09T11:57:51Z",
  "comments":0,
  "created_at":"2023-11-09T11:57:12Z",
  "draft":false,
  "id":1985469569,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fBr4P",
  "number":2810,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-09T11:57:51Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: backport #2809",
  "updated_at":"2023-11-09T11:57:52Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pyarrow](https://github.com/apache/arrow) from 7.0.0 to 14.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/apache/arrow/commit/ba537483618196f50c67a90a473039e4d5dc35e0\"><code>ba53748</code></a> MINOR: [Release] Update versions for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/529f3768fa4fce80781cd1a3cbdcf3a826281b14\"><code>529f376</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/b84bbcac64e184a2b58661385506cff23006cc10\"><code>b84bbca</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/f14170976372436ec1d03a724d8d3f3925484ecf\"><code>f141709</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38607\">GH-38607</a>: [Python] Disable PyExtensionType autoload (<a href=\"https://redirect.github.com/apache/arrow/issues/38608\">#38608</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/5a37e741987e4cba41dfdad2331a308c95b62083\"><code>5a37e74</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38431\">GH-38431</a>: [Python][CI] Update fs.type_name checks for s3fs tests (<a href=\"https://redirect.github.com/apache/arrow/issues/38455\">#38455</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/2dcee3f82c6cf54b53a64729fd81840efa583244\"><code>2dcee3f</code></a> MINOR: [Release] Update versions for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/297428cbf2fc84a224654eb0b336614e6543d1aa\"><code>297428c</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/3e9734f8830797fe09b883f00d349116d95c51f9\"><code>3e9734f</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.0</li>\n<li><a href=\"https://github.com/apache/arrow/commit/9f90995c8cee0d9906349f421f2445ab9adcb7ac\"><code>9f90995</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38332\">GH-38332</a>: [CI][Release] Resolve symlinks in RAT lint (<a href=\"https://redirect.github.com/apache/arrow/issues/38337\">#38337</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/bd61239a32c94e37b9510071c0ffacad455798c0\"><code>bd61239</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/35531\">GH-35531</a>: [Python] C Data Interface PyCapsule Protocol (<a href=\"https://redirect.github.com/apache/arrow/issues/37797\">#37797</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/apache/arrow/compare/go/v7.0.0...apache-arrow-14.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyarrow&package-manager=pip&previous-version=7.0.0&new-version=14.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/scikit-hep/awkward/network/alerts).\n\n</details>",
  "closed_at":"2023-11-10T10:56:37Z",
  "comments":3,
  "created_at":"2023-11-09T23:02:04Z",
  "draft":false,
  "id":1986550150,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fFZA1",
  "number":2812,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pyarrow from 7.0.0 to 14.0.1",
  "updated_at":"2023-11-10T10:56:48Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Right now, we install three libraries: `_ext`, `libawkward`, `libawkward-cpu-kernels`, and build some additional static variants.\r\n\r\nWe didn't change this when splitting out awkward-cpp, because I didn't want to rock the boat any more. Since becoming more well versed with CMake's nuances, I'm confident that we can remove the leftover baggage. \r\n\r\nThis PR keeps the separate `libawkward` and `_ext` libraries (because it doesn't appear trivial to merge them), but drops the static libraries.\r\n",
  "closed_at":"2023-11-13T18:06:57Z",
  "comments":3,
  "created_at":"2023-11-10T11:52:52Z",
  "draft":false,
  "id":1987480309,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fIiG7",
  "number":2813,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-13T18:06:57Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: only build _ext and kernels",
  "updated_at":"2023-11-13T18:06:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I noticed that we expect `ak.firsts` to return scalar values, which was broken in a recent refactoring PR.",
  "closed_at":"2023-11-13T16:12:22Z",
  "comments":2,
  "created_at":"2023-11-11T11:38:34Z",
  "draft":false,
  "id":1988907699,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fNbba",
  "number":2815,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-13T16:12:22Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support scalar returns from `firsts`",
  "updated_at":"2023-11-13T16:12:23Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Now that `dask-awkward` is stabilising, it's clear that we need to export some more of our internals. In this PR, I add a constructor for unknown scalars, but not for arrays. This is a very restrictive approach, but I think we want to keep things as locked down as possible until we have a clearer sense of what's needed besides unknown scalars.",
  "closed_at":"2023-11-14T11:19:58Z",
  "comments":1,
  "created_at":"2023-11-13T15:30:14Z",
  "draft":false,
  "id":1990899383,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fUBXU",
  "number":2816,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-14T11:19:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: export more of typetracer",
  "updated_at":"2023-11-14T11:19:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.4 \u2192 v0.1.5](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.4...v0.1.5)\n- [github.com/pre-commit/mirrors-mypy: v1.6.1 \u2192 v1.7.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.6.1...v1.7.0)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-11-14T11:19:05Z",
  "comments":1,
  "created_at":"2023-11-13T19:45:52Z",
  "draft":false,
  "id":1991358831,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fVmOi",
  "number":2817,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-14T11:19:05Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-11-14T11:19:06Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Julia helper functions to check the environment, versions, and initialize it.\r\n\r\nThe `AwkwardArray.jl` backend is loaded as follows. Note, if you don't have a Python shared library, you need to pass `compiled_modules=False` to Julia:\r\n```python\r\nIn [2]: M = init_julia(julia_kwargs={\"compiled_modules\": False})\r\n\r\nIn [3]: A = _load_backend(M)\r\n\r\nIn [4]: A\r\nOut[4]: <module 'julia.AwkwardArray' (<julia.core.JuliaModuleLoader object at 0x111a2f730>)>\r\n\r\n```\r\n\r\nM is a Julia's `Main`. A is a `'julia.AwkwardArray'` module:\r\n\r\n```python\r\nIn [8]: A.PrimitiveArray([1, 2, 3, 4, 5])\r\nOut[8]: [1, 2, 3, 4, 5]\r\n\r\nIn [9]: jl_array = A.PrimitiveArray([1, 2, 3, 4, 5])\r\n\r\nIn [10]: jl_array\r\nOut[10]: [1, 2, 3, 4, 5]\r\n\r\nIn [11]: type(jl_array)\r\nOut[11]: list\r\n```\r\n\r\nTODO:\r\n- [ ] Update CI to install PyJulia (probably extend the new cppyy job)",
  "closed_at":"2023-12-13T13:41:19Z",
  "comments":4,
  "created_at":"2023-11-14T10:38:27Z",
  "draft":true,
  "id":1992465181,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fZWAn",
  "number":2818,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: julia helper functions",
  "updated_at":"2024-02-01T21:53:43Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I'm creating a Docker container to run our GPU tests using systemd, with the intention that errors can be reported as GitHub issues.\r\n\r\nIn doing so, I noticed that we weren't including the CUDA kernel signatures in our built packages, so non-development installs weren't getting these. Another problem associated with not testing our installs :(\r\n\r\nThis PR *also* fixes an API breakage in the `traceback` module that is not super-clear from the docs \u2014 the base image I'm using from NVidia uses Python 3.8 which surfaced our misusage in the CUDA tests.",
  "closed_at":"2023-11-15T15:46:18Z",
  "comments":2,
  "created_at":"2023-11-15T10:28:50Z",
  "draft":false,
  "id":1994488880,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5fgPA4",
  "number":2819,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-15T15:46:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: include `_kernel_signatures.py` in package",
  "updated_at":"2023-11-15T15:46:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7b10890970>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 54.43s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:38Z",
  "comments":0,
  "created_at":"2023-11-15T13:29:54Z",
  "id":1994782865,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525fiR",
  "number":2820,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:38Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fb7553aa7f0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 54.62s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:47Z",
  "comments":0,
  "created_at":"2023-11-15T13:31:55Z",
  "id":1994786307,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525gYD",
  "number":2821,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:48Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\nwer case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n        __file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n        __loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f657afcf490>\n        __name__   = 'cupy_backends.cuda.api.runtime'\n        __package__ = 'cupy_backends.cuda.api'\n        __pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfe10>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f657afdd990>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f657afcfb70>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfba0>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddb40>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd9c0>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f657afddb70>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f657afdd9f0>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f657afcfb10>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f657afcfb40>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f657afcfdb0>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfde0>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f657afcfc60>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f657afcfc90>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f657afdd4b0>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f657afcfe40>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f657afdd4e0>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfcc0>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f657afcfe70>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd510>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f657afcfd50>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfbd0>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f657afcfab0>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f657afcfae0>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f657afcfa50>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f657afcfa20>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f657afcfa80>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f657afdd840>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afdd870>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd8a0>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd8d0>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd900>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd930>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd960>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd090>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd0f0>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd120>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd0c0>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f657afdda20>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfc30>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfcf0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfd80>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f657afdda50>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f657afdda80>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddba0>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddbd0>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddc00>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddc30>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddc60>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afcffc0>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afdd030>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd060>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd720>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f657afddab0>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f657afddb10>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f657afddae0>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f657afcfea0>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f657afcff00>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f657afcff30>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afcff60>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afcff90>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f657afcfed0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f657afdd450>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f657afdd150>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f657afdd540>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd570>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd5d0>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f657afdd600>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f657afdd5a0>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd420>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd180>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f657afdd240>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd270>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd2a0>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd2d0>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd300>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd330>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd360>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd390>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd1b0>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f657afdd1e0>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd210>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f657afdd3c0>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd3f0>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd480>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfc00>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfd20>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f657afdd6f0>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f657afdd7b0>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f657afdd630>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afdd660>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd690>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd7e0>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd810>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd750>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd6c0>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f657afdd780>}\n        __pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n        __pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n        __pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n        __spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f657afcf490>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n        __test__   = {}\n        _deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n        _export_enum = <built-in function _export_enum>\n        _threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\n        check_status = <built-in function check_status>\n        createSurfaceObject = <built-in function createSurfaceObject>\n        createTextureObject = <built-in function createTextureObject>\n        cudaAddressModeBorder = 3\n        cudaAddressModeClamp = 1\n        cudaAddressModeMirror = 2\n        cudaAddressModeWrap = 0\n        cudaArrayDefault = 0\n        cudaArraySurfaceLoadStore = 2\n        cudaChannelFormatKindFloat = 2\n        cudaChannelFormatKindNone = 3\n        cudaChannelFormatKindSigned = 0\n        cudaChannelFormatKindUnsigned = 1\n        cudaDevAttrAsyncEngineCount = 40\n        cudaDevAttrCanFlushRemoteWrites = 98\n        cudaDevAttrCanMapHostMemory = 19\n        cudaDevAttrCanUseHostPointerForRegisteredMem = 91\n        cudaDevAttrClockRate = 13\n        cudaDevAttrComputeMode = 20\n        cudaDevAttrComputePreemptionSupported = 90\n        cudaDevAttrConcurrentKernels = 31\n        cudaDevAttrConcurrentManagedAccess = 89\n        cudaDevAttrCooperativeLaunch = 95\n        cudaDevAttrCooperativeMultiDeviceLaunch = 96\n        cudaDevAttrDirectManagedMemAccessFromHost = 101\n        cudaDevAttrEccEnabled = 32\n        cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\n        cudaDevAttrGPUDirectRDMASupported = 116\n        cudaDevAttrGPUDirectRDMAWritesOrdering = 118\n        cudaDevAttrGlobalL1CacheSupported = 79\n        cudaDevAttrGlobalMemoryBusWidth = 37\n        cudaDevAttrGpuOverlap = 15\n        cudaDevAttrHostNativeAtomicSupported = 86\n        cudaDevAttrHostRegisterReadOnlySupported = 113\n        cudaDevAttrHostRegisterSupported = 99\n        cudaDevAttrIntegrated = 18\n        cudaDevAttrIsMultiGpuBoard = 84\n        cudaDevAttrKernelExecTimeout = 17\n        cudaDevAttrL2CacheSize = 38\n        cudaDevAttrLocalL1CacheSupported = 80\n        cudaDevAttrManagedMemory = 83\n        cudaDevAttrMaxBlockDimX = 2\n        cudaDevAttrMaxBlockDimY = 3\n        cudaDevAttrMaxBlockDimZ = 4\n        cudaDevAttrMaxBlocksPerMultiprocessor = 106\n        cudaDevAttrMaxGridDimX = 5\n        cudaDevAttrMaxGridDimY = 6\n        cudaDevAttrMaxGridDimZ = 7\n        cudaDevAttrMaxPitch = 11\n        cudaDevAttrMaxRegistersPerBlock = 12\n        cudaDevAttrMaxRegistersPerMultiprocessor = 82\n        cudaDevAttrMaxSharedMemoryPerBlock = 8\n        cudaDevAttrMaxSharedMemoryPerBlockOptin = 97\n        cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\n        cudaDevAttrMaxSurface1DLayeredLayers = 62\n        cudaDevAttrMaxSurface1DLayeredWidth = 61\n        cudaDevAttrMaxSurface1DWidth = 55\n        cudaDevAttrMaxSurface2DHeight = 57\n        cudaDevAttrMaxSurface2DLayeredHeight = 64\n        cudaDevAttrMaxSurface2DLayeredLayers = 65\n        cudaDevAttrMaxSurface2DLayeredWidth = 63\n        cudaDevAttrMaxSurface2DWidth = 56\n        cudaDevAttrMaxSurface3DDepth = 60\n        cudaDevAttrMaxSurface3DHeight = 59\n        cudaDevAttrMaxSurface3DWidth = 58\n        cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\n        cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\n        cudaDevAttrMaxSurfaceCubemapWidth = 66\n        cudaDevAttrMaxTexture1DLayeredLayers = 43\n        cudaDevAttrMaxTexture1DLayeredWidth = 42\n        cudaDevAttrMaxTexture1DLinearWidth = 69\n        cudaDevAttrMaxTexture1DMipmappedWidth = 77\n        cudaDevAttrMaxTexture1DWidth = 21\n        cudaDevAttrMaxTexture2DGatherHeight = 46\n        cudaDevAttrMaxTexture2DGatherWidth = 45\n        cudaDevAttrMaxTexture2DHeight = 23\n        cudaDevAttrMaxTexture2DLayeredHeight = 28\n        cudaDevAttrMaxTexture2DLayeredLayers = 29\n        cudaDevAttrMaxTexture2DLayeredWidth = 27\n        cudaDevAttrMaxTexture2DLinearHeight = 71\n        cudaDevAttrMaxTexture2DLinearPitch = 72\n        cudaDevAttrMaxTexture2DLinearWidth = 70\n        cudaDevAttrMaxTexture2DMipmappedHeight = 74\n        cudaDevAttrMaxTexture2DMipmappedWidth = 73\n        cudaDevAttrMaxTexture2DWidth = 22\n        cudaDevAttrMaxTexture3DDepth = 26\n        cudaDevAttrMaxTexture3DDepthAlt = 49\n        cudaDevAttrMaxTexture3DHeight = 25\n        cudaDevAttrMaxTexture3DHeightAlt = 48\n        cudaDevAttrMaxTexture3DWidth = 24\n        cudaDevAttrMaxTexture3DWidthAlt = 47\n        cudaDevAttrMaxTextureCubemapLayeredLayers = 54\n        cudaDevAttrMaxTextureCubemapLayeredWidth = 53\n        cudaDevAttrMaxTextureCubemapWidth = 52\n        cudaDevAttrMaxThreadsPerBlock = 1\n        cudaDevAttrMaxThreadsPerMultiProcessor = 39\n        cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\n        cudaDevAttrMemoryClockRate = 36\n        cudaDevAttrMemoryPoolSupportedHandleTypes = 119\n        cudaDevAttrMemoryPoolsSupported = 115\n        cudaDevAttrMultiGpuBoardGroupID = 85\n        cudaDevAttrMultiProcessorCount = 16\n        cudaDevAttrPageableMemoryAccess = 88\n        cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\n        cudaDevAttrPciBusId = 33\n        cudaDevAttrPciDeviceId = 34\n        cudaDevAttrPciDomainId = 50\n        cudaDevAttrReserved92 = 92\n        cudaDevAttrReserved93 = 93\n        cudaDevAttrReserved94 = 94\n        cudaDevAttrReservedSharedMemoryPerBlock = 111\n        cudaDevAttrSingleToDoublePrecisionPerfRatio = 87\n        cudaDevAttrSparseCudaArraySupported = 112\n        cudaDevAttrStreamPrioritiesSupported = 78\n        cudaDevAttrSurfaceAlignment = 30\n        cudaDevAttrTccDriver = 35\n        cudaDevAttrTextureAlignment = 14\n        cudaDevAttrTexturePitchAlignment = 51\n        cudaDevAttrTotalConstantMemory = 9\n        cudaDevAttrUnifiedAddressing = 41\n        cudaDevAttrWarpSize = 10\n        cudaFilterModeLinear = 1\n        cudaFilterModePoint = 0\n        cudaIpcMemLazyEnablePeerAccess = 1\n        cudaLimitDevRuntimePendingLaunchCount = 4\n        cudaLimitDevRuntimeSyncDepth = 3\n        cudaLimitMallocHeapSize = 2\n        cudaLimitMaxL2FetchGranularity = 5\n        cudaLimitPrintfFifoSize = 1\n        cudaLimitStackSize = 0\n        cudaMemAdviseSetAccessedBy = 5\n        cudaMemAdviseSetPreferredLocation = 3\n        cudaMemAdviseSetReadMostly = 1\n        cudaMemAdviseUnsetAccessedBy = 6\n        cudaMemAdviseUnsetPreferredLocation = 4\n        cudaMemAdviseUnsetReadMostly = 2\n        cudaMemAllocationTypePinned = 1\n        cudaMemAttachGlobal = 1\n        cudaMemAttachHost = 2\n        cudaMemAttachSingle = 4\n        cudaMemHandleTypeNone = 0\n        cudaMemHandleTypePosixFileDescriptor = 1\n        cudaMemLocationTypeDevice = 1\n        cudaMemPoolAttrReleaseThreshold = 4\n        cudaMemPoolAttrReservedMemCurrent = 5\n        cudaMemPoolAttrReservedMemHigh = 6\n        cudaMemPoolAttrUsedMemCurrent = 7\n        cudaMemPoolAttrUsedMemHigh = 8\n        cudaMemPoolReuseAllowInternalDependencies = 3\n        cudaMemPoolReuseAllowOpportunistic = 2\n        cudaMemPoolReuseFollowEventDependencies = 1\n        cudaMemoryTypeDevice = 2\n        cudaMemoryTypeHost = 1\n        cudaReadModeElementType = 0\n        cudaReadModeNormalizedFloat = 1\n        cudaResourceTypeArray = 0\n        cudaResourceTypeLinear = 2\n        cudaResourceTypeMipmappedArray = 1\n        cudaResourceTypePitch2D = 3\n        destroySurfaceObject = <built-in function destroySurfaceObject>\n        destroyTextureObject = <built-in function destroyTextureObject>\n        deviceCanAccessPeer = <built-in function deviceCanAccessPeer>\n        deviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\n        deviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\n        deviceGetAttribute = <built-in function deviceGetAttribute>\n        deviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\n        deviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\n        deviceGetLimit = <built-in function deviceGetLimit>\n        deviceGetMemPool = <built-in function deviceGetMemPool>\n        deviceGetPCIBusId = <built-in function deviceGetPCIBusId>\n        deviceSetLimit = <built-in function deviceSetLimit>\n        deviceSetMemPool = <built-in function deviceSetMemPool>\n        deviceSynchronize = <built-in function deviceSynchronize>\n        driverGetVersion = <built-in function driverGetVersion>\n        eventBlockingSync = 1\n        eventCreate = <built-in function eventCreate>\n        eventCreateWithFlags = <built-in function eventCreateWithFlags>\n        eventDefault = 0\n        eventDestroy = <built-in function eventDestroy>\n        eventDisableTiming = 2\n        eventElapsedTime = <built-in function eventElapsedTime>\n        eventInterprocess = 4\n        eventQuery = <built-in function eventQuery>\n        eventRecord = <built-in function eventRecord>\n        eventSynchronize = <built-in function eventSynchronize>\n        free       = <built-in function free>\n        freeArray  = <built-in function freeArray>\n        freeAsync  = <built-in function freeAsync>\n        freeHost   = <built-in function freeHost>\n        getDevice  = <built-in function getDevice>\n        getDeviceCount = <built-in function getDeviceCount>\n        getDeviceProperties = <built-in function getDeviceProperties>\n        graphDestroy = <built-in function graphDestroy>\n        graphExecDestroy = <built-in function graphExecDestroy>\n        graphInstantiate = <built-in function graphInstantiate>\n        graphLaunch = <built-in function graphLaunch>\n        graphUpload = <built-in function graphUpload>\n        hostAlloc  = <built-in function hostAlloc>\n        hostAllocDefault = 0\n        hostAllocMapped = 2\n        hostAllocPortable = 1\n        hostAllocWriteCombined = 4\n        hostRegister = <built-in function hostRegister>\n        hostUnregister = <built-in function hostUnregister>\n        ipcCloseMemHandle = <built-in function ipcCloseMemHandle>\n        ipcGetEventHandle = <built-in function ipcGetEventHandle>\n        ipcGetMemHandle = <built-in function ipcGetMemHandle>\n        ipcOpenEventHandle = <built-in function ipcOpenEventHandle>\n        ipcOpenMemHandle = <built-in function ipcOpenMemHandle>\n        is_hip     = False\n        launchHostFunc = <built-in function launchHostFunc>\n        malloc     = <built-in function malloc>\n        malloc3DArray = <built-in function malloc3DArray>\n        mallocArray = <built-in function mallocArray>\n        mallocAsync = <built-in function mallocAsync>\n        mallocFromPoolAsync = <built-in function mallocFromPoolAsync>\n        mallocManaged = <built-in function mallocManaged>\n        memAdvise  = <built-in function memAdvise>\n        memGetInfo = <built-in function memGetInfo>\n        memPoolCreate = <built-in function memPoolCreate>\n        memPoolDestroy = <built-in function memPoolDestroy>\n        memPoolGetAttribute = <built-in function memPoolGetAttribute>\n        memPoolSetAttribute = <built-in function memPoolSetAttribute>\n        memPoolTrimTo = <built-in function memPoolTrimTo>\n        memPrefetchAsync = <built-in function memPrefetchAsync>\n        memcpy     = <built-in function memcpy>\n        memcpy2D   = <built-in function memcpy2D>\n        memcpy2DAsync = <built-in function memcpy2DAsync>\n        memcpy2DFromArray = <built-in function memcpy2DFromArray>\n        memcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\n        memcpy2DToArray = <built-in function memcpy2DToArray>\n        memcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\n        memcpy3D   = <built-in function memcpy3D>\n        memcpy3DAsync = <built-in function memcpy3DAsync>\n        memcpyAsync = <built-in function memcpyAsync>\n        memcpyDefault = 4\n        memcpyDeviceToDevice = 3\n        memcpyDeviceToHost = 2\n        memcpyHostToDevice = 1\n        memcpyHostToHost = 0\n        memcpyPeer = <built-in function memcpyPeer>\n        memcpyPeerAsync = <built-in function memcpyPeerAsync>\n        memoryTypeDevice = 2\n        memoryTypeHost = 1\n        memoryTypeManaged = 3\n        memoryTypeUnregistered = 0\n        memset     = <built-in function memset>\n        memsetAsync = <built-in function memsetAsync>\n        pointerGetAttributes = <built-in function pointerGetAttributes>\n        runtimeGetVersion = <built-in function runtimeGetVersion>\n        setDevice  = <built-in function setDevice>\n        streamAddCallback = <built-in function streamAddCallback>\n        streamBeginCapture = <built-in function streamBeginCapture>\n        streamCaptureModeGlobal = 0\n        streamCaptureModeRelaxed = 2\n        streamCaptureModeThreadLocal = 1\n        streamCaptureStatusActive = 1\n        streamCaptureStatusInvalidated = 2\n        streamCaptureStatusNone = 0\n        streamCreate = <built-in function streamCreate>\n        streamCreateWithFlags = <built-in function streamCreateWithFlags>\n        streamDefault = 0\n        streamDestroy = <built-in function streamDestroy>\n        streamEndCapture = <built-in function streamEndCapture>\n        streamIsCapturing = <built-in function streamIsCapturing>\n        streamLegacy = 1\n        streamNonBlocking = 1\n        streamPerThread = 2\n        streamQuery = <built-in function streamQuery>\n        streamSynchronize = <built-in function streamSynchronize>\n        streamWaitEvent = <built-in function streamWaitEvent>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   cupy_backends.cuda.api.runtime.CUDARuntimeError: cudaErrorNoDevice: no CUDA-capable device is detected\n\nCUDARuntimeError = <class 'cupy_backends.cuda.api.runtime.CUDARuntimeError'>\nCUDA_C_16F = 6\nCUDA_C_32F = 4\nCUDA_C_64F = 5\nCUDA_C_8I  = 7\nCUDA_C_8U  = 9\nCUDA_R_16F = 2\nCUDA_R_32F = 0\nCUDA_R_64F = 1\nCUDA_R_8I  = 3\nCUDA_R_8U  = 8\nMemPoolProps = <class 'cupy_backends.cuda.api.runtime.MemPoolProps'>\nPointerAttributes = <class 'cupy_backends.cuda.api.runtime.PointerAttributes'>\n_ThreadLocal = <class 'cupy_backends.cuda.api.runtime._ThreadLocal'>\n__builtins__ = <builtins>\n__doc__    = ('Thin wrapper of CUDA Runtime API.\\n'\n '\\n'\n 'There are four differences compared to the original C API.\\n'\n '\\n'\n '1. Not all functions are ported.\\n'\n '2. Errors are translated into CUDARuntimeError exceptions.\\n'\n \"3. The 'cuda' prefix of each API is omitted and the next character is set \"\n 'to\\n'\n '   lower case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n__file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n__loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f657afcf490>\n__name__   = 'cupy_backends.cuda.api.runtime'\n__package__ = 'cupy_backends.cuda.api'\n__pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfe10>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f657afdd990>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f657afcfb70>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfba0>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddb40>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd9c0>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f657afddb70>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f657afdd9f0>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f657afcfb10>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f657afcfb40>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f657afcfdb0>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfde0>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f657afcfc60>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f657afcfc90>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f657afdd4b0>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f657afcfe40>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f657afdd4e0>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfcc0>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f657afcfe70>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd510>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f657afcfd50>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfbd0>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f657afcfab0>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f657afcfae0>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f657afcfa50>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f657afcfa20>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f657afcfa80>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f657afdd840>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afdd870>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd8a0>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd8d0>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd900>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd930>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd960>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd090>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd0f0>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd120>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd0c0>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f657afdda20>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfc30>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfcf0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfd80>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f657afdda50>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f657afdda80>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddba0>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddbd0>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddc00>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddc30>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afddc60>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afcffc0>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afdd030>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd060>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd720>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f657afddab0>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f657afddb10>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f657afddae0>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f657afcfea0>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f657afcff00>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f657afcff30>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afcff60>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afcff90>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f657afcfed0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f657afdd450>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f657afdd150>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f657afdd540>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd570>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd5d0>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f657afdd600>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f657afdd5a0>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd420>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd180>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f657afdd240>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd270>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd2a0>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd2d0>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f657afdd300>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd330>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd360>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd390>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd1b0>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f657afdd1e0>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd210>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f657afdd3c0>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd3f0>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd480>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f657afcfc00>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f657afcfd20>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f657afdd6f0>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f657afdd7b0>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f657afdd630>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f657afdd660>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd690>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd7e0>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd810>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd750>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f657afdd6c0>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f657afdd780>}\n__pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n__pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n__pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n__spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f657afcf490>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n__test__   = {}\n_deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n_export_enum = <built-in function _export_enum>\n_threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\ncheck_status = <built-in function check_status>\ncreateSurfaceObject = <built-in function createSurfaceObject>\ncreateTextureObject = <built-in function createTextureObject>\ncudaAddressModeBorder = 3\ncudaAddressModeClamp = 1\ncudaAddressModeMirror = 2\ncudaAddressModeWrap = 0\ncudaArrayDefault = 0\ncudaArraySurfaceLoadStore = 2\ncudaChannelFormatKindFloat = 2\ncudaChannelFormatKindNone = 3\ncudaChannelFormatKindSigned = 0\ncudaChannelFormatKindUnsigned = 1\ncudaDevAttrAsyncEngineCount = 40\ncudaDevAttrCanFlushRemoteWrites = 98\ncudaDevAttrCanMapHostMemory = 19\ncudaDevAttrCanUseHostPointerForRegisteredMem = 91\ncudaDevAttrClockRate = 13\ncudaDevAttrComputeMode = 20\ncudaDevAttrComputePreemptionSupported = 90\ncudaDevAttrConcurrentKernels = 31\ncudaDevAttrConcurrentManagedAccess = 89\ncudaDevAttrCooperativeLaunch = 95\ncudaDevAttrCooperativeMultiDeviceLaunch = 96\ncudaDevAttrDirectManagedMemAccessFromHost = 101\ncudaDevAttrEccEnabled = 32\ncudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\ncudaDevAttrGPUDirectRDMASupported = 116\ncudaDevAttrGPUDirectRDMAWritesOrdering = 118\ncudaDevAttrGlobalL1CacheSupported = 79\ncudaDevAttrGlobalMemoryBusWidth = 37\ncudaDevAttrGpuOverlap = 15\ncudaDevAttrHostNativeAtomicSupported = 86\ncudaDevAttrHostRegisterReadOnlySupported = 113\ncudaDevAttrHostRegisterSupported = 99\ncudaDevAttrIntegrated = 18\ncudaDevAttrIsMultiGpuBoard = 84\ncudaDevAttrKernelExecTimeout = 17\ncudaDevAttrL2CacheSize = 38\ncudaDevAttrLocalL1CacheSupported = 80\ncudaDevAttrManagedMemory = 83\ncudaDevAttrMaxBlockDimX = 2\ncudaDevAttrMaxBlockDimY = 3\ncudaDevAttrMaxBlockDimZ = 4\ncudaDevAttrMaxBlocksPerMultiprocessor = 106\ncudaDevAttrMaxGridDimX = 5\ncudaDevAttrMaxGridDimY = 6\ncudaDevAttrMaxGridDimZ = 7\ncudaDevAttrMaxPitch = 11\ncudaDevAttrMaxRegistersPerBlock = 12\ncudaDevAttrMaxRegistersPerMultiprocessor = 82\ncudaDevAttrMaxSharedMemoryPerBlock = 8\ncudaDevAttrMaxSharedMemoryPerBlockOptin = 97\ncudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\ncudaDevAttrMaxSurface1DLayeredLayers = 62\ncudaDevAttrMaxSurface1DLayeredWidth = 61\ncudaDevAttrMaxSurface1DWidth = 55\ncudaDevAttrMaxSurface2DHeight = 57\ncudaDevAttrMaxSurface2DLayeredHeight = 64\ncudaDevAttrMaxSurface2DLayeredLayers = 65\ncudaDevAttrMaxSurface2DLayeredWidth = 63\ncudaDevAttrMaxSurface2DWidth = 56\ncudaDevAttrMaxSurface3DDepth = 60\ncudaDevAttrMaxSurface3DHeight = 59\ncudaDevAttrMaxSurface3DWidth = 58\ncudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\ncudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\ncudaDevAttrMaxSurfaceCubemapWidth = 66\ncudaDevAttrMaxTexture1DLayeredLayers = 43\ncudaDevAttrMaxTexture1DLayeredWidth = 42\ncudaDevAttrMaxTexture1DLinearWidth = 69\ncudaDevAttrMaxTexture1DMipmappedWidth = 77\ncudaDevAttrMaxTexture1DWidth = 21\ncudaDevAttrMaxTexture2DGatherHeight = 46\ncudaDevAttrMaxTexture2DGatherWidth = 45\ncudaDevAttrMaxTexture2DHeight = 23\ncudaDevAttrMaxTexture2DLayeredHeight = 28\ncudaDevAttrMaxTexture2DLayeredLayers = 29\ncudaDevAttrMaxTexture2DLayeredWidth = 27\ncudaDevAttrMaxTexture2DLinearHeight = 71\ncudaDevAttrMaxTexture2DLinearPitch = 72\ncudaDevAttrMaxTexture2DLinearWidth = 70\ncudaDevAttrMaxTexture2DMipmappedHeight = 74\ncudaDevAttrMaxTexture2DMipmappedWidth = 73\ncudaDevAttrMaxTexture2DWidth = 22\ncudaDevAttrMaxTexture3DDepth = 26\ncudaDevAttrMaxTexture3DDepthAlt = 49\ncudaDevAttrMaxTexture3DHeight = 25\ncudaDevAttrMaxTexture3DHeightAlt = 48\ncudaDevAttrMaxTexture3DWidth = 24\ncudaDevAttrMaxTexture3DWidthAlt = 47\ncudaDevAttrMaxTextureCubemapLayeredLayers = 54\ncudaDevAttrMaxTextureCubemapLayeredWidth = 53\ncudaDevAttrMaxTextureCubemapWidth = 52\ncudaDevAttrMaxThreadsPerBlock = 1\ncudaDevAttrMaxThreadsPerMultiProcessor = 39\ncudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\ncudaDevAttrMemoryClockRate = 36\ncudaDevAttrMemoryPoolSupportedHandleTypes = 119\ncudaDevAttrMemoryPoolsSupported = 115\ncudaDevAttrMultiGpuBoardGroupID = 85\ncudaDevAttrMultiProcessorCount = 16\ncudaDevAttrPageableMemoryAccess = 88\ncudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\ncudaDevAttrPciBusId = 33\ncudaDevAttrPciDeviceId = 34\ncudaDevAttrPciDomainId = 50\ncudaDevAttrReserved92 = 92\ncudaDevAttrReserved93 = 93\ncudaDevAttrReserved94 = 94\ncudaDevAttrReservedSharedMemoryPerBlock = 111\ncudaDevAttrSingleToDoublePrecisionPerfRatio = 87\ncudaDevAttrSparseCudaArraySupported = 112\ncudaDevAttrStreamPrioritiesSupported = 78\ncudaDevAttrSurfaceAlignment = 30\ncudaDevAttrTccDriver = 35\ncudaDevAttrTextureAlignment = 14\ncudaDevAttrTexturePitchAlignment = 51\ncudaDevAttrTotalConstantMemory = 9\ncudaDevAttrUnifiedAddressing = 41\ncudaDevAttrWarpSize = 10\ncudaFilterModeLinear = 1\ncudaFilterModePoint = 0\ncudaIpcMemLazyEnablePeerAccess = 1\ncudaLimitDevRuntimePendingLaunchCount = 4\ncudaLimitDevRuntimeSyncDepth = 3\ncudaLimitMallocHeapSize = 2\ncudaLimitMaxL2FetchGranularity = 5\ncudaLimitPrintfFifoSize = 1\ncudaLimitStackSize = 0\ncudaMemAdviseSetAccessedBy = 5\ncudaMemAdviseSetPreferredLocation = 3\ncudaMemAdviseSetReadMostly = 1\ncudaMemAdviseUnsetAccessedBy = 6\ncudaMemAdviseUnsetPreferredLocation = 4\ncudaMemAdviseUnsetReadMostly = 2\ncudaMemAllocationTypePinned = 1\ncudaMemAttachGlobal = 1\ncudaMemAttachHost = 2\ncudaMemAttachSingle = 4\ncudaMemHandleTypeNone = 0\ncudaMemHandleTypePosixFileDescriptor = 1\ncudaMemLocationTypeDevice = 1\ncudaMemPoolAttrReleaseThreshold = 4\ncudaMemPoolAttrReservedMemCurrent = 5\ncudaMemPoolAttrReservedMemHigh = 6\ncudaMemPoolAttrUsedMemCurrent = 7\ncudaMemPoolAttrUsedMemHigh = 8\ncudaMemPoolReuseAllowInternalDependencies = 3\ncudaMemPoolReuseAllowOpportunistic = 2\ncudaMemPoolReuseFollowEventDependencies = 1\ncudaMemoryTypeDevice = 2\ncudaMemoryTypeHost = 1\ncudaReadModeElementType = 0\ncudaReadModeNormalizedFloat = 1\ncudaResourceTypeArray = 0\ncudaResourceTypeLinear = 2\ncudaResourceTypeMipmappedArray = 1\ncudaResourceTypePitch2D = 3\ndestroySurfaceObject = <built-in function destroySurfaceObject>\ndestroyTextureObject = <built-in function destroyTextureObject>\ndeviceCanAccessPeer = <built-in function deviceCanAccessPeer>\ndeviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\ndeviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\ndeviceGetAttribute = <built-in function deviceGetAttribute>\ndeviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\ndeviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\ndeviceGetLimit = <built-in function deviceGetLimit>\ndeviceGetMemPool = <built-in function deviceGetMemPool>\ndeviceGetPCIBusId = <built-in function deviceGetPCIBusId>\ndeviceSetLimit = <built-in function deviceSetLimit>\ndeviceSetMemPool = <built-in function deviceSetMemPool>\ndeviceSynchronize = <built-in function deviceSynchronize>\ndriverGetVersion = <built-in function driverGetVersion>\neventBlockingSync = 1\neventCreate = <built-in function eventCreate>\neventCreateWithFlags = <built-in function eventCreateWithFlags>\neventDefault = 0\neventDestroy = <built-in function eventDestroy>\neventDisableTiming = 2\neventElapsedTime = <built-in function eventElapsedTime>\neventInterprocess = 4\neventQuery = <built-in function eventQuery>\neventRecord = <built-in function eventRecord>\neventSynchronize = <built-in function eventSynchronize>\nfree       = <built-in function free>\nfreeArray  = <built-in function freeArray>\nfreeAsync  = <built-in function freeAsync>\nfreeHost   = <built-in function freeHost>\ngetDevice  = <built-in function getDevice>\ngetDeviceCount = <built-in function getDeviceCount>\ngetDeviceProperties = <built-in function getDeviceProperties>\ngraphDestroy = <built-in function graphDestroy>\ngraphExecDestroy = <built-in function graphExecDestroy>\ngraphInstantiate = <built-in function graphInstantiate>\ngraphLaunch = <built-in function graphLaunch>\ngraphUpload = <built-in function graphUpload>\nhostAlloc  = <built-in function hostAlloc>\nhostAllocDefault = 0\nhostAllocMapped = 2\nhostAllocPortable = 1\nhostAllocWriteCombined = 4\nhostRegister = <built-in function hostRegister>\nhostUnregister = <built-in function hostUnregister>\nipcCloseMemHandle = <built-in function ipcCloseMemHandle>\nipcGetEventHandle = <built-in function ipcGetEventHandle>\nipcGetMemHandle = <built-in function ipcGetMemHandle>\nipcOpenEventHandle = <built-in function ipcOpenEventHandle>\nipcOpenMemHandle = <built-in function ipcOpenMemHandle>\nis_hip     = False\nlaunchHostFunc = <built-in function launchHostFunc>\nmalloc     = <built-in function malloc>\nmalloc3DArray = <built-in function malloc3DArray>\nmallocArray = <built-in function mallocArray>\nmallocAsync = <built-in function mallocAsync>\nmallocFromPoolAsync = <built-in function mallocFromPoolAsync>\nmallocManaged = <built-in function mallocManaged>\nmemAdvise  = <built-in function memAdvise>\nmemGetInfo = <built-in function memGetInfo>\nmemPoolCreate = <built-in function memPoolCreate>\nmemPoolDestroy = <built-in function memPoolDestroy>\nmemPoolGetAttribute = <built-in function memPoolGetAttribute>\nmemPoolSetAttribute = <built-in function memPoolSetAttribute>\nmemPoolTrimTo = <built-in function memPoolTrimTo>\nmemPrefetchAsync = <built-in function memPrefetchAsync>\nmemcpy     = <built-in function memcpy>\nmemcpy2D   = <built-in function memcpy2D>\nmemcpy2DAsync = <built-in function memcpy2DAsync>\nmemcpy2DFromArray = <built-in function memcpy2DFromArray>\nmemcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\nmemcpy2DToArray = <built-in function memcpy2DToArray>\nmemcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\nmemcpy3D   = <built-in function memcpy3D>\nmemcpy3DAsync = <built-in function memcpy3DAsync>\nmemcpyAsync = <built-in function memcpyAsync>\nmemcpyDefault = 4\nmemcpyDeviceToDevice = 3\nmemcpyDeviceToHost = 2\nmemcpyHostToDevice = 1\nmemcpyHostToHost = 0\nmemcpyPeer = <built-in function memcpyPeer>\nmemcpyPeerAsync = <built-in function memcpyPeerAsync>\nmemoryTypeDevice = 2\nmemoryTypeHost = 1\nmemoryTypeManaged = 3\nmemoryTypeUnregistered = 0\nmemset     = <built-in function memset>\nmemsetAsync = <built-in function memsetAsync>\npointerGetAttributes = <built-in function pointerGetAttributes>\nruntimeGetVersion = <built-in function runtimeGetVersion>\nsetDevice  = <built-in function setDevice>\nstreamAddCallback = <built-in function streamAddCallback>\nstreamBeginCapture = <built-in function streamBeginCapture>\nstreamCaptureModeGlobal = 0\nstreamCaptureModeRelaxed = 2\nstreamCaptureModeThreadLocal = 1\nstreamCaptureStatusActive = 1\nstreamCaptureStatusInvalidated = 2\nstreamCaptureStatusNone = 0\nstreamCreate = <built-in function streamCreate>\nstreamCreateWithFlags = <built-in function streamCreateWithFlags>\nstreamDefault = 0\nstreamDestroy = <built-in function streamDestroy>\nstreamEndCapture = <built-in function streamEndCapture>\nstreamIsCapturing = <built-in function streamIsCapturing>\nstreamLegacy = 1\nstreamNonBlocking = 1\nstreamPerThread = 2\nstreamQuery = <built-in function streamQuery>\nstreamSynchronize = <built-in function streamSynchronize>\nstreamWaitEvent = <built-in function streamWaitEvent>\n\ncupy_backends/cuda/api/runtime.pyx:144: CUDARuntimeError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================= 1229 failed, 120 skipped in 83.29s (0:01:23) =================\n\n```",
  "closed_at":"2023-11-15T13:50:49Z",
  "comments":0,
  "created_at":"2023-11-15T13:34:23Z",
  "id":1994790162,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525hUS",
  "number":2822,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:49Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f41bbfb0af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 56.11s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:50Z",
  "comments":0,
  "created_at":"2023-11-15T13:36:29Z",
  "id":1994793596,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525iJ8",
  "number":2823,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:51Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fdca57a49a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 60.00s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:52Z",
  "comments":0,
  "created_at":"2023-11-15T13:38:40Z",
  "id":1994797352,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525jEo",
  "number":2824,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:52Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f11a2815580>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 55.28s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:53Z",
  "comments":0,
  "created_at":"2023-11-15T13:40:46Z",
  "id":1994800777,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525j6J",
  "number":2825,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f6393d51ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 53.08s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:54Z",
  "comments":0,
  "created_at":"2023-11-15T13:42:46Z",
  "id":1994804392,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525kyo",
  "number":2826,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:54Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fed134a1af0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 51.36s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:55Z",
  "comments":0,
  "created_at":"2023-11-15T13:44:43Z",
  "id":1994807671,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525ll3",
  "number":2827,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:55Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f7d13fb2b20>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 51.53s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:57Z",
  "comments":0,
  "created_at":"2023-11-15T13:46:37Z",
  "id":1994810892,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525mYM",
  "number":2828,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:57Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7fc2d564b610>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 51.73s ======================\n\n```",
  "closed_at":"2023-11-15T13:50:59Z",
  "comments":0,
  "created_at":"2023-11-15T13:48:34Z",
  "id":1994814176,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525nLg",
  "number":2829,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:50:59Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f4acf195ac0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 56.23s ======================\n\n```",
  "closed_at":"2023-11-15T13:51:28Z",
  "comments":0,
  "created_at":"2023-11-15T13:50:35Z",
  "id":1994817491,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525n_T",
  "number":2830,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:51:28Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\nwer case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n        __file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n        __loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f18b35a3670>\n        __name__   = 'cupy_backends.cuda.api.runtime'\n        __package__ = 'cupy_backends.cuda.api'\n        __pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35b4030>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f18b35b4b70>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f18b35a3d50>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3d80>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4d20>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4ba0>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4d50>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4bd0>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f18b35a3cf0>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f18b35a3d20>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f18b35a3f90>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3fc0>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f18b35a3e40>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f18b35a3e70>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f18b35b4690>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f18b35b4060>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f18b35b46c0>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3ea0>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4090>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b46f0>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f18b35a3f30>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3db0>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f18b35a3c90>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f18b35a3cc0>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f18b35a3c30>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f18b35a3c00>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f18b35a3c60>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f18b35b4a20>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b4a50>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4a80>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4ab0>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4ae0>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4b10>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4b40>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4270>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b42d0>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4300>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b42a0>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f18b35b4c00>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3e10>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3ed0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3f60>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f18b35b4c30>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f18b35b4c60>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4d80>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4db0>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4de0>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4e10>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4e40>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b41e0>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b4210>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4240>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4900>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f18b35b4c90>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f18b35b4cf0>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f18b35b4cc0>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b40c0>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f18b35b4120>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f18b35b4150>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4180>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b41b0>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f18b35b40f0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f18b35b4630>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f18b35b4330>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f18b35b4720>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4750>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b47b0>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f18b35b47e0>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4780>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4600>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b4360>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f18b35b4420>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4450>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b4480>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b44b0>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b44e0>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4510>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4540>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4570>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4390>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b43c0>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b43f0>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b45a0>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b45d0>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4660>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3de0>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3f00>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f18b35b48d0>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f18b35b4990>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f18b35b4810>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b4840>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4870>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b49c0>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b49f0>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4930>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b48a0>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f18b35b4960>}\n        __pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n        __pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n        __pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n        __spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f18b35a3670>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n        __test__   = {}\n        _deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n        _export_enum = <built-in function _export_enum>\n        _threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\n        check_status = <built-in function check_status>\n        createSurfaceObject = <built-in function createSurfaceObject>\n        createTextureObject = <built-in function createTextureObject>\n        cudaAddressModeBorder = 3\n        cudaAddressModeClamp = 1\n        cudaAddressModeMirror = 2\n        cudaAddressModeWrap = 0\n        cudaArrayDefault = 0\n        cudaArraySurfaceLoadStore = 2\n        cudaChannelFormatKindFloat = 2\n        cudaChannelFormatKindNone = 3\n        cudaChannelFormatKindSigned = 0\n        cudaChannelFormatKindUnsigned = 1\n        cudaDevAttrAsyncEngineCount = 40\n        cudaDevAttrCanFlushRemoteWrites = 98\n        cudaDevAttrCanMapHostMemory = 19\n        cudaDevAttrCanUseHostPointerForRegisteredMem = 91\n        cudaDevAttrClockRate = 13\n        cudaDevAttrComputeMode = 20\n        cudaDevAttrComputePreemptionSupported = 90\n        cudaDevAttrConcurrentKernels = 31\n        cudaDevAttrConcurrentManagedAccess = 89\n        cudaDevAttrCooperativeLaunch = 95\n        cudaDevAttrCooperativeMultiDeviceLaunch = 96\n        cudaDevAttrDirectManagedMemAccessFromHost = 101\n        cudaDevAttrEccEnabled = 32\n        cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\n        cudaDevAttrGPUDirectRDMASupported = 116\n        cudaDevAttrGPUDirectRDMAWritesOrdering = 118\n        cudaDevAttrGlobalL1CacheSupported = 79\n        cudaDevAttrGlobalMemoryBusWidth = 37\n        cudaDevAttrGpuOverlap = 15\n        cudaDevAttrHostNativeAtomicSupported = 86\n        cudaDevAttrHostRegisterReadOnlySupported = 113\n        cudaDevAttrHostRegisterSupported = 99\n        cudaDevAttrIntegrated = 18\n        cudaDevAttrIsMultiGpuBoard = 84\n        cudaDevAttrKernelExecTimeout = 17\n        cudaDevAttrL2CacheSize = 38\n        cudaDevAttrLocalL1CacheSupported = 80\n        cudaDevAttrManagedMemory = 83\n        cudaDevAttrMaxBlockDimX = 2\n        cudaDevAttrMaxBlockDimY = 3\n        cudaDevAttrMaxBlockDimZ = 4\n        cudaDevAttrMaxBlocksPerMultiprocessor = 106\n        cudaDevAttrMaxGridDimX = 5\n        cudaDevAttrMaxGridDimY = 6\n        cudaDevAttrMaxGridDimZ = 7\n        cudaDevAttrMaxPitch = 11\n        cudaDevAttrMaxRegistersPerBlock = 12\n        cudaDevAttrMaxRegistersPerMultiprocessor = 82\n        cudaDevAttrMaxSharedMemoryPerBlock = 8\n        cudaDevAttrMaxSharedMemoryPerBlockOptin = 97\n        cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\n        cudaDevAttrMaxSurface1DLayeredLayers = 62\n        cudaDevAttrMaxSurface1DLayeredWidth = 61\n        cudaDevAttrMaxSurface1DWidth = 55\n        cudaDevAttrMaxSurface2DHeight = 57\n        cudaDevAttrMaxSurface2DLayeredHeight = 64\n        cudaDevAttrMaxSurface2DLayeredLayers = 65\n        cudaDevAttrMaxSurface2DLayeredWidth = 63\n        cudaDevAttrMaxSurface2DWidth = 56\n        cudaDevAttrMaxSurface3DDepth = 60\n        cudaDevAttrMaxSurface3DHeight = 59\n        cudaDevAttrMaxSurface3DWidth = 58\n        cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\n        cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\n        cudaDevAttrMaxSurfaceCubemapWidth = 66\n        cudaDevAttrMaxTexture1DLayeredLayers = 43\n        cudaDevAttrMaxTexture1DLayeredWidth = 42\n        cudaDevAttrMaxTexture1DLinearWidth = 69\n        cudaDevAttrMaxTexture1DMipmappedWidth = 77\n        cudaDevAttrMaxTexture1DWidth = 21\n        cudaDevAttrMaxTexture2DGatherHeight = 46\n        cudaDevAttrMaxTexture2DGatherWidth = 45\n        cudaDevAttrMaxTexture2DHeight = 23\n        cudaDevAttrMaxTexture2DLayeredHeight = 28\n        cudaDevAttrMaxTexture2DLayeredLayers = 29\n        cudaDevAttrMaxTexture2DLayeredWidth = 27\n        cudaDevAttrMaxTexture2DLinearHeight = 71\n        cudaDevAttrMaxTexture2DLinearPitch = 72\n        cudaDevAttrMaxTexture2DLinearWidth = 70\n        cudaDevAttrMaxTexture2DMipmappedHeight = 74\n        cudaDevAttrMaxTexture2DMipmappedWidth = 73\n        cudaDevAttrMaxTexture2DWidth = 22\n        cudaDevAttrMaxTexture3DDepth = 26\n        cudaDevAttrMaxTexture3DDepthAlt = 49\n        cudaDevAttrMaxTexture3DHeight = 25\n        cudaDevAttrMaxTexture3DHeightAlt = 48\n        cudaDevAttrMaxTexture3DWidth = 24\n        cudaDevAttrMaxTexture3DWidthAlt = 47\n        cudaDevAttrMaxTextureCubemapLayeredLayers = 54\n        cudaDevAttrMaxTextureCubemapLayeredWidth = 53\n        cudaDevAttrMaxTextureCubemapWidth = 52\n        cudaDevAttrMaxThreadsPerBlock = 1\n        cudaDevAttrMaxThreadsPerMultiProcessor = 39\n        cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\n        cudaDevAttrMemoryClockRate = 36\n        cudaDevAttrMemoryPoolSupportedHandleTypes = 119\n        cudaDevAttrMemoryPoolsSupported = 115\n        cudaDevAttrMultiGpuBoardGroupID = 85\n        cudaDevAttrMultiProcessorCount = 16\n        cudaDevAttrPageableMemoryAccess = 88\n        cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\n        cudaDevAttrPciBusId = 33\n        cudaDevAttrPciDeviceId = 34\n        cudaDevAttrPciDomainId = 50\n        cudaDevAttrReserved92 = 92\n        cudaDevAttrReserved93 = 93\n        cudaDevAttrReserved94 = 94\n        cudaDevAttrReservedSharedMemoryPerBlock = 111\n        cudaDevAttrSingleToDoublePrecisionPerfRatio = 87\n        cudaDevAttrSparseCudaArraySupported = 112\n        cudaDevAttrStreamPrioritiesSupported = 78\n        cudaDevAttrSurfaceAlignment = 30\n        cudaDevAttrTccDriver = 35\n        cudaDevAttrTextureAlignment = 14\n        cudaDevAttrTexturePitchAlignment = 51\n        cudaDevAttrTotalConstantMemory = 9\n        cudaDevAttrUnifiedAddressing = 41\n        cudaDevAttrWarpSize = 10\n        cudaFilterModeLinear = 1\n        cudaFilterModePoint = 0\n        cudaIpcMemLazyEnablePeerAccess = 1\n        cudaLimitDevRuntimePendingLaunchCount = 4\n        cudaLimitDevRuntimeSyncDepth = 3\n        cudaLimitMallocHeapSize = 2\n        cudaLimitMaxL2FetchGranularity = 5\n        cudaLimitPrintfFifoSize = 1\n        cudaLimitStackSize = 0\n        cudaMemAdviseSetAccessedBy = 5\n        cudaMemAdviseSetPreferredLocation = 3\n        cudaMemAdviseSetReadMostly = 1\n        cudaMemAdviseUnsetAccessedBy = 6\n        cudaMemAdviseUnsetPreferredLocation = 4\n        cudaMemAdviseUnsetReadMostly = 2\n        cudaMemAllocationTypePinned = 1\n        cudaMemAttachGlobal = 1\n        cudaMemAttachHost = 2\n        cudaMemAttachSingle = 4\n        cudaMemHandleTypeNone = 0\n        cudaMemHandleTypePosixFileDescriptor = 1\n        cudaMemLocationTypeDevice = 1\n        cudaMemPoolAttrReleaseThreshold = 4\n        cudaMemPoolAttrReservedMemCurrent = 5\n        cudaMemPoolAttrReservedMemHigh = 6\n        cudaMemPoolAttrUsedMemCurrent = 7\n        cudaMemPoolAttrUsedMemHigh = 8\n        cudaMemPoolReuseAllowInternalDependencies = 3\n        cudaMemPoolReuseAllowOpportunistic = 2\n        cudaMemPoolReuseFollowEventDependencies = 1\n        cudaMemoryTypeDevice = 2\n        cudaMemoryTypeHost = 1\n        cudaReadModeElementType = 0\n        cudaReadModeNormalizedFloat = 1\n        cudaResourceTypeArray = 0\n        cudaResourceTypeLinear = 2\n        cudaResourceTypeMipmappedArray = 1\n        cudaResourceTypePitch2D = 3\n        destroySurfaceObject = <built-in function destroySurfaceObject>\n        destroyTextureObject = <built-in function destroyTextureObject>\n        deviceCanAccessPeer = <built-in function deviceCanAccessPeer>\n        deviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\n        deviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\n        deviceGetAttribute = <built-in function deviceGetAttribute>\n        deviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\n        deviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\n        deviceGetLimit = <built-in function deviceGetLimit>\n        deviceGetMemPool = <built-in function deviceGetMemPool>\n        deviceGetPCIBusId = <built-in function deviceGetPCIBusId>\n        deviceSetLimit = <built-in function deviceSetLimit>\n        deviceSetMemPool = <built-in function deviceSetMemPool>\n        deviceSynchronize = <built-in function deviceSynchronize>\n        driverGetVersion = <built-in function driverGetVersion>\n        eventBlockingSync = 1\n        eventCreate = <built-in function eventCreate>\n        eventCreateWithFlags = <built-in function eventCreateWithFlags>\n        eventDefault = 0\n        eventDestroy = <built-in function eventDestroy>\n        eventDisableTiming = 2\n        eventElapsedTime = <built-in function eventElapsedTime>\n        eventInterprocess = 4\n        eventQuery = <built-in function eventQuery>\n        eventRecord = <built-in function eventRecord>\n        eventSynchronize = <built-in function eventSynchronize>\n        free       = <built-in function free>\n        freeArray  = <built-in function freeArray>\n        freeAsync  = <built-in function freeAsync>\n        freeHost   = <built-in function freeHost>\n        getDevice  = <built-in function getDevice>\n        getDeviceCount = <built-in function getDeviceCount>\n        getDeviceProperties = <built-in function getDeviceProperties>\n        graphDestroy = <built-in function graphDestroy>\n        graphExecDestroy = <built-in function graphExecDestroy>\n        graphInstantiate = <built-in function graphInstantiate>\n        graphLaunch = <built-in function graphLaunch>\n        graphUpload = <built-in function graphUpload>\n        hostAlloc  = <built-in function hostAlloc>\n        hostAllocDefault = 0\n        hostAllocMapped = 2\n        hostAllocPortable = 1\n        hostAllocWriteCombined = 4\n        hostRegister = <built-in function hostRegister>\n        hostUnregister = <built-in function hostUnregister>\n        ipcCloseMemHandle = <built-in function ipcCloseMemHandle>\n        ipcGetEventHandle = <built-in function ipcGetEventHandle>\n        ipcGetMemHandle = <built-in function ipcGetMemHandle>\n        ipcOpenEventHandle = <built-in function ipcOpenEventHandle>\n        ipcOpenMemHandle = <built-in function ipcOpenMemHandle>\n        is_hip     = False\n        launchHostFunc = <built-in function launchHostFunc>\n        malloc     = <built-in function malloc>\n        malloc3DArray = <built-in function malloc3DArray>\n        mallocArray = <built-in function mallocArray>\n        mallocAsync = <built-in function mallocAsync>\n        mallocFromPoolAsync = <built-in function mallocFromPoolAsync>\n        mallocManaged = <built-in function mallocManaged>\n        memAdvise  = <built-in function memAdvise>\n        memGetInfo = <built-in function memGetInfo>\n        memPoolCreate = <built-in function memPoolCreate>\n        memPoolDestroy = <built-in function memPoolDestroy>\n        memPoolGetAttribute = <built-in function memPoolGetAttribute>\n        memPoolSetAttribute = <built-in function memPoolSetAttribute>\n        memPoolTrimTo = <built-in function memPoolTrimTo>\n        memPrefetchAsync = <built-in function memPrefetchAsync>\n        memcpy     = <built-in function memcpy>\n        memcpy2D   = <built-in function memcpy2D>\n        memcpy2DAsync = <built-in function memcpy2DAsync>\n        memcpy2DFromArray = <built-in function memcpy2DFromArray>\n        memcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\n        memcpy2DToArray = <built-in function memcpy2DToArray>\n        memcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\n        memcpy3D   = <built-in function memcpy3D>\n        memcpy3DAsync = <built-in function memcpy3DAsync>\n        memcpyAsync = <built-in function memcpyAsync>\n        memcpyDefault = 4\n        memcpyDeviceToDevice = 3\n        memcpyDeviceToHost = 2\n        memcpyHostToDevice = 1\n        memcpyHostToHost = 0\n        memcpyPeer = <built-in function memcpyPeer>\n        memcpyPeerAsync = <built-in function memcpyPeerAsync>\n        memoryTypeDevice = 2\n        memoryTypeHost = 1\n        memoryTypeManaged = 3\n        memoryTypeUnregistered = 0\n        memset     = <built-in function memset>\n        memsetAsync = <built-in function memsetAsync>\n        pointerGetAttributes = <built-in function pointerGetAttributes>\n        runtimeGetVersion = <built-in function runtimeGetVersion>\n        setDevice  = <built-in function setDevice>\n        streamAddCallback = <built-in function streamAddCallback>\n        streamBeginCapture = <built-in function streamBeginCapture>\n        streamCaptureModeGlobal = 0\n        streamCaptureModeRelaxed = 2\n        streamCaptureModeThreadLocal = 1\n        streamCaptureStatusActive = 1\n        streamCaptureStatusInvalidated = 2\n        streamCaptureStatusNone = 0\n        streamCreate = <built-in function streamCreate>\n        streamCreateWithFlags = <built-in function streamCreateWithFlags>\n        streamDefault = 0\n        streamDestroy = <built-in function streamDestroy>\n        streamEndCapture = <built-in function streamEndCapture>\n        streamIsCapturing = <built-in function streamIsCapturing>\n        streamLegacy = 1\n        streamNonBlocking = 1\n        streamPerThread = 2\n        streamQuery = <built-in function streamQuery>\n        streamSynchronize = <built-in function streamSynchronize>\n        streamWaitEvent = <built-in function streamWaitEvent>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   cupy_backends.cuda.api.runtime.CUDARuntimeError: cudaErrorNoDevice: no CUDA-capable device is detected\n\nCUDARuntimeError = <class 'cupy_backends.cuda.api.runtime.CUDARuntimeError'>\nCUDA_C_16F = 6\nCUDA_C_32F = 4\nCUDA_C_64F = 5\nCUDA_C_8I  = 7\nCUDA_C_8U  = 9\nCUDA_R_16F = 2\nCUDA_R_32F = 0\nCUDA_R_64F = 1\nCUDA_R_8I  = 3\nCUDA_R_8U  = 8\nMemPoolProps = <class 'cupy_backends.cuda.api.runtime.MemPoolProps'>\nPointerAttributes = <class 'cupy_backends.cuda.api.runtime.PointerAttributes'>\n_ThreadLocal = <class 'cupy_backends.cuda.api.runtime._ThreadLocal'>\n__builtins__ = <builtins>\n__doc__    = ('Thin wrapper of CUDA Runtime API.\\n'\n '\\n'\n 'There are four differences compared to the original C API.\\n'\n '\\n'\n '1. Not all functions are ported.\\n'\n '2. Errors are translated into CUDARuntimeError exceptions.\\n'\n \"3. The 'cuda' prefix of each API is omitted and the next character is set \"\n 'to\\n'\n '   lower case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n__file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n__loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f18b35a3670>\n__name__   = 'cupy_backends.cuda.api.runtime'\n__package__ = 'cupy_backends.cuda.api'\n__pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35b4030>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f18b35b4b70>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f18b35a3d50>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3d80>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4d20>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4ba0>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4d50>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4bd0>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f18b35a3cf0>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f18b35a3d20>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f18b35a3f90>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3fc0>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f18b35a3e40>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f18b35a3e70>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f18b35b4690>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f18b35b4060>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f18b35b46c0>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3ea0>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4090>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b46f0>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f18b35a3f30>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3db0>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f18b35a3c90>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f18b35a3cc0>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f18b35a3c30>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f18b35a3c00>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f18b35a3c60>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f18b35b4a20>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b4a50>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4a80>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4ab0>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4ae0>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4b10>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4b40>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4270>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b42d0>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4300>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b42a0>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f18b35b4c00>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3e10>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3ed0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3f60>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f18b35b4c30>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f18b35b4c60>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4d80>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4db0>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4de0>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4e10>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4e40>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b41e0>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b4210>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4240>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4900>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f18b35b4c90>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f18b35b4cf0>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f18b35b4cc0>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b40c0>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f18b35b4120>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f18b35b4150>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4180>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b41b0>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f18b35b40f0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f18b35b4630>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f18b35b4330>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f18b35b4720>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4750>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b47b0>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f18b35b47e0>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4780>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4600>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b4360>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f18b35b4420>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4450>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b4480>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b44b0>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f18b35b44e0>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4510>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4540>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4570>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4390>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b43c0>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b43f0>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f18b35b45a0>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b45d0>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4660>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f18b35a3de0>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f18b35a3f00>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f18b35b48d0>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f18b35b4990>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f18b35b4810>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f18b35b4840>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4870>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b49c0>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b49f0>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b4930>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f18b35b48a0>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f18b35b4960>}\n__pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n__pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n__pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n__spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f18b35a3670>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n__test__   = {}\n_deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n_export_enum = <built-in function _export_enum>\n_threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\ncheck_status = <built-in function check_status>\ncreateSurfaceObject = <built-in function createSurfaceObject>\ncreateTextureObject = <built-in function createTextureObject>\ncudaAddressModeBorder = 3\ncudaAddressModeClamp = 1\ncudaAddressModeMirror = 2\ncudaAddressModeWrap = 0\ncudaArrayDefault = 0\ncudaArraySurfaceLoadStore = 2\ncudaChannelFormatKindFloat = 2\ncudaChannelFormatKindNone = 3\ncudaChannelFormatKindSigned = 0\ncudaChannelFormatKindUnsigned = 1\ncudaDevAttrAsyncEngineCount = 40\ncudaDevAttrCanFlushRemoteWrites = 98\ncudaDevAttrCanMapHostMemory = 19\ncudaDevAttrCanUseHostPointerForRegisteredMem = 91\ncudaDevAttrClockRate = 13\ncudaDevAttrComputeMode = 20\ncudaDevAttrComputePreemptionSupported = 90\ncudaDevAttrConcurrentKernels = 31\ncudaDevAttrConcurrentManagedAccess = 89\ncudaDevAttrCooperativeLaunch = 95\ncudaDevAttrCooperativeMultiDeviceLaunch = 96\ncudaDevAttrDirectManagedMemAccessFromHost = 101\ncudaDevAttrEccEnabled = 32\ncudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\ncudaDevAttrGPUDirectRDMASupported = 116\ncudaDevAttrGPUDirectRDMAWritesOrdering = 118\ncudaDevAttrGlobalL1CacheSupported = 79\ncudaDevAttrGlobalMemoryBusWidth = 37\ncudaDevAttrGpuOverlap = 15\ncudaDevAttrHostNativeAtomicSupported = 86\ncudaDevAttrHostRegisterReadOnlySupported = 113\ncudaDevAttrHostRegisterSupported = 99\ncudaDevAttrIntegrated = 18\ncudaDevAttrIsMultiGpuBoard = 84\ncudaDevAttrKernelExecTimeout = 17\ncudaDevAttrL2CacheSize = 38\ncudaDevAttrLocalL1CacheSupported = 80\ncudaDevAttrManagedMemory = 83\ncudaDevAttrMaxBlockDimX = 2\ncudaDevAttrMaxBlockDimY = 3\ncudaDevAttrMaxBlockDimZ = 4\ncudaDevAttrMaxBlocksPerMultiprocessor = 106\ncudaDevAttrMaxGridDimX = 5\ncudaDevAttrMaxGridDimY = 6\ncudaDevAttrMaxGridDimZ = 7\ncudaDevAttrMaxPitch = 11\ncudaDevAttrMaxRegistersPerBlock = 12\ncudaDevAttrMaxRegistersPerMultiprocessor = 82\ncudaDevAttrMaxSharedMemoryPerBlock = 8\ncudaDevAttrMaxSharedMemoryPerBlockOptin = 97\ncudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\ncudaDevAttrMaxSurface1DLayeredLayers = 62\ncudaDevAttrMaxSurface1DLayeredWidth = 61\ncudaDevAttrMaxSurface1DWidth = 55\ncudaDevAttrMaxSurface2DHeight = 57\ncudaDevAttrMaxSurface2DLayeredHeight = 64\ncudaDevAttrMaxSurface2DLayeredLayers = 65\ncudaDevAttrMaxSurface2DLayeredWidth = 63\ncudaDevAttrMaxSurface2DWidth = 56\ncudaDevAttrMaxSurface3DDepth = 60\ncudaDevAttrMaxSurface3DHeight = 59\ncudaDevAttrMaxSurface3DWidth = 58\ncudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\ncudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\ncudaDevAttrMaxSurfaceCubemapWidth = 66\ncudaDevAttrMaxTexture1DLayeredLayers = 43\ncudaDevAttrMaxTexture1DLayeredWidth = 42\ncudaDevAttrMaxTexture1DLinearWidth = 69\ncudaDevAttrMaxTexture1DMipmappedWidth = 77\ncudaDevAttrMaxTexture1DWidth = 21\ncudaDevAttrMaxTexture2DGatherHeight = 46\ncudaDevAttrMaxTexture2DGatherWidth = 45\ncudaDevAttrMaxTexture2DHeight = 23\ncudaDevAttrMaxTexture2DLayeredHeight = 28\ncudaDevAttrMaxTexture2DLayeredLayers = 29\ncudaDevAttrMaxTexture2DLayeredWidth = 27\ncudaDevAttrMaxTexture2DLinearHeight = 71\ncudaDevAttrMaxTexture2DLinearPitch = 72\ncudaDevAttrMaxTexture2DLinearWidth = 70\ncudaDevAttrMaxTexture2DMipmappedHeight = 74\ncudaDevAttrMaxTexture2DMipmappedWidth = 73\ncudaDevAttrMaxTexture2DWidth = 22\ncudaDevAttrMaxTexture3DDepth = 26\ncudaDevAttrMaxTexture3DDepthAlt = 49\ncudaDevAttrMaxTexture3DHeight = 25\ncudaDevAttrMaxTexture3DHeightAlt = 48\ncudaDevAttrMaxTexture3DWidth = 24\ncudaDevAttrMaxTexture3DWidthAlt = 47\ncudaDevAttrMaxTextureCubemapLayeredLayers = 54\ncudaDevAttrMaxTextureCubemapLayeredWidth = 53\ncudaDevAttrMaxTextureCubemapWidth = 52\ncudaDevAttrMaxThreadsPerBlock = 1\ncudaDevAttrMaxThreadsPerMultiProcessor = 39\ncudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\ncudaDevAttrMemoryClockRate = 36\ncudaDevAttrMemoryPoolSupportedHandleTypes = 119\ncudaDevAttrMemoryPoolsSupported = 115\ncudaDevAttrMultiGpuBoardGroupID = 85\ncudaDevAttrMultiProcessorCount = 16\ncudaDevAttrPageableMemoryAccess = 88\ncudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\ncudaDevAttrPciBusId = 33\ncudaDevAttrPciDeviceId = 34\ncudaDevAttrPciDomainId = 50\ncudaDevAttrReserved92 = 92\ncudaDevAttrReserved93 = 93\ncudaDevAttrReserved94 = 94\ncudaDevAttrReservedSharedMemoryPerBlock = 111\ncudaDevAttrSingleToDoublePrecisionPerfRatio = 87\ncudaDevAttrSparseCudaArraySupported = 112\ncudaDevAttrStreamPrioritiesSupported = 78\ncudaDevAttrSurfaceAlignment = 30\ncudaDevAttrTccDriver = 35\ncudaDevAttrTextureAlignment = 14\ncudaDevAttrTexturePitchAlignment = 51\ncudaDevAttrTotalConstantMemory = 9\ncudaDevAttrUnifiedAddressing = 41\ncudaDevAttrWarpSize = 10\ncudaFilterModeLinear = 1\ncudaFilterModePoint = 0\ncudaIpcMemLazyEnablePeerAccess = 1\ncudaLimitDevRuntimePendingLaunchCount = 4\ncudaLimitDevRuntimeSyncDepth = 3\ncudaLimitMallocHeapSize = 2\ncudaLimitMaxL2FetchGranularity = 5\ncudaLimitPrintfFifoSize = 1\ncudaLimitStackSize = 0\ncudaMemAdviseSetAccessedBy = 5\ncudaMemAdviseSetPreferredLocation = 3\ncudaMemAdviseSetReadMostly = 1\ncudaMemAdviseUnsetAccessedBy = 6\ncudaMemAdviseUnsetPreferredLocation = 4\ncudaMemAdviseUnsetReadMostly = 2\ncudaMemAllocationTypePinned = 1\ncudaMemAttachGlobal = 1\ncudaMemAttachHost = 2\ncudaMemAttachSingle = 4\ncudaMemHandleTypeNone = 0\ncudaMemHandleTypePosixFileDescriptor = 1\ncudaMemLocationTypeDevice = 1\ncudaMemPoolAttrReleaseThreshold = 4\ncudaMemPoolAttrReservedMemCurrent = 5\ncudaMemPoolAttrReservedMemHigh = 6\ncudaMemPoolAttrUsedMemCurrent = 7\ncudaMemPoolAttrUsedMemHigh = 8\ncudaMemPoolReuseAllowInternalDependencies = 3\ncudaMemPoolReuseAllowOpportunistic = 2\ncudaMemPoolReuseFollowEventDependencies = 1\ncudaMemoryTypeDevice = 2\ncudaMemoryTypeHost = 1\ncudaReadModeElementType = 0\ncudaReadModeNormalizedFloat = 1\ncudaResourceTypeArray = 0\ncudaResourceTypeLinear = 2\ncudaResourceTypeMipmappedArray = 1\ncudaResourceTypePitch2D = 3\ndestroySurfaceObject = <built-in function destroySurfaceObject>\ndestroyTextureObject = <built-in function destroyTextureObject>\ndeviceCanAccessPeer = <built-in function deviceCanAccessPeer>\ndeviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\ndeviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\ndeviceGetAttribute = <built-in function deviceGetAttribute>\ndeviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\ndeviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\ndeviceGetLimit = <built-in function deviceGetLimit>\ndeviceGetMemPool = <built-in function deviceGetMemPool>\ndeviceGetPCIBusId = <built-in function deviceGetPCIBusId>\ndeviceSetLimit = <built-in function deviceSetLimit>\ndeviceSetMemPool = <built-in function deviceSetMemPool>\ndeviceSynchronize = <built-in function deviceSynchronize>\ndriverGetVersion = <built-in function driverGetVersion>\neventBlockingSync = 1\neventCreate = <built-in function eventCreate>\neventCreateWithFlags = <built-in function eventCreateWithFlags>\neventDefault = 0\neventDestroy = <built-in function eventDestroy>\neventDisableTiming = 2\neventElapsedTime = <built-in function eventElapsedTime>\neventInterprocess = 4\neventQuery = <built-in function eventQuery>\neventRecord = <built-in function eventRecord>\neventSynchronize = <built-in function eventSynchronize>\nfree       = <built-in function free>\nfreeArray  = <built-in function freeArray>\nfreeAsync  = <built-in function freeAsync>\nfreeHost   = <built-in function freeHost>\ngetDevice  = <built-in function getDevice>\ngetDeviceCount = <built-in function getDeviceCount>\ngetDeviceProperties = <built-in function getDeviceProperties>\ngraphDestroy = <built-in function graphDestroy>\ngraphExecDestroy = <built-in function graphExecDestroy>\ngraphInstantiate = <built-in function graphInstantiate>\ngraphLaunch = <built-in function graphLaunch>\ngraphUpload = <built-in function graphUpload>\nhostAlloc  = <built-in function hostAlloc>\nhostAllocDefault = 0\nhostAllocMapped = 2\nhostAllocPortable = 1\nhostAllocWriteCombined = 4\nhostRegister = <built-in function hostRegister>\nhostUnregister = <built-in function hostUnregister>\nipcCloseMemHandle = <built-in function ipcCloseMemHandle>\nipcGetEventHandle = <built-in function ipcGetEventHandle>\nipcGetMemHandle = <built-in function ipcGetMemHandle>\nipcOpenEventHandle = <built-in function ipcOpenEventHandle>\nipcOpenMemHandle = <built-in function ipcOpenMemHandle>\nis_hip     = False\nlaunchHostFunc = <built-in function launchHostFunc>\nmalloc     = <built-in function malloc>\nmalloc3DArray = <built-in function malloc3DArray>\nmallocArray = <built-in function mallocArray>\nmallocAsync = <built-in function mallocAsync>\nmallocFromPoolAsync = <built-in function mallocFromPoolAsync>\nmallocManaged = <built-in function mallocManaged>\nmemAdvise  = <built-in function memAdvise>\nmemGetInfo = <built-in function memGetInfo>\nmemPoolCreate = <built-in function memPoolCreate>\nmemPoolDestroy = <built-in function memPoolDestroy>\nmemPoolGetAttribute = <built-in function memPoolGetAttribute>\nmemPoolSetAttribute = <built-in function memPoolSetAttribute>\nmemPoolTrimTo = <built-in function memPoolTrimTo>\nmemPrefetchAsync = <built-in function memPrefetchAsync>\nmemcpy     = <built-in function memcpy>\nmemcpy2D   = <built-in function memcpy2D>\nmemcpy2DAsync = <built-in function memcpy2DAsync>\nmemcpy2DFromArray = <built-in function memcpy2DFromArray>\nmemcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\nmemcpy2DToArray = <built-in function memcpy2DToArray>\nmemcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\nmemcpy3D   = <built-in function memcpy3D>\nmemcpy3DAsync = <built-in function memcpy3DAsync>\nmemcpyAsync = <built-in function memcpyAsync>\nmemcpyDefault = 4\nmemcpyDeviceToDevice = 3\nmemcpyDeviceToHost = 2\nmemcpyHostToDevice = 1\nmemcpyHostToHost = 0\nmemcpyPeer = <built-in function memcpyPeer>\nmemcpyPeerAsync = <built-in function memcpyPeerAsync>\nmemoryTypeDevice = 2\nmemoryTypeHost = 1\nmemoryTypeManaged = 3\nmemoryTypeUnregistered = 0\nmemset     = <built-in function memset>\nmemsetAsync = <built-in function memsetAsync>\npointerGetAttributes = <built-in function pointerGetAttributes>\nruntimeGetVersion = <built-in function runtimeGetVersion>\nsetDevice  = <built-in function setDevice>\nstreamAddCallback = <built-in function streamAddCallback>\nstreamBeginCapture = <built-in function streamBeginCapture>\nstreamCaptureModeGlobal = 0\nstreamCaptureModeRelaxed = 2\nstreamCaptureModeThreadLocal = 1\nstreamCaptureStatusActive = 1\nstreamCaptureStatusInvalidated = 2\nstreamCaptureStatusNone = 0\nstreamCreate = <built-in function streamCreate>\nstreamCreateWithFlags = <built-in function streamCreateWithFlags>\nstreamDefault = 0\nstreamDestroy = <built-in function streamDestroy>\nstreamEndCapture = <built-in function streamEndCapture>\nstreamIsCapturing = <built-in function streamIsCapturing>\nstreamLegacy = 1\nstreamNonBlocking = 1\nstreamPerThread = 2\nstreamQuery = <built-in function streamQuery>\nstreamSynchronize = <built-in function streamSynchronize>\nstreamWaitEvent = <built-in function streamWaitEvent>\n\ncupy_backends/cuda/api/runtime.pyx:144: CUDARuntimeError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================= 1229 failed, 120 skipped in 81.98s (0:01:21) =================\n\n```",
  "closed_at":"2023-11-15T13:57:25Z",
  "comments":0,
  "created_at":"2023-11-15T13:53:05Z",
  "id":1994824600,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525puY",
  "number":2831,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:57:25Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f55518a8700>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 51.73s ======================\n\n```",
  "closed_at":"2023-11-15T13:57:22Z",
  "comments":0,
  "created_at":"2023-11-15T13:55:08Z",
  "id":1994828274,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525qny",
  "number":2832,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:57:22Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit e3e48744d5a0ef09068996c1c590ca9bcb25492d with the following pytest output:\n\n```\npackages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_2 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_2():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_3 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_3():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_4 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_4():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_5 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_5():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_6 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_6():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_7 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_7():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_8 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_8():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:138: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_9 _____________________\n\n    def test_cuda_awkward_missing_repeat_64_9():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:154: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_10 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_10():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 2, 2, 3, 0, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_11 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_11():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_12 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_12():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_13 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_13():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_14 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_14():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:234: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_15 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_15():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 3, 0, 3, 5, 2, 0, 2, 1, 1])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:250: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_16 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_16():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:266: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_17 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_17():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:282: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_18 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_18():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:298: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_19 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_19():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:314: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_20 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_20():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([1, 4, 2, 3, 1, 2, 3, 1, 4, 3, 2, 1, 3, 2, 4, 5, 1, 2, 3, 4, 5])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:330: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_21 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_21():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 3\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 3\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_22 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_22():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:362: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_23 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_23():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 1\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 1\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:378: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_24 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_24():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 2\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 2\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:394: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n____________________ test_cuda_awkward_missing_repeat_64_25 ____________________\n\n    def test_cuda_awkward_missing_repeat_64_25():\n        outindex = cupy.array([123, 123, 123, 123, 123, 123, 123, 123, 123], dtype=cupy.int64)\n        index = cupy.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        indexlength = 3\n        repetitions = 3\n        regularsize = 0\n>       funcC = cupy_backend['awkward_missing_repeat', cupy.int64, cupy.int64]\n\nindex      = array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\nindexlength = 3\noutindex   = array([123, 123, 123, 123, 123, 123, 123, 123, 123])\nregularsize = 0\nrepetitions = 3\n\ntests-cuda-kernels/test_cudaawkward_missing_repeat_64.py:410: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/build-venv/lib/python3.8/site-packages/awkward/_backends/cupy.py:38: in __getitem__\n    _cuda_kernels = cuda.initialize_cuda_kernels(cupy)\n        cuda       = <module 'awkward._connect.cuda' from '/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py'>\n        cupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n        index      = ('awkward_missing_repeat', <class 'numpy.int64'>, <class 'numpy.int64'>)\n        self       = <awkward._backends.cupy.CupyBackend object at 0x7f9c188e66a0>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncupy = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n    def initialize_cuda_kernels(cupy):\n        if cupy is not None:\n            global kernel\n    \n            if kernel is None:\n>               import awkward._connect.cuda._kernel_signatures\nE               ModuleNotFoundError: No module named 'awkward._connect.cuda._kernel_signatures'\n\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:162: ModuleNotFoundError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n====================== 1229 failed, 120 skipped in 54.25s ======================\n\n```",
  "closed_at":"2023-11-15T13:59:02Z",
  "comments":0,
  "created_at":"2023-11-15T13:58:25Z",
  "id":1994834168,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws525sD4",
  "number":2833,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-15T13:59:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The test-runner for the GPU tests failed before hitting pytest.",
  "closed_at":"2023-11-20T11:15:28Z",
  "comments":0,
  "created_at":"2023-11-16T09:37:04Z",
  "id":1996448524,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws52_2MM",
  "number":2834,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Setup Failed",
  "updated_at":"2023-11-20T11:15:28Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit  with the following pytest output:\n\n```\n\n```",
  "closed_at":"2023-11-20T11:15:33Z",
  "comments":0,
  "created_at":"2023-11-16T09:37:05Z",
  "id":1996448559,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws52_2Mv",
  "number":2835,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-20T11:15:34Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I noticed that ufuncs in dask-awkward were not propagating attrs. It turns out that the bug originates here \u2014 odd that our tests didn't catch this, but perhaps it was a trivial oversight.",
  "closed_at":"2023-11-16T22:10:38Z",
  "comments":1,
  "created_at":"2023-11-16T21:36:03Z",
  "draft":false,
  "id":1997829990,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5frrTv",
  "number":2837,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-16T22:10:38Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: ufunc handling of attrs",
  "updated_at":"2023-11-16T22:10:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit 6ec2b071b0a4a987682c36d2208a55169c7d8ae5 with the following pytest output:\n\n```\nwer case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n        __file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n        __loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f941ec77610>\n        __name__   = 'cupy_backends.cuda.api.runtime'\n        __package__ = 'cupy_backends.cuda.api'\n        __pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77f90>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f941ec88b10>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f941ec77cf0>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77d20>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88cc0>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88b40>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f941ec88cf0>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f941ec88b70>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f941ec77c90>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f941ec77cc0>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f941ec77f30>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77f60>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f941ec77de0>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f941ec77e10>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f941ec88630>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f941ec77fc0>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f941ec88660>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77e40>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88030>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88690>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f941ec77ed0>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77d50>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f941ec77c30>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f941ec77c60>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f941ec77bd0>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f941ec77ba0>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f941ec77c00>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f941ec889c0>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec889f0>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88a20>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88a50>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88a80>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88ab0>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88ae0>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88210>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88270>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec882a0>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88240>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f941ec88ba0>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77db0>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77e70>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77f00>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f941ec88bd0>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f941ec88c00>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88d20>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88d50>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88d80>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88db0>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88de0>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec88180>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec881b0>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec881e0>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec888a0>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f941ec88c30>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f941ec88c90>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f941ec88c60>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88060>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f941ec880c0>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f941ec880f0>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88120>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88150>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f941ec88090>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f941ec885d0>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f941ec882d0>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f941ec886c0>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec886f0>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88750>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f941ec88780>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88720>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec885a0>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88300>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f941ec883c0>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec883f0>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88420>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88450>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88480>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec884b0>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec884e0>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88510>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88330>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88360>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88390>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88540>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88570>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88600>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77d80>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77ea0>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f941ec88870>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f941ec88930>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f941ec887b0>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec887e0>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88810>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88960>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88990>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec888d0>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88840>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f941ec88900>}\n        __pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n        __pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n        __pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n        __spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f941ec77610>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n        __test__   = {}\n        _deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n        _export_enum = <built-in function _export_enum>\n        _threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\n        check_status = <built-in function check_status>\n        createSurfaceObject = <built-in function createSurfaceObject>\n        createTextureObject = <built-in function createTextureObject>\n        cudaAddressModeBorder = 3\n        cudaAddressModeClamp = 1\n        cudaAddressModeMirror = 2\n        cudaAddressModeWrap = 0\n        cudaArrayDefault = 0\n        cudaArraySurfaceLoadStore = 2\n        cudaChannelFormatKindFloat = 2\n        cudaChannelFormatKindNone = 3\n        cudaChannelFormatKindSigned = 0\n        cudaChannelFormatKindUnsigned = 1\n        cudaDevAttrAsyncEngineCount = 40\n        cudaDevAttrCanFlushRemoteWrites = 98\n        cudaDevAttrCanMapHostMemory = 19\n        cudaDevAttrCanUseHostPointerForRegisteredMem = 91\n        cudaDevAttrClockRate = 13\n        cudaDevAttrComputeMode = 20\n        cudaDevAttrComputePreemptionSupported = 90\n        cudaDevAttrConcurrentKernels = 31\n        cudaDevAttrConcurrentManagedAccess = 89\n        cudaDevAttrCooperativeLaunch = 95\n        cudaDevAttrCooperativeMultiDeviceLaunch = 96\n        cudaDevAttrDirectManagedMemAccessFromHost = 101\n        cudaDevAttrEccEnabled = 32\n        cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\n        cudaDevAttrGPUDirectRDMASupported = 116\n        cudaDevAttrGPUDirectRDMAWritesOrdering = 118\n        cudaDevAttrGlobalL1CacheSupported = 79\n        cudaDevAttrGlobalMemoryBusWidth = 37\n        cudaDevAttrGpuOverlap = 15\n        cudaDevAttrHostNativeAtomicSupported = 86\n        cudaDevAttrHostRegisterReadOnlySupported = 113\n        cudaDevAttrHostRegisterSupported = 99\n        cudaDevAttrIntegrated = 18\n        cudaDevAttrIsMultiGpuBoard = 84\n        cudaDevAttrKernelExecTimeout = 17\n        cudaDevAttrL2CacheSize = 38\n        cudaDevAttrLocalL1CacheSupported = 80\n        cudaDevAttrManagedMemory = 83\n        cudaDevAttrMaxBlockDimX = 2\n        cudaDevAttrMaxBlockDimY = 3\n        cudaDevAttrMaxBlockDimZ = 4\n        cudaDevAttrMaxBlocksPerMultiprocessor = 106\n        cudaDevAttrMaxGridDimX = 5\n        cudaDevAttrMaxGridDimY = 6\n        cudaDevAttrMaxGridDimZ = 7\n        cudaDevAttrMaxPitch = 11\n        cudaDevAttrMaxRegistersPerBlock = 12\n        cudaDevAttrMaxRegistersPerMultiprocessor = 82\n        cudaDevAttrMaxSharedMemoryPerBlock = 8\n        cudaDevAttrMaxSharedMemoryPerBlockOptin = 97\n        cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\n        cudaDevAttrMaxSurface1DLayeredLayers = 62\n        cudaDevAttrMaxSurface1DLayeredWidth = 61\n        cudaDevAttrMaxSurface1DWidth = 55\n        cudaDevAttrMaxSurface2DHeight = 57\n        cudaDevAttrMaxSurface2DLayeredHeight = 64\n        cudaDevAttrMaxSurface2DLayeredLayers = 65\n        cudaDevAttrMaxSurface2DLayeredWidth = 63\n        cudaDevAttrMaxSurface2DWidth = 56\n        cudaDevAttrMaxSurface3DDepth = 60\n        cudaDevAttrMaxSurface3DHeight = 59\n        cudaDevAttrMaxSurface3DWidth = 58\n        cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\n        cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\n        cudaDevAttrMaxSurfaceCubemapWidth = 66\n        cudaDevAttrMaxTexture1DLayeredLayers = 43\n        cudaDevAttrMaxTexture1DLayeredWidth = 42\n        cudaDevAttrMaxTexture1DLinearWidth = 69\n        cudaDevAttrMaxTexture1DMipmappedWidth = 77\n        cudaDevAttrMaxTexture1DWidth = 21\n        cudaDevAttrMaxTexture2DGatherHeight = 46\n        cudaDevAttrMaxTexture2DGatherWidth = 45\n        cudaDevAttrMaxTexture2DHeight = 23\n        cudaDevAttrMaxTexture2DLayeredHeight = 28\n        cudaDevAttrMaxTexture2DLayeredLayers = 29\n        cudaDevAttrMaxTexture2DLayeredWidth = 27\n        cudaDevAttrMaxTexture2DLinearHeight = 71\n        cudaDevAttrMaxTexture2DLinearPitch = 72\n        cudaDevAttrMaxTexture2DLinearWidth = 70\n        cudaDevAttrMaxTexture2DMipmappedHeight = 74\n        cudaDevAttrMaxTexture2DMipmappedWidth = 73\n        cudaDevAttrMaxTexture2DWidth = 22\n        cudaDevAttrMaxTexture3DDepth = 26\n        cudaDevAttrMaxTexture3DDepthAlt = 49\n        cudaDevAttrMaxTexture3DHeight = 25\n        cudaDevAttrMaxTexture3DHeightAlt = 48\n        cudaDevAttrMaxTexture3DWidth = 24\n        cudaDevAttrMaxTexture3DWidthAlt = 47\n        cudaDevAttrMaxTextureCubemapLayeredLayers = 54\n        cudaDevAttrMaxTextureCubemapLayeredWidth = 53\n        cudaDevAttrMaxTextureCubemapWidth = 52\n        cudaDevAttrMaxThreadsPerBlock = 1\n        cudaDevAttrMaxThreadsPerMultiProcessor = 39\n        cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\n        cudaDevAttrMemoryClockRate = 36\n        cudaDevAttrMemoryPoolSupportedHandleTypes = 119\n        cudaDevAttrMemoryPoolsSupported = 115\n        cudaDevAttrMultiGpuBoardGroupID = 85\n        cudaDevAttrMultiProcessorCount = 16\n        cudaDevAttrPageableMemoryAccess = 88\n        cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\n        cudaDevAttrPciBusId = 33\n        cudaDevAttrPciDeviceId = 34\n        cudaDevAttrPciDomainId = 50\n        cudaDevAttrReserved92 = 92\n        cudaDevAttrReserved93 = 93\n        cudaDevAttrReserved94 = 94\n        cudaDevAttrReservedSharedMemoryPerBlock = 111\n        cudaDevAttrSingleToDoublePrecisionPerfRatio = 87\n        cudaDevAttrSparseCudaArraySupported = 112\n        cudaDevAttrStreamPrioritiesSupported = 78\n        cudaDevAttrSurfaceAlignment = 30\n        cudaDevAttrTccDriver = 35\n        cudaDevAttrTextureAlignment = 14\n        cudaDevAttrTexturePitchAlignment = 51\n        cudaDevAttrTotalConstantMemory = 9\n        cudaDevAttrUnifiedAddressing = 41\n        cudaDevAttrWarpSize = 10\n        cudaFilterModeLinear = 1\n        cudaFilterModePoint = 0\n        cudaIpcMemLazyEnablePeerAccess = 1\n        cudaLimitDevRuntimePendingLaunchCount = 4\n        cudaLimitDevRuntimeSyncDepth = 3\n        cudaLimitMallocHeapSize = 2\n        cudaLimitMaxL2FetchGranularity = 5\n        cudaLimitPrintfFifoSize = 1\n        cudaLimitStackSize = 0\n        cudaMemAdviseSetAccessedBy = 5\n        cudaMemAdviseSetPreferredLocation = 3\n        cudaMemAdviseSetReadMostly = 1\n        cudaMemAdviseUnsetAccessedBy = 6\n        cudaMemAdviseUnsetPreferredLocation = 4\n        cudaMemAdviseUnsetReadMostly = 2\n        cudaMemAllocationTypePinned = 1\n        cudaMemAttachGlobal = 1\n        cudaMemAttachHost = 2\n        cudaMemAttachSingle = 4\n        cudaMemHandleTypeNone = 0\n        cudaMemHandleTypePosixFileDescriptor = 1\n        cudaMemLocationTypeDevice = 1\n        cudaMemPoolAttrReleaseThreshold = 4\n        cudaMemPoolAttrReservedMemCurrent = 5\n        cudaMemPoolAttrReservedMemHigh = 6\n        cudaMemPoolAttrUsedMemCurrent = 7\n        cudaMemPoolAttrUsedMemHigh = 8\n        cudaMemPoolReuseAllowInternalDependencies = 3\n        cudaMemPoolReuseAllowOpportunistic = 2\n        cudaMemPoolReuseFollowEventDependencies = 1\n        cudaMemoryTypeDevice = 2\n        cudaMemoryTypeHost = 1\n        cudaReadModeElementType = 0\n        cudaReadModeNormalizedFloat = 1\n        cudaResourceTypeArray = 0\n        cudaResourceTypeLinear = 2\n        cudaResourceTypeMipmappedArray = 1\n        cudaResourceTypePitch2D = 3\n        destroySurfaceObject = <built-in function destroySurfaceObject>\n        destroyTextureObject = <built-in function destroyTextureObject>\n        deviceCanAccessPeer = <built-in function deviceCanAccessPeer>\n        deviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\n        deviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\n        deviceGetAttribute = <built-in function deviceGetAttribute>\n        deviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\n        deviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\n        deviceGetLimit = <built-in function deviceGetLimit>\n        deviceGetMemPool = <built-in function deviceGetMemPool>\n        deviceGetPCIBusId = <built-in function deviceGetPCIBusId>\n        deviceSetLimit = <built-in function deviceSetLimit>\n        deviceSetMemPool = <built-in function deviceSetMemPool>\n        deviceSynchronize = <built-in function deviceSynchronize>\n        driverGetVersion = <built-in function driverGetVersion>\n        eventBlockingSync = 1\n        eventCreate = <built-in function eventCreate>\n        eventCreateWithFlags = <built-in function eventCreateWithFlags>\n        eventDefault = 0\n        eventDestroy = <built-in function eventDestroy>\n        eventDisableTiming = 2\n        eventElapsedTime = <built-in function eventElapsedTime>\n        eventInterprocess = 4\n        eventQuery = <built-in function eventQuery>\n        eventRecord = <built-in function eventRecord>\n        eventSynchronize = <built-in function eventSynchronize>\n        free       = <built-in function free>\n        freeArray  = <built-in function freeArray>\n        freeAsync  = <built-in function freeAsync>\n        freeHost   = <built-in function freeHost>\n        getDevice  = <built-in function getDevice>\n        getDeviceCount = <built-in function getDeviceCount>\n        getDeviceProperties = <built-in function getDeviceProperties>\n        graphDestroy = <built-in function graphDestroy>\n        graphExecDestroy = <built-in function graphExecDestroy>\n        graphInstantiate = <built-in function graphInstantiate>\n        graphLaunch = <built-in function graphLaunch>\n        graphUpload = <built-in function graphUpload>\n        hostAlloc  = <built-in function hostAlloc>\n        hostAllocDefault = 0\n        hostAllocMapped = 2\n        hostAllocPortable = 1\n        hostAllocWriteCombined = 4\n        hostRegister = <built-in function hostRegister>\n        hostUnregister = <built-in function hostUnregister>\n        ipcCloseMemHandle = <built-in function ipcCloseMemHandle>\n        ipcGetEventHandle = <built-in function ipcGetEventHandle>\n        ipcGetMemHandle = <built-in function ipcGetMemHandle>\n        ipcOpenEventHandle = <built-in function ipcOpenEventHandle>\n        ipcOpenMemHandle = <built-in function ipcOpenMemHandle>\n        is_hip     = False\n        launchHostFunc = <built-in function launchHostFunc>\n        malloc     = <built-in function malloc>\n        malloc3DArray = <built-in function malloc3DArray>\n        mallocArray = <built-in function mallocArray>\n        mallocAsync = <built-in function mallocAsync>\n        mallocFromPoolAsync = <built-in function mallocFromPoolAsync>\n        mallocManaged = <built-in function mallocManaged>\n        memAdvise  = <built-in function memAdvise>\n        memGetInfo = <built-in function memGetInfo>\n        memPoolCreate = <built-in function memPoolCreate>\n        memPoolDestroy = <built-in function memPoolDestroy>\n        memPoolGetAttribute = <built-in function memPoolGetAttribute>\n        memPoolSetAttribute = <built-in function memPoolSetAttribute>\n        memPoolTrimTo = <built-in function memPoolTrimTo>\n        memPrefetchAsync = <built-in function memPrefetchAsync>\n        memcpy     = <built-in function memcpy>\n        memcpy2D   = <built-in function memcpy2D>\n        memcpy2DAsync = <built-in function memcpy2DAsync>\n        memcpy2DFromArray = <built-in function memcpy2DFromArray>\n        memcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\n        memcpy2DToArray = <built-in function memcpy2DToArray>\n        memcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\n        memcpy3D   = <built-in function memcpy3D>\n        memcpy3DAsync = <built-in function memcpy3DAsync>\n        memcpyAsync = <built-in function memcpyAsync>\n        memcpyDefault = 4\n        memcpyDeviceToDevice = 3\n        memcpyDeviceToHost = 2\n        memcpyHostToDevice = 1\n        memcpyHostToHost = 0\n        memcpyPeer = <built-in function memcpyPeer>\n        memcpyPeerAsync = <built-in function memcpyPeerAsync>\n        memoryTypeDevice = 2\n        memoryTypeHost = 1\n        memoryTypeManaged = 3\n        memoryTypeUnregistered = 0\n        memset     = <built-in function memset>\n        memsetAsync = <built-in function memsetAsync>\n        pointerGetAttributes = <built-in function pointerGetAttributes>\n        runtimeGetVersion = <built-in function runtimeGetVersion>\n        setDevice  = <built-in function setDevice>\n        streamAddCallback = <built-in function streamAddCallback>\n        streamBeginCapture = <built-in function streamBeginCapture>\n        streamCaptureModeGlobal = 0\n        streamCaptureModeRelaxed = 2\n        streamCaptureModeThreadLocal = 1\n        streamCaptureStatusActive = 1\n        streamCaptureStatusInvalidated = 2\n        streamCaptureStatusNone = 0\n        streamCreate = <built-in function streamCreate>\n        streamCreateWithFlags = <built-in function streamCreateWithFlags>\n        streamDefault = 0\n        streamDestroy = <built-in function streamDestroy>\n        streamEndCapture = <built-in function streamEndCapture>\n        streamIsCapturing = <built-in function streamIsCapturing>\n        streamLegacy = 1\n        streamNonBlocking = 1\n        streamPerThread = 2\n        streamQuery = <built-in function streamQuery>\n        streamSynchronize = <built-in function streamSynchronize>\n        streamWaitEvent = <built-in function streamWaitEvent>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   cupy_backends.cuda.api.runtime.CUDARuntimeError: cudaErrorNoDevice: no CUDA-capable device is detected\n\nCUDARuntimeError = <class 'cupy_backends.cuda.api.runtime.CUDARuntimeError'>\nCUDA_C_16F = 6\nCUDA_C_32F = 4\nCUDA_C_64F = 5\nCUDA_C_8I  = 7\nCUDA_C_8U  = 9\nCUDA_R_16F = 2\nCUDA_R_32F = 0\nCUDA_R_64F = 1\nCUDA_R_8I  = 3\nCUDA_R_8U  = 8\nMemPoolProps = <class 'cupy_backends.cuda.api.runtime.MemPoolProps'>\nPointerAttributes = <class 'cupy_backends.cuda.api.runtime.PointerAttributes'>\n_ThreadLocal = <class 'cupy_backends.cuda.api.runtime._ThreadLocal'>\n__builtins__ = <builtins>\n__doc__    = ('Thin wrapper of CUDA Runtime API.\\n'\n '\\n'\n 'There are four differences compared to the original C API.\\n'\n '\\n'\n '1. Not all functions are ported.\\n'\n '2. Errors are translated into CUDARuntimeError exceptions.\\n'\n \"3. The 'cuda' prefix of each API is omitted and the next character is set \"\n 'to\\n'\n '   lower case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n__file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n__loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f941ec77610>\n__name__   = 'cupy_backends.cuda.api.runtime'\n__package__ = 'cupy_backends.cuda.api'\n__pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77f90>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f941ec88b10>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f941ec77cf0>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77d20>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88cc0>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88b40>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f941ec88cf0>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f941ec88b70>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f941ec77c90>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f941ec77cc0>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f941ec77f30>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77f60>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f941ec77de0>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f941ec77e10>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f941ec88630>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f941ec77fc0>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f941ec88660>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77e40>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88030>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88690>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f941ec77ed0>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77d50>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f941ec77c30>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f941ec77c60>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f941ec77bd0>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f941ec77ba0>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f941ec77c00>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f941ec889c0>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec889f0>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88a20>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88a50>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88a80>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88ab0>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88ae0>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88210>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88270>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec882a0>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88240>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f941ec88ba0>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77db0>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77e70>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77f00>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f941ec88bd0>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f941ec88c00>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88d20>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88d50>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88d80>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88db0>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88de0>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec88180>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec881b0>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec881e0>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec888a0>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f941ec88c30>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f941ec88c90>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f941ec88c60>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88060>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f941ec880c0>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f941ec880f0>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88120>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88150>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f941ec88090>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f941ec885d0>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f941ec882d0>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f941ec886c0>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec886f0>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88750>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f941ec88780>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88720>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec885a0>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88300>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f941ec883c0>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec883f0>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88420>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88450>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f941ec88480>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec884b0>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec884e0>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88510>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88330>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88360>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88390>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f941ec88540>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88570>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88600>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f941ec77d80>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f941ec77ea0>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f941ec88870>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f941ec88930>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f941ec887b0>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f941ec887e0>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88810>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88960>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88990>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec888d0>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f941ec88840>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f941ec88900>}\n__pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n__pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n__pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n__spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f941ec77610>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n__test__   = {}\n_deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n_export_enum = <built-in function _export_enum>\n_threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\ncheck_status = <built-in function check_status>\ncreateSurfaceObject = <built-in function createSurfaceObject>\ncreateTextureObject = <built-in function createTextureObject>\ncudaAddressModeBorder = 3\ncudaAddressModeClamp = 1\ncudaAddressModeMirror = 2\ncudaAddressModeWrap = 0\ncudaArrayDefault = 0\ncudaArraySurfaceLoadStore = 2\ncudaChannelFormatKindFloat = 2\ncudaChannelFormatKindNone = 3\ncudaChannelFormatKindSigned = 0\ncudaChannelFormatKindUnsigned = 1\ncudaDevAttrAsyncEngineCount = 40\ncudaDevAttrCanFlushRemoteWrites = 98\ncudaDevAttrCanMapHostMemory = 19\ncudaDevAttrCanUseHostPointerForRegisteredMem = 91\ncudaDevAttrClockRate = 13\ncudaDevAttrComputeMode = 20\ncudaDevAttrComputePreemptionSupported = 90\ncudaDevAttrConcurrentKernels = 31\ncudaDevAttrConcurrentManagedAccess = 89\ncudaDevAttrCooperativeLaunch = 95\ncudaDevAttrCooperativeMultiDeviceLaunch = 96\ncudaDevAttrDirectManagedMemAccessFromHost = 101\ncudaDevAttrEccEnabled = 32\ncudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\ncudaDevAttrGPUDirectRDMASupported = 116\ncudaDevAttrGPUDirectRDMAWritesOrdering = 118\ncudaDevAttrGlobalL1CacheSupported = 79\ncudaDevAttrGlobalMemoryBusWidth = 37\ncudaDevAttrGpuOverlap = 15\ncudaDevAttrHostNativeAtomicSupported = 86\ncudaDevAttrHostRegisterReadOnlySupported = 113\ncudaDevAttrHostRegisterSupported = 99\ncudaDevAttrIntegrated = 18\ncudaDevAttrIsMultiGpuBoard = 84\ncudaDevAttrKernelExecTimeout = 17\ncudaDevAttrL2CacheSize = 38\ncudaDevAttrLocalL1CacheSupported = 80\ncudaDevAttrManagedMemory = 83\ncudaDevAttrMaxBlockDimX = 2\ncudaDevAttrMaxBlockDimY = 3\ncudaDevAttrMaxBlockDimZ = 4\ncudaDevAttrMaxBlocksPerMultiprocessor = 106\ncudaDevAttrMaxGridDimX = 5\ncudaDevAttrMaxGridDimY = 6\ncudaDevAttrMaxGridDimZ = 7\ncudaDevAttrMaxPitch = 11\ncudaDevAttrMaxRegistersPerBlock = 12\ncudaDevAttrMaxRegistersPerMultiprocessor = 82\ncudaDevAttrMaxSharedMemoryPerBlock = 8\ncudaDevAttrMaxSharedMemoryPerBlockOptin = 97\ncudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\ncudaDevAttrMaxSurface1DLayeredLayers = 62\ncudaDevAttrMaxSurface1DLayeredWidth = 61\ncudaDevAttrMaxSurface1DWidth = 55\ncudaDevAttrMaxSurface2DHeight = 57\ncudaDevAttrMaxSurface2DLayeredHeight = 64\ncudaDevAttrMaxSurface2DLayeredLayers = 65\ncudaDevAttrMaxSurface2DLayeredWidth = 63\ncudaDevAttrMaxSurface2DWidth = 56\ncudaDevAttrMaxSurface3DDepth = 60\ncudaDevAttrMaxSurface3DHeight = 59\ncudaDevAttrMaxSurface3DWidth = 58\ncudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\ncudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\ncudaDevAttrMaxSurfaceCubemapWidth = 66\ncudaDevAttrMaxTexture1DLayeredLayers = 43\ncudaDevAttrMaxTexture1DLayeredWidth = 42\ncudaDevAttrMaxTexture1DLinearWidth = 69\ncudaDevAttrMaxTexture1DMipmappedWidth = 77\ncudaDevAttrMaxTexture1DWidth = 21\ncudaDevAttrMaxTexture2DGatherHeight = 46\ncudaDevAttrMaxTexture2DGatherWidth = 45\ncudaDevAttrMaxTexture2DHeight = 23\ncudaDevAttrMaxTexture2DLayeredHeight = 28\ncudaDevAttrMaxTexture2DLayeredLayers = 29\ncudaDevAttrMaxTexture2DLayeredWidth = 27\ncudaDevAttrMaxTexture2DLinearHeight = 71\ncudaDevAttrMaxTexture2DLinearPitch = 72\ncudaDevAttrMaxTexture2DLinearWidth = 70\ncudaDevAttrMaxTexture2DMipmappedHeight = 74\ncudaDevAttrMaxTexture2DMipmappedWidth = 73\ncudaDevAttrMaxTexture2DWidth = 22\ncudaDevAttrMaxTexture3DDepth = 26\ncudaDevAttrMaxTexture3DDepthAlt = 49\ncudaDevAttrMaxTexture3DHeight = 25\ncudaDevAttrMaxTexture3DHeightAlt = 48\ncudaDevAttrMaxTexture3DWidth = 24\ncudaDevAttrMaxTexture3DWidthAlt = 47\ncudaDevAttrMaxTextureCubemapLayeredLayers = 54\ncudaDevAttrMaxTextureCubemapLayeredWidth = 53\ncudaDevAttrMaxTextureCubemapWidth = 52\ncudaDevAttrMaxThreadsPerBlock = 1\ncudaDevAttrMaxThreadsPerMultiProcessor = 39\ncudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\ncudaDevAttrMemoryClockRate = 36\ncudaDevAttrMemoryPoolSupportedHandleTypes = 119\ncudaDevAttrMemoryPoolsSupported = 115\ncudaDevAttrMultiGpuBoardGroupID = 85\ncudaDevAttrMultiProcessorCount = 16\ncudaDevAttrPageableMemoryAccess = 88\ncudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\ncudaDevAttrPciBusId = 33\ncudaDevAttrPciDeviceId = 34\ncudaDevAttrPciDomainId = 50\ncudaDevAttrReserved92 = 92\ncudaDevAttrReserved93 = 93\ncudaDevAttrReserved94 = 94\ncudaDevAttrReservedSharedMemoryPerBlock = 111\ncudaDevAttrSingleToDoublePrecisionPerfRatio = 87\ncudaDevAttrSparseCudaArraySupported = 112\ncudaDevAttrStreamPrioritiesSupported = 78\ncudaDevAttrSurfaceAlignment = 30\ncudaDevAttrTccDriver = 35\ncudaDevAttrTextureAlignment = 14\ncudaDevAttrTexturePitchAlignment = 51\ncudaDevAttrTotalConstantMemory = 9\ncudaDevAttrUnifiedAddressing = 41\ncudaDevAttrWarpSize = 10\ncudaFilterModeLinear = 1\ncudaFilterModePoint = 0\ncudaIpcMemLazyEnablePeerAccess = 1\ncudaLimitDevRuntimePendingLaunchCount = 4\ncudaLimitDevRuntimeSyncDepth = 3\ncudaLimitMallocHeapSize = 2\ncudaLimitMaxL2FetchGranularity = 5\ncudaLimitPrintfFifoSize = 1\ncudaLimitStackSize = 0\ncudaMemAdviseSetAccessedBy = 5\ncudaMemAdviseSetPreferredLocation = 3\ncudaMemAdviseSetReadMostly = 1\ncudaMemAdviseUnsetAccessedBy = 6\ncudaMemAdviseUnsetPreferredLocation = 4\ncudaMemAdviseUnsetReadMostly = 2\ncudaMemAllocationTypePinned = 1\ncudaMemAttachGlobal = 1\ncudaMemAttachHost = 2\ncudaMemAttachSingle = 4\ncudaMemHandleTypeNone = 0\ncudaMemHandleTypePosixFileDescriptor = 1\ncudaMemLocationTypeDevice = 1\ncudaMemPoolAttrReleaseThreshold = 4\ncudaMemPoolAttrReservedMemCurrent = 5\ncudaMemPoolAttrReservedMemHigh = 6\ncudaMemPoolAttrUsedMemCurrent = 7\ncudaMemPoolAttrUsedMemHigh = 8\ncudaMemPoolReuseAllowInternalDependencies = 3\ncudaMemPoolReuseAllowOpportunistic = 2\ncudaMemPoolReuseFollowEventDependencies = 1\ncudaMemoryTypeDevice = 2\ncudaMemoryTypeHost = 1\ncudaReadModeElementType = 0\ncudaReadModeNormalizedFloat = 1\ncudaResourceTypeArray = 0\ncudaResourceTypeLinear = 2\ncudaResourceTypeMipmappedArray = 1\ncudaResourceTypePitch2D = 3\ndestroySurfaceObject = <built-in function destroySurfaceObject>\ndestroyTextureObject = <built-in function destroyTextureObject>\ndeviceCanAccessPeer = <built-in function deviceCanAccessPeer>\ndeviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\ndeviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\ndeviceGetAttribute = <built-in function deviceGetAttribute>\ndeviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\ndeviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\ndeviceGetLimit = <built-in function deviceGetLimit>\ndeviceGetMemPool = <built-in function deviceGetMemPool>\ndeviceGetPCIBusId = <built-in function deviceGetPCIBusId>\ndeviceSetLimit = <built-in function deviceSetLimit>\ndeviceSetMemPool = <built-in function deviceSetMemPool>\ndeviceSynchronize = <built-in function deviceSynchronize>\ndriverGetVersion = <built-in function driverGetVersion>\neventBlockingSync = 1\neventCreate = <built-in function eventCreate>\neventCreateWithFlags = <built-in function eventCreateWithFlags>\neventDefault = 0\neventDestroy = <built-in function eventDestroy>\neventDisableTiming = 2\neventElapsedTime = <built-in function eventElapsedTime>\neventInterprocess = 4\neventQuery = <built-in function eventQuery>\neventRecord = <built-in function eventRecord>\neventSynchronize = <built-in function eventSynchronize>\nfree       = <built-in function free>\nfreeArray  = <built-in function freeArray>\nfreeAsync  = <built-in function freeAsync>\nfreeHost   = <built-in function freeHost>\ngetDevice  = <built-in function getDevice>\ngetDeviceCount = <built-in function getDeviceCount>\ngetDeviceProperties = <built-in function getDeviceProperties>\ngraphDestroy = <built-in function graphDestroy>\ngraphExecDestroy = <built-in function graphExecDestroy>\ngraphInstantiate = <built-in function graphInstantiate>\ngraphLaunch = <built-in function graphLaunch>\ngraphUpload = <built-in function graphUpload>\nhostAlloc  = <built-in function hostAlloc>\nhostAllocDefault = 0\nhostAllocMapped = 2\nhostAllocPortable = 1\nhostAllocWriteCombined = 4\nhostRegister = <built-in function hostRegister>\nhostUnregister = <built-in function hostUnregister>\nipcCloseMemHandle = <built-in function ipcCloseMemHandle>\nipcGetEventHandle = <built-in function ipcGetEventHandle>\nipcGetMemHandle = <built-in function ipcGetMemHandle>\nipcOpenEventHandle = <built-in function ipcOpenEventHandle>\nipcOpenMemHandle = <built-in function ipcOpenMemHandle>\nis_hip     = False\nlaunchHostFunc = <built-in function launchHostFunc>\nmalloc     = <built-in function malloc>\nmalloc3DArray = <built-in function malloc3DArray>\nmallocArray = <built-in function mallocArray>\nmallocAsync = <built-in function mallocAsync>\nmallocFromPoolAsync = <built-in function mallocFromPoolAsync>\nmallocManaged = <built-in function mallocManaged>\nmemAdvise  = <built-in function memAdvise>\nmemGetInfo = <built-in function memGetInfo>\nmemPoolCreate = <built-in function memPoolCreate>\nmemPoolDestroy = <built-in function memPoolDestroy>\nmemPoolGetAttribute = <built-in function memPoolGetAttribute>\nmemPoolSetAttribute = <built-in function memPoolSetAttribute>\nmemPoolTrimTo = <built-in function memPoolTrimTo>\nmemPrefetchAsync = <built-in function memPrefetchAsync>\nmemcpy     = <built-in function memcpy>\nmemcpy2D   = <built-in function memcpy2D>\nmemcpy2DAsync = <built-in function memcpy2DAsync>\nmemcpy2DFromArray = <built-in function memcpy2DFromArray>\nmemcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\nmemcpy2DToArray = <built-in function memcpy2DToArray>\nmemcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\nmemcpy3D   = <built-in function memcpy3D>\nmemcpy3DAsync = <built-in function memcpy3DAsync>\nmemcpyAsync = <built-in function memcpyAsync>\nmemcpyDefault = 4\nmemcpyDeviceToDevice = 3\nmemcpyDeviceToHost = 2\nmemcpyHostToDevice = 1\nmemcpyHostToHost = 0\nmemcpyPeer = <built-in function memcpyPeer>\nmemcpyPeerAsync = <built-in function memcpyPeerAsync>\nmemoryTypeDevice = 2\nmemoryTypeHost = 1\nmemoryTypeManaged = 3\nmemoryTypeUnregistered = 0\nmemset     = <built-in function memset>\nmemsetAsync = <built-in function memsetAsync>\npointerGetAttributes = <built-in function pointerGetAttributes>\nruntimeGetVersion = <built-in function runtimeGetVersion>\nsetDevice  = <built-in function setDevice>\nstreamAddCallback = <built-in function streamAddCallback>\nstreamBeginCapture = <built-in function streamBeginCapture>\nstreamCaptureModeGlobal = 0\nstreamCaptureModeRelaxed = 2\nstreamCaptureModeThreadLocal = 1\nstreamCaptureStatusActive = 1\nstreamCaptureStatusInvalidated = 2\nstreamCaptureStatusNone = 0\nstreamCreate = <built-in function streamCreate>\nstreamCreateWithFlags = <built-in function streamCreateWithFlags>\nstreamDefault = 0\nstreamDestroy = <built-in function streamDestroy>\nstreamEndCapture = <built-in function streamEndCapture>\nstreamIsCapturing = <built-in function streamIsCapturing>\nstreamLegacy = 1\nstreamNonBlocking = 1\nstreamPerThread = 2\nstreamQuery = <built-in function streamQuery>\nstreamSynchronize = <built-in function streamSynchronize>\nstreamWaitEvent = <built-in function streamWaitEvent>\n\ncupy_backends/cuda/api/runtime.pyx:144: CUDARuntimeError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================= 1229 failed, 120 skipped in 73.40s (0:01:13) =================\n\n```",
  "closed_at":"2023-11-20T11:16:24Z",
  "comments":0,
  "created_at":"2023-11-17T15:56:03Z",
  "id":1999438868,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws53LQQU",
  "number":2839,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-20T11:16:24Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit 6ec2b071b0a4a987682c36d2208a55169c7d8ae5 with the following pytest output:\n\n```\nwer case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n        __file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n        __loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7fcae036b640>\n        __name__   = 'cupy_backends.cuda.api.runtime'\n        __package__ = 'cupy_backends.cuda.api'\n        __pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bfc0>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7fcae037db40>,\n '_is_hip_environment': <capsule object \"int\" at 0x7fcae036bd20>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bd50>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dcf0>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037db70>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7fcae037dd20>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7fcae037dba0>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7fcae036bcc0>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7fcae036bcf0>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7fcae036bf60>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bf90>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7fcae036be10>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7fcae036be40>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7fcae037d660>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7fcae037d030>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7fcae037d690>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036be70>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d060>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d6c0>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7fcae036bf00>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bd80>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7fcae036bc60>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7fcae036bc90>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7fcae036bc00>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7fcae036bbd0>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7fcae036bc30>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7fcae037d9f0>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037da20>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037da50>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037da80>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dab0>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dae0>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037db10>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d240>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d2a0>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d2d0>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d270>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7fcae037dbd0>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bde0>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bea0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bf30>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7fcae037dc00>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7fcae037dc30>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dd50>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dd80>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037ddb0>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dde0>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037de10>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037d1b0>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037d1e0>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d210>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d8d0>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7fcae037dc60>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7fcae037dcc0>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7fcae037dc90>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d090>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7fcae037d0f0>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7fcae037d120>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d150>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d180>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7fcae037d0c0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7fcae037d600>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7fcae037d300>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7fcae037d6f0>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d720>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d780>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7fcae037d7b0>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d750>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d5d0>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d330>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7fcae037d3f0>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d420>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d450>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d480>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d4b0>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d4e0>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d510>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d540>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d360>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d390>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d3c0>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d570>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d5a0>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d630>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bdb0>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bed0>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7fcae037d8a0>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7fcae037d960>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7fcae037d7e0>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037d810>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d840>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d990>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d9c0>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d900>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d870>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7fcae037d930>}\n        __pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n        __pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n        __pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n        __spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7fcae036b640>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n        __test__   = {}\n        _deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n        _export_enum = <built-in function _export_enum>\n        _threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\n        check_status = <built-in function check_status>\n        createSurfaceObject = <built-in function createSurfaceObject>\n        createTextureObject = <built-in function createTextureObject>\n        cudaAddressModeBorder = 3\n        cudaAddressModeClamp = 1\n        cudaAddressModeMirror = 2\n        cudaAddressModeWrap = 0\n        cudaArrayDefault = 0\n        cudaArraySurfaceLoadStore = 2\n        cudaChannelFormatKindFloat = 2\n        cudaChannelFormatKindNone = 3\n        cudaChannelFormatKindSigned = 0\n        cudaChannelFormatKindUnsigned = 1\n        cudaDevAttrAsyncEngineCount = 40\n        cudaDevAttrCanFlushRemoteWrites = 98\n        cudaDevAttrCanMapHostMemory = 19\n        cudaDevAttrCanUseHostPointerForRegisteredMem = 91\n        cudaDevAttrClockRate = 13\n        cudaDevAttrComputeMode = 20\n        cudaDevAttrComputePreemptionSupported = 90\n        cudaDevAttrConcurrentKernels = 31\n        cudaDevAttrConcurrentManagedAccess = 89\n        cudaDevAttrCooperativeLaunch = 95\n        cudaDevAttrCooperativeMultiDeviceLaunch = 96\n        cudaDevAttrDirectManagedMemAccessFromHost = 101\n        cudaDevAttrEccEnabled = 32\n        cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\n        cudaDevAttrGPUDirectRDMASupported = 116\n        cudaDevAttrGPUDirectRDMAWritesOrdering = 118\n        cudaDevAttrGlobalL1CacheSupported = 79\n        cudaDevAttrGlobalMemoryBusWidth = 37\n        cudaDevAttrGpuOverlap = 15\n        cudaDevAttrHostNativeAtomicSupported = 86\n        cudaDevAttrHostRegisterReadOnlySupported = 113\n        cudaDevAttrHostRegisterSupported = 99\n        cudaDevAttrIntegrated = 18\n        cudaDevAttrIsMultiGpuBoard = 84\n        cudaDevAttrKernelExecTimeout = 17\n        cudaDevAttrL2CacheSize = 38\n        cudaDevAttrLocalL1CacheSupported = 80\n        cudaDevAttrManagedMemory = 83\n        cudaDevAttrMaxBlockDimX = 2\n        cudaDevAttrMaxBlockDimY = 3\n        cudaDevAttrMaxBlockDimZ = 4\n        cudaDevAttrMaxBlocksPerMultiprocessor = 106\n        cudaDevAttrMaxGridDimX = 5\n        cudaDevAttrMaxGridDimY = 6\n        cudaDevAttrMaxGridDimZ = 7\n        cudaDevAttrMaxPitch = 11\n        cudaDevAttrMaxRegistersPerBlock = 12\n        cudaDevAttrMaxRegistersPerMultiprocessor = 82\n        cudaDevAttrMaxSharedMemoryPerBlock = 8\n        cudaDevAttrMaxSharedMemoryPerBlockOptin = 97\n        cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\n        cudaDevAttrMaxSurface1DLayeredLayers = 62\n        cudaDevAttrMaxSurface1DLayeredWidth = 61\n        cudaDevAttrMaxSurface1DWidth = 55\n        cudaDevAttrMaxSurface2DHeight = 57\n        cudaDevAttrMaxSurface2DLayeredHeight = 64\n        cudaDevAttrMaxSurface2DLayeredLayers = 65\n        cudaDevAttrMaxSurface2DLayeredWidth = 63\n        cudaDevAttrMaxSurface2DWidth = 56\n        cudaDevAttrMaxSurface3DDepth = 60\n        cudaDevAttrMaxSurface3DHeight = 59\n        cudaDevAttrMaxSurface3DWidth = 58\n        cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\n        cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\n        cudaDevAttrMaxSurfaceCubemapWidth = 66\n        cudaDevAttrMaxTexture1DLayeredLayers = 43\n        cudaDevAttrMaxTexture1DLayeredWidth = 42\n        cudaDevAttrMaxTexture1DLinearWidth = 69\n        cudaDevAttrMaxTexture1DMipmappedWidth = 77\n        cudaDevAttrMaxTexture1DWidth = 21\n        cudaDevAttrMaxTexture2DGatherHeight = 46\n        cudaDevAttrMaxTexture2DGatherWidth = 45\n        cudaDevAttrMaxTexture2DHeight = 23\n        cudaDevAttrMaxTexture2DLayeredHeight = 28\n        cudaDevAttrMaxTexture2DLayeredLayers = 29\n        cudaDevAttrMaxTexture2DLayeredWidth = 27\n        cudaDevAttrMaxTexture2DLinearHeight = 71\n        cudaDevAttrMaxTexture2DLinearPitch = 72\n        cudaDevAttrMaxTexture2DLinearWidth = 70\n        cudaDevAttrMaxTexture2DMipmappedHeight = 74\n        cudaDevAttrMaxTexture2DMipmappedWidth = 73\n        cudaDevAttrMaxTexture2DWidth = 22\n        cudaDevAttrMaxTexture3DDepth = 26\n        cudaDevAttrMaxTexture3DDepthAlt = 49\n        cudaDevAttrMaxTexture3DHeight = 25\n        cudaDevAttrMaxTexture3DHeightAlt = 48\n        cudaDevAttrMaxTexture3DWidth = 24\n        cudaDevAttrMaxTexture3DWidthAlt = 47\n        cudaDevAttrMaxTextureCubemapLayeredLayers = 54\n        cudaDevAttrMaxTextureCubemapLayeredWidth = 53\n        cudaDevAttrMaxTextureCubemapWidth = 52\n        cudaDevAttrMaxThreadsPerBlock = 1\n        cudaDevAttrMaxThreadsPerMultiProcessor = 39\n        cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\n        cudaDevAttrMemoryClockRate = 36\n        cudaDevAttrMemoryPoolSupportedHandleTypes = 119\n        cudaDevAttrMemoryPoolsSupported = 115\n        cudaDevAttrMultiGpuBoardGroupID = 85\n        cudaDevAttrMultiProcessorCount = 16\n        cudaDevAttrPageableMemoryAccess = 88\n        cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\n        cudaDevAttrPciBusId = 33\n        cudaDevAttrPciDeviceId = 34\n        cudaDevAttrPciDomainId = 50\n        cudaDevAttrReserved92 = 92\n        cudaDevAttrReserved93 = 93\n        cudaDevAttrReserved94 = 94\n        cudaDevAttrReservedSharedMemoryPerBlock = 111\n        cudaDevAttrSingleToDoublePrecisionPerfRatio = 87\n        cudaDevAttrSparseCudaArraySupported = 112\n        cudaDevAttrStreamPrioritiesSupported = 78\n        cudaDevAttrSurfaceAlignment = 30\n        cudaDevAttrTccDriver = 35\n        cudaDevAttrTextureAlignment = 14\n        cudaDevAttrTexturePitchAlignment = 51\n        cudaDevAttrTotalConstantMemory = 9\n        cudaDevAttrUnifiedAddressing = 41\n        cudaDevAttrWarpSize = 10\n        cudaFilterModeLinear = 1\n        cudaFilterModePoint = 0\n        cudaIpcMemLazyEnablePeerAccess = 1\n        cudaLimitDevRuntimePendingLaunchCount = 4\n        cudaLimitDevRuntimeSyncDepth = 3\n        cudaLimitMallocHeapSize = 2\n        cudaLimitMaxL2FetchGranularity = 5\n        cudaLimitPrintfFifoSize = 1\n        cudaLimitStackSize = 0\n        cudaMemAdviseSetAccessedBy = 5\n        cudaMemAdviseSetPreferredLocation = 3\n        cudaMemAdviseSetReadMostly = 1\n        cudaMemAdviseUnsetAccessedBy = 6\n        cudaMemAdviseUnsetPreferredLocation = 4\n        cudaMemAdviseUnsetReadMostly = 2\n        cudaMemAllocationTypePinned = 1\n        cudaMemAttachGlobal = 1\n        cudaMemAttachHost = 2\n        cudaMemAttachSingle = 4\n        cudaMemHandleTypeNone = 0\n        cudaMemHandleTypePosixFileDescriptor = 1\n        cudaMemLocationTypeDevice = 1\n        cudaMemPoolAttrReleaseThreshold = 4\n        cudaMemPoolAttrReservedMemCurrent = 5\n        cudaMemPoolAttrReservedMemHigh = 6\n        cudaMemPoolAttrUsedMemCurrent = 7\n        cudaMemPoolAttrUsedMemHigh = 8\n        cudaMemPoolReuseAllowInternalDependencies = 3\n        cudaMemPoolReuseAllowOpportunistic = 2\n        cudaMemPoolReuseFollowEventDependencies = 1\n        cudaMemoryTypeDevice = 2\n        cudaMemoryTypeHost = 1\n        cudaReadModeElementType = 0\n        cudaReadModeNormalizedFloat = 1\n        cudaResourceTypeArray = 0\n        cudaResourceTypeLinear = 2\n        cudaResourceTypeMipmappedArray = 1\n        cudaResourceTypePitch2D = 3\n        destroySurfaceObject = <built-in function destroySurfaceObject>\n        destroyTextureObject = <built-in function destroyTextureObject>\n        deviceCanAccessPeer = <built-in function deviceCanAccessPeer>\n        deviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\n        deviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\n        deviceGetAttribute = <built-in function deviceGetAttribute>\n        deviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\n        deviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\n        deviceGetLimit = <built-in function deviceGetLimit>\n        deviceGetMemPool = <built-in function deviceGetMemPool>\n        deviceGetPCIBusId = <built-in function deviceGetPCIBusId>\n        deviceSetLimit = <built-in function deviceSetLimit>\n        deviceSetMemPool = <built-in function deviceSetMemPool>\n        deviceSynchronize = <built-in function deviceSynchronize>\n        driverGetVersion = <built-in function driverGetVersion>\n        eventBlockingSync = 1\n        eventCreate = <built-in function eventCreate>\n        eventCreateWithFlags = <built-in function eventCreateWithFlags>\n        eventDefault = 0\n        eventDestroy = <built-in function eventDestroy>\n        eventDisableTiming = 2\n        eventElapsedTime = <built-in function eventElapsedTime>\n        eventInterprocess = 4\n        eventQuery = <built-in function eventQuery>\n        eventRecord = <built-in function eventRecord>\n        eventSynchronize = <built-in function eventSynchronize>\n        free       = <built-in function free>\n        freeArray  = <built-in function freeArray>\n        freeAsync  = <built-in function freeAsync>\n        freeHost   = <built-in function freeHost>\n        getDevice  = <built-in function getDevice>\n        getDeviceCount = <built-in function getDeviceCount>\n        getDeviceProperties = <built-in function getDeviceProperties>\n        graphDestroy = <built-in function graphDestroy>\n        graphExecDestroy = <built-in function graphExecDestroy>\n        graphInstantiate = <built-in function graphInstantiate>\n        graphLaunch = <built-in function graphLaunch>\n        graphUpload = <built-in function graphUpload>\n        hostAlloc  = <built-in function hostAlloc>\n        hostAllocDefault = 0\n        hostAllocMapped = 2\n        hostAllocPortable = 1\n        hostAllocWriteCombined = 4\n        hostRegister = <built-in function hostRegister>\n        hostUnregister = <built-in function hostUnregister>\n        ipcCloseMemHandle = <built-in function ipcCloseMemHandle>\n        ipcGetEventHandle = <built-in function ipcGetEventHandle>\n        ipcGetMemHandle = <built-in function ipcGetMemHandle>\n        ipcOpenEventHandle = <built-in function ipcOpenEventHandle>\n        ipcOpenMemHandle = <built-in function ipcOpenMemHandle>\n        is_hip     = False\n        launchHostFunc = <built-in function launchHostFunc>\n        malloc     = <built-in function malloc>\n        malloc3DArray = <built-in function malloc3DArray>\n        mallocArray = <built-in function mallocArray>\n        mallocAsync = <built-in function mallocAsync>\n        mallocFromPoolAsync = <built-in function mallocFromPoolAsync>\n        mallocManaged = <built-in function mallocManaged>\n        memAdvise  = <built-in function memAdvise>\n        memGetInfo = <built-in function memGetInfo>\n        memPoolCreate = <built-in function memPoolCreate>\n        memPoolDestroy = <built-in function memPoolDestroy>\n        memPoolGetAttribute = <built-in function memPoolGetAttribute>\n        memPoolSetAttribute = <built-in function memPoolSetAttribute>\n        memPoolTrimTo = <built-in function memPoolTrimTo>\n        memPrefetchAsync = <built-in function memPrefetchAsync>\n        memcpy     = <built-in function memcpy>\n        memcpy2D   = <built-in function memcpy2D>\n        memcpy2DAsync = <built-in function memcpy2DAsync>\n        memcpy2DFromArray = <built-in function memcpy2DFromArray>\n        memcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\n        memcpy2DToArray = <built-in function memcpy2DToArray>\n        memcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\n        memcpy3D   = <built-in function memcpy3D>\n        memcpy3DAsync = <built-in function memcpy3DAsync>\n        memcpyAsync = <built-in function memcpyAsync>\n        memcpyDefault = 4\n        memcpyDeviceToDevice = 3\n        memcpyDeviceToHost = 2\n        memcpyHostToDevice = 1\n        memcpyHostToHost = 0\n        memcpyPeer = <built-in function memcpyPeer>\n        memcpyPeerAsync = <built-in function memcpyPeerAsync>\n        memoryTypeDevice = 2\n        memoryTypeHost = 1\n        memoryTypeManaged = 3\n        memoryTypeUnregistered = 0\n        memset     = <built-in function memset>\n        memsetAsync = <built-in function memsetAsync>\n        pointerGetAttributes = <built-in function pointerGetAttributes>\n        runtimeGetVersion = <built-in function runtimeGetVersion>\n        setDevice  = <built-in function setDevice>\n        streamAddCallback = <built-in function streamAddCallback>\n        streamBeginCapture = <built-in function streamBeginCapture>\n        streamCaptureModeGlobal = 0\n        streamCaptureModeRelaxed = 2\n        streamCaptureModeThreadLocal = 1\n        streamCaptureStatusActive = 1\n        streamCaptureStatusInvalidated = 2\n        streamCaptureStatusNone = 0\n        streamCreate = <built-in function streamCreate>\n        streamCreateWithFlags = <built-in function streamCreateWithFlags>\n        streamDefault = 0\n        streamDestroy = <built-in function streamDestroy>\n        streamEndCapture = <built-in function streamEndCapture>\n        streamIsCapturing = <built-in function streamIsCapturing>\n        streamLegacy = 1\n        streamNonBlocking = 1\n        streamPerThread = 2\n        streamQuery = <built-in function streamQuery>\n        streamSynchronize = <built-in function streamSynchronize>\n        streamWaitEvent = <built-in function streamWaitEvent>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   cupy_backends.cuda.api.runtime.CUDARuntimeError: cudaErrorNoDevice: no CUDA-capable device is detected\n\nCUDARuntimeError = <class 'cupy_backends.cuda.api.runtime.CUDARuntimeError'>\nCUDA_C_16F = 6\nCUDA_C_32F = 4\nCUDA_C_64F = 5\nCUDA_C_8I  = 7\nCUDA_C_8U  = 9\nCUDA_R_16F = 2\nCUDA_R_32F = 0\nCUDA_R_64F = 1\nCUDA_R_8I  = 3\nCUDA_R_8U  = 8\nMemPoolProps = <class 'cupy_backends.cuda.api.runtime.MemPoolProps'>\nPointerAttributes = <class 'cupy_backends.cuda.api.runtime.PointerAttributes'>\n_ThreadLocal = <class 'cupy_backends.cuda.api.runtime._ThreadLocal'>\n__builtins__ = <builtins>\n__doc__    = ('Thin wrapper of CUDA Runtime API.\\n'\n '\\n'\n 'There are four differences compared to the original C API.\\n'\n '\\n'\n '1. Not all functions are ported.\\n'\n '2. Errors are translated into CUDARuntimeError exceptions.\\n'\n \"3. The 'cuda' prefix of each API is omitted and the next character is set \"\n 'to\\n'\n '   lower case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n__file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n__loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7fcae036b640>\n__name__   = 'cupy_backends.cuda.api.runtime'\n__package__ = 'cupy_backends.cuda.api'\n__pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bfc0>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7fcae037db40>,\n '_is_hip_environment': <capsule object \"int\" at 0x7fcae036bd20>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bd50>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dcf0>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037db70>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7fcae037dd20>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7fcae037dba0>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7fcae036bcc0>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7fcae036bcf0>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7fcae036bf60>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bf90>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7fcae036be10>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7fcae036be40>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7fcae037d660>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7fcae037d030>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7fcae037d690>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036be70>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d060>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d6c0>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7fcae036bf00>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bd80>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7fcae036bc60>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7fcae036bc90>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7fcae036bc00>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7fcae036bbd0>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7fcae036bc30>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7fcae037d9f0>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037da20>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037da50>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037da80>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dab0>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dae0>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037db10>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d240>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d2a0>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d2d0>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d270>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7fcae037dbd0>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bde0>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bea0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bf30>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7fcae037dc00>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7fcae037dc30>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dd50>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dd80>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037ddb0>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037dde0>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037de10>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037d1b0>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037d1e0>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d210>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d8d0>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7fcae037dc60>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7fcae037dcc0>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7fcae037dc90>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d090>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7fcae037d0f0>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7fcae037d120>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d150>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d180>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7fcae037d0c0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7fcae037d600>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7fcae037d300>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7fcae037d6f0>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d720>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d780>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7fcae037d7b0>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d750>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d5d0>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d330>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7fcae037d3f0>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d420>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d450>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d480>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7fcae037d4b0>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d4e0>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d510>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d540>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d360>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d390>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d3c0>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7fcae037d570>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d5a0>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d630>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7fcae036bdb0>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7fcae036bed0>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7fcae037d8a0>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7fcae037d960>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7fcae037d7e0>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7fcae037d810>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d840>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d990>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d9c0>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d900>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7fcae037d870>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7fcae037d930>}\n__pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n__pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n__pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n__spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7fcae036b640>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n__test__   = {}\n_deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n_export_enum = <built-in function _export_enum>\n_threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\ncheck_status = <built-in function check_status>\ncreateSurfaceObject = <built-in function createSurfaceObject>\ncreateTextureObject = <built-in function createTextureObject>\ncudaAddressModeBorder = 3\ncudaAddressModeClamp = 1\ncudaAddressModeMirror = 2\ncudaAddressModeWrap = 0\ncudaArrayDefault = 0\ncudaArraySurfaceLoadStore = 2\ncudaChannelFormatKindFloat = 2\ncudaChannelFormatKindNone = 3\ncudaChannelFormatKindSigned = 0\ncudaChannelFormatKindUnsigned = 1\ncudaDevAttrAsyncEngineCount = 40\ncudaDevAttrCanFlushRemoteWrites = 98\ncudaDevAttrCanMapHostMemory = 19\ncudaDevAttrCanUseHostPointerForRegisteredMem = 91\ncudaDevAttrClockRate = 13\ncudaDevAttrComputeMode = 20\ncudaDevAttrComputePreemptionSupported = 90\ncudaDevAttrConcurrentKernels = 31\ncudaDevAttrConcurrentManagedAccess = 89\ncudaDevAttrCooperativeLaunch = 95\ncudaDevAttrCooperativeMultiDeviceLaunch = 96\ncudaDevAttrDirectManagedMemAccessFromHost = 101\ncudaDevAttrEccEnabled = 32\ncudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\ncudaDevAttrGPUDirectRDMASupported = 116\ncudaDevAttrGPUDirectRDMAWritesOrdering = 118\ncudaDevAttrGlobalL1CacheSupported = 79\ncudaDevAttrGlobalMemoryBusWidth = 37\ncudaDevAttrGpuOverlap = 15\ncudaDevAttrHostNativeAtomicSupported = 86\ncudaDevAttrHostRegisterReadOnlySupported = 113\ncudaDevAttrHostRegisterSupported = 99\ncudaDevAttrIntegrated = 18\ncudaDevAttrIsMultiGpuBoard = 84\ncudaDevAttrKernelExecTimeout = 17\ncudaDevAttrL2CacheSize = 38\ncudaDevAttrLocalL1CacheSupported = 80\ncudaDevAttrManagedMemory = 83\ncudaDevAttrMaxBlockDimX = 2\ncudaDevAttrMaxBlockDimY = 3\ncudaDevAttrMaxBlockDimZ = 4\ncudaDevAttrMaxBlocksPerMultiprocessor = 106\ncudaDevAttrMaxGridDimX = 5\ncudaDevAttrMaxGridDimY = 6\ncudaDevAttrMaxGridDimZ = 7\ncudaDevAttrMaxPitch = 11\ncudaDevAttrMaxRegistersPerBlock = 12\ncudaDevAttrMaxRegistersPerMultiprocessor = 82\ncudaDevAttrMaxSharedMemoryPerBlock = 8\ncudaDevAttrMaxSharedMemoryPerBlockOptin = 97\ncudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\ncudaDevAttrMaxSurface1DLayeredLayers = 62\ncudaDevAttrMaxSurface1DLayeredWidth = 61\ncudaDevAttrMaxSurface1DWidth = 55\ncudaDevAttrMaxSurface2DHeight = 57\ncudaDevAttrMaxSurface2DLayeredHeight = 64\ncudaDevAttrMaxSurface2DLayeredLayers = 65\ncudaDevAttrMaxSurface2DLayeredWidth = 63\ncudaDevAttrMaxSurface2DWidth = 56\ncudaDevAttrMaxSurface3DDepth = 60\ncudaDevAttrMaxSurface3DHeight = 59\ncudaDevAttrMaxSurface3DWidth = 58\ncudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\ncudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\ncudaDevAttrMaxSurfaceCubemapWidth = 66\ncudaDevAttrMaxTexture1DLayeredLayers = 43\ncudaDevAttrMaxTexture1DLayeredWidth = 42\ncudaDevAttrMaxTexture1DLinearWidth = 69\ncudaDevAttrMaxTexture1DMipmappedWidth = 77\ncudaDevAttrMaxTexture1DWidth = 21\ncudaDevAttrMaxTexture2DGatherHeight = 46\ncudaDevAttrMaxTexture2DGatherWidth = 45\ncudaDevAttrMaxTexture2DHeight = 23\ncudaDevAttrMaxTexture2DLayeredHeight = 28\ncudaDevAttrMaxTexture2DLayeredLayers = 29\ncudaDevAttrMaxTexture2DLayeredWidth = 27\ncudaDevAttrMaxTexture2DLinearHeight = 71\ncudaDevAttrMaxTexture2DLinearPitch = 72\ncudaDevAttrMaxTexture2DLinearWidth = 70\ncudaDevAttrMaxTexture2DMipmappedHeight = 74\ncudaDevAttrMaxTexture2DMipmappedWidth = 73\ncudaDevAttrMaxTexture2DWidth = 22\ncudaDevAttrMaxTexture3DDepth = 26\ncudaDevAttrMaxTexture3DDepthAlt = 49\ncudaDevAttrMaxTexture3DHeight = 25\ncudaDevAttrMaxTexture3DHeightAlt = 48\ncudaDevAttrMaxTexture3DWidth = 24\ncudaDevAttrMaxTexture3DWidthAlt = 47\ncudaDevAttrMaxTextureCubemapLayeredLayers = 54\ncudaDevAttrMaxTextureCubemapLayeredWidth = 53\ncudaDevAttrMaxTextureCubemapWidth = 52\ncudaDevAttrMaxThreadsPerBlock = 1\ncudaDevAttrMaxThreadsPerMultiProcessor = 39\ncudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\ncudaDevAttrMemoryClockRate = 36\ncudaDevAttrMemoryPoolSupportedHandleTypes = 119\ncudaDevAttrMemoryPoolsSupported = 115\ncudaDevAttrMultiGpuBoardGroupID = 85\ncudaDevAttrMultiProcessorCount = 16\ncudaDevAttrPageableMemoryAccess = 88\ncudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\ncudaDevAttrPciBusId = 33\ncudaDevAttrPciDeviceId = 34\ncudaDevAttrPciDomainId = 50\ncudaDevAttrReserved92 = 92\ncudaDevAttrReserved93 = 93\ncudaDevAttrReserved94 = 94\ncudaDevAttrReservedSharedMemoryPerBlock = 111\ncudaDevAttrSingleToDoublePrecisionPerfRatio = 87\ncudaDevAttrSparseCudaArraySupported = 112\ncudaDevAttrStreamPrioritiesSupported = 78\ncudaDevAttrSurfaceAlignment = 30\ncudaDevAttrTccDriver = 35\ncudaDevAttrTextureAlignment = 14\ncudaDevAttrTexturePitchAlignment = 51\ncudaDevAttrTotalConstantMemory = 9\ncudaDevAttrUnifiedAddressing = 41\ncudaDevAttrWarpSize = 10\ncudaFilterModeLinear = 1\ncudaFilterModePoint = 0\ncudaIpcMemLazyEnablePeerAccess = 1\ncudaLimitDevRuntimePendingLaunchCount = 4\ncudaLimitDevRuntimeSyncDepth = 3\ncudaLimitMallocHeapSize = 2\ncudaLimitMaxL2FetchGranularity = 5\ncudaLimitPrintfFifoSize = 1\ncudaLimitStackSize = 0\ncudaMemAdviseSetAccessedBy = 5\ncudaMemAdviseSetPreferredLocation = 3\ncudaMemAdviseSetReadMostly = 1\ncudaMemAdviseUnsetAccessedBy = 6\ncudaMemAdviseUnsetPreferredLocation = 4\ncudaMemAdviseUnsetReadMostly = 2\ncudaMemAllocationTypePinned = 1\ncudaMemAttachGlobal = 1\ncudaMemAttachHost = 2\ncudaMemAttachSingle = 4\ncudaMemHandleTypeNone = 0\ncudaMemHandleTypePosixFileDescriptor = 1\ncudaMemLocationTypeDevice = 1\ncudaMemPoolAttrReleaseThreshold = 4\ncudaMemPoolAttrReservedMemCurrent = 5\ncudaMemPoolAttrReservedMemHigh = 6\ncudaMemPoolAttrUsedMemCurrent = 7\ncudaMemPoolAttrUsedMemHigh = 8\ncudaMemPoolReuseAllowInternalDependencies = 3\ncudaMemPoolReuseAllowOpportunistic = 2\ncudaMemPoolReuseFollowEventDependencies = 1\ncudaMemoryTypeDevice = 2\ncudaMemoryTypeHost = 1\ncudaReadModeElementType = 0\ncudaReadModeNormalizedFloat = 1\ncudaResourceTypeArray = 0\ncudaResourceTypeLinear = 2\ncudaResourceTypeMipmappedArray = 1\ncudaResourceTypePitch2D = 3\ndestroySurfaceObject = <built-in function destroySurfaceObject>\ndestroyTextureObject = <built-in function destroyTextureObject>\ndeviceCanAccessPeer = <built-in function deviceCanAccessPeer>\ndeviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\ndeviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\ndeviceGetAttribute = <built-in function deviceGetAttribute>\ndeviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\ndeviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\ndeviceGetLimit = <built-in function deviceGetLimit>\ndeviceGetMemPool = <built-in function deviceGetMemPool>\ndeviceGetPCIBusId = <built-in function deviceGetPCIBusId>\ndeviceSetLimit = <built-in function deviceSetLimit>\ndeviceSetMemPool = <built-in function deviceSetMemPool>\ndeviceSynchronize = <built-in function deviceSynchronize>\ndriverGetVersion = <built-in function driverGetVersion>\neventBlockingSync = 1\neventCreate = <built-in function eventCreate>\neventCreateWithFlags = <built-in function eventCreateWithFlags>\neventDefault = 0\neventDestroy = <built-in function eventDestroy>\neventDisableTiming = 2\neventElapsedTime = <built-in function eventElapsedTime>\neventInterprocess = 4\neventQuery = <built-in function eventQuery>\neventRecord = <built-in function eventRecord>\neventSynchronize = <built-in function eventSynchronize>\nfree       = <built-in function free>\nfreeArray  = <built-in function freeArray>\nfreeAsync  = <built-in function freeAsync>\nfreeHost   = <built-in function freeHost>\ngetDevice  = <built-in function getDevice>\ngetDeviceCount = <built-in function getDeviceCount>\ngetDeviceProperties = <built-in function getDeviceProperties>\ngraphDestroy = <built-in function graphDestroy>\ngraphExecDestroy = <built-in function graphExecDestroy>\ngraphInstantiate = <built-in function graphInstantiate>\ngraphLaunch = <built-in function graphLaunch>\ngraphUpload = <built-in function graphUpload>\nhostAlloc  = <built-in function hostAlloc>\nhostAllocDefault = 0\nhostAllocMapped = 2\nhostAllocPortable = 1\nhostAllocWriteCombined = 4\nhostRegister = <built-in function hostRegister>\nhostUnregister = <built-in function hostUnregister>\nipcCloseMemHandle = <built-in function ipcCloseMemHandle>\nipcGetEventHandle = <built-in function ipcGetEventHandle>\nipcGetMemHandle = <built-in function ipcGetMemHandle>\nipcOpenEventHandle = <built-in function ipcOpenEventHandle>\nipcOpenMemHandle = <built-in function ipcOpenMemHandle>\nis_hip     = False\nlaunchHostFunc = <built-in function launchHostFunc>\nmalloc     = <built-in function malloc>\nmalloc3DArray = <built-in function malloc3DArray>\nmallocArray = <built-in function mallocArray>\nmallocAsync = <built-in function mallocAsync>\nmallocFromPoolAsync = <built-in function mallocFromPoolAsync>\nmallocManaged = <built-in function mallocManaged>\nmemAdvise  = <built-in function memAdvise>\nmemGetInfo = <built-in function memGetInfo>\nmemPoolCreate = <built-in function memPoolCreate>\nmemPoolDestroy = <built-in function memPoolDestroy>\nmemPoolGetAttribute = <built-in function memPoolGetAttribute>\nmemPoolSetAttribute = <built-in function memPoolSetAttribute>\nmemPoolTrimTo = <built-in function memPoolTrimTo>\nmemPrefetchAsync = <built-in function memPrefetchAsync>\nmemcpy     = <built-in function memcpy>\nmemcpy2D   = <built-in function memcpy2D>\nmemcpy2DAsync = <built-in function memcpy2DAsync>\nmemcpy2DFromArray = <built-in function memcpy2DFromArray>\nmemcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\nmemcpy2DToArray = <built-in function memcpy2DToArray>\nmemcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\nmemcpy3D   = <built-in function memcpy3D>\nmemcpy3DAsync = <built-in function memcpy3DAsync>\nmemcpyAsync = <built-in function memcpyAsync>\nmemcpyDefault = 4\nmemcpyDeviceToDevice = 3\nmemcpyDeviceToHost = 2\nmemcpyHostToDevice = 1\nmemcpyHostToHost = 0\nmemcpyPeer = <built-in function memcpyPeer>\nmemcpyPeerAsync = <built-in function memcpyPeerAsync>\nmemoryTypeDevice = 2\nmemoryTypeHost = 1\nmemoryTypeManaged = 3\nmemoryTypeUnregistered = 0\nmemset     = <built-in function memset>\nmemsetAsync = <built-in function memsetAsync>\npointerGetAttributes = <built-in function pointerGetAttributes>\nruntimeGetVersion = <built-in function runtimeGetVersion>\nsetDevice  = <built-in function setDevice>\nstreamAddCallback = <built-in function streamAddCallback>\nstreamBeginCapture = <built-in function streamBeginCapture>\nstreamCaptureModeGlobal = 0\nstreamCaptureModeRelaxed = 2\nstreamCaptureModeThreadLocal = 1\nstreamCaptureStatusActive = 1\nstreamCaptureStatusInvalidated = 2\nstreamCaptureStatusNone = 0\nstreamCreate = <built-in function streamCreate>\nstreamCreateWithFlags = <built-in function streamCreateWithFlags>\nstreamDefault = 0\nstreamDestroy = <built-in function streamDestroy>\nstreamEndCapture = <built-in function streamEndCapture>\nstreamIsCapturing = <built-in function streamIsCapturing>\nstreamLegacy = 1\nstreamNonBlocking = 1\nstreamPerThread = 2\nstreamQuery = <built-in function streamQuery>\nstreamSynchronize = <built-in function streamSynchronize>\nstreamWaitEvent = <built-in function streamWaitEvent>\n\ncupy_backends/cuda/api/runtime.pyx:144: CUDARuntimeError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================= 1229 failed, 120 skipped in 73.09s (0:01:13) =================\n\n```",
  "closed_at":"2023-11-20T11:16:19Z",
  "comments":0,
  "created_at":"2023-11-20T10:17:10Z",
  "id":2001842231,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws53UbA3",
  "number":2840,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-20T11:16:19Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"@jpivarski and I have discussed this on-and-off for over a year now.\r\n\r\nPresently, `ak.contents.Content` subclasses re-use code from `ak.forms.Form` subclasses using explicit descriptor lookups. As such, `ak.forms.Form` serves as the implementation for many metadata methods. As we look to grow the set of metadata-only methods, it would be nice to formalise this hierarchy. Benefits include:\r\n- easier type checking\r\n- lower overhead (right now, e.g. `Content.parameter` involves an additional attribute lookup and function call)\r\n\r\n\r\nAs it now seems possible that we'll want an `enforce_form` function, I would like for the ability to implement the `_mergeable_next` protocol at the \"meta\" level, and doing this properly feels more readable (and easier to reason about) to me; we're not fighting the type system by implementing this via inheritance.\r\n",
  "closed_at":"2023-11-20T22:25:03Z",
  "comments":2,
  "created_at":"2023-11-20T18:39:30Z",
  "draft":false,
  "id":2002787051,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5f8QKQ",
  "number":2841,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-20T22:25:03Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: split \"meta\" into `Meta`",
  "updated_at":"2023-11-20T22:25:04Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.5 \u2192 v0.1.6](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.5...v0.1.6)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-11-20T22:27:12Z",
  "comments":1,
  "created_at":"2023-11-20T19:20:56Z",
  "draft":false,
  "id":2002848685,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5f8dud",
  "number":2842,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-20T22:27:12Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-11-20T22:27:13Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The test-runner for the GPU tests failed before hitting pytest.",
  "closed_at":"2023-11-22T13:50:41Z",
  "comments":0,
  "created_at":"2023-11-22T08:37:45Z",
  "id":2005833927,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws53jpjH",
  "number":2844,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Setup Failed",
  "updated_at":"2023-11-22T13:50:41Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit  with the following pytest output:\n\n```\n\n```",
  "closed_at":"2023-11-22T13:50:40Z",
  "comments":0,
  "created_at":"2023-11-22T08:37:46Z",
  "id":2005833970,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws53jpjy",
  "number":2845,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-22T13:50:40Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-11-22T13:59:55Z",
  "comments":0,
  "created_at":"2023-11-22T13:59:47Z",
  "draft":false,
  "id":2006414909,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gIo8q",
  "number":2846,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-22T13:59:55Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: make the CUDA test configuration more resilient at startup",
  "updated_at":"2023-11-22T13:59:56Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [mymindstorm/setup-emsdk](https://github.com/mymindstorm/setup-emsdk) from 12 to 13.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mymindstorm/setup-emsdk/releases\">mymindstorm/setup-emsdk's releases</a>.</em></p>\n<blockquote>\n<h2>Version 13</h2>\n<ul>\n<li>Updated to Node 20</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mymindstorm/setup-emsdk/commit/d233ac12b0102f74ca199f5dad7a4e2c13a8a745\"><code>d233ac1</code></a> v13</li>\n<li><a href=\"https://github.com/mymindstorm/setup-emsdk/commit/1749b22b4047bc1b60f465303db3810171baa984\"><code>1749b22</code></a> npm audit fix + update runtime to node20</li>\n<li>See full diff in <a href=\"https://github.com/mymindstorm/setup-emsdk/compare/v12...v13\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mymindstorm/setup-emsdk&package-manager=github_actions&previous-version=12&new-version=13)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-11-28T21:53:35Z",
  "comments":1,
  "created_at":"2023-11-22T17:06:46Z",
  "draft":false,
  "id":2006769598,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gJ2-7",
  "number":2847,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-28T21:53:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump mymindstorm/setup-emsdk from 12 to 13",
  "updated_at":"2023-11-28T21:53:36Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit bbb78224e06f48e8ac6225f0566bbd294ea6d5e9 with the following pytest output:\n\n```\nwer case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n        __file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n        __loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f99f7dc5820>\n        __name__   = 'cupy_backends.cuda.api.runtime'\n        __package__ = 'cupy_backends.cuda.api'\n        __pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd61e0>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f99f7dd6d20>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f99f7dc5f00>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dc5f30>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ed0>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6d50>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f00>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6d80>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f99f7dc5ea0>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f99f7dc5ed0>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6180>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd61b0>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6030>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f99f7dd6060>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6840>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6210>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6870>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6090>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6240>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd68a0>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f99f7dd6120>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dc5f60>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f99f7dc5e40>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f99f7dc5e70>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f99f7dc5de0>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f99f7dc5db0>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f99f7dc5e10>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f99f7dd6bd0>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c00>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c30>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c60>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c90>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6cc0>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6cf0>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6420>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6480>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd64b0>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6450>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f99f7dd6db0>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dc5fc0>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dd60c0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6150>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f99f7dd6de0>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f99f7dd6e10>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f30>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f60>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f90>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6fc0>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99c0fbe030>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6390>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd63c0>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd63f0>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ab0>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f99f7dd6e40>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f99f7dd6ea0>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f99f7dd6e70>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6270>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f99f7dd62d0>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f99f7dd6300>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6330>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6360>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f99f7dd62a0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd67e0>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f99f7dd64e0>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f99f7dd68d0>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6900>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6960>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f99f7dd6990>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6930>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd67b0>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6510>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f99f7dd65d0>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6600>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6630>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6660>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6690>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd66c0>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd66f0>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6720>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6540>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6570>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd65a0>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6750>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6780>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6810>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dc5f90>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd60f0>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f99f7dd6a80>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f99f7dd6b40>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f99f7dd69c0>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd69f0>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6a20>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6b70>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ba0>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ae0>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6a50>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f99f7dd6b10>}\n        __pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n        __pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n        __pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n        __spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f99f7dc5820>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n        __test__   = {}\n        _deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n        _export_enum = <built-in function _export_enum>\n        _threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\n        check_status = <built-in function check_status>\n        createSurfaceObject = <built-in function createSurfaceObject>\n        createTextureObject = <built-in function createTextureObject>\n        cudaAddressModeBorder = 3\n        cudaAddressModeClamp = 1\n        cudaAddressModeMirror = 2\n        cudaAddressModeWrap = 0\n        cudaArrayDefault = 0\n        cudaArraySurfaceLoadStore = 2\n        cudaChannelFormatKindFloat = 2\n        cudaChannelFormatKindNone = 3\n        cudaChannelFormatKindSigned = 0\n        cudaChannelFormatKindUnsigned = 1\n        cudaDevAttrAsyncEngineCount = 40\n        cudaDevAttrCanFlushRemoteWrites = 98\n        cudaDevAttrCanMapHostMemory = 19\n        cudaDevAttrCanUseHostPointerForRegisteredMem = 91\n        cudaDevAttrClockRate = 13\n        cudaDevAttrComputeMode = 20\n        cudaDevAttrComputePreemptionSupported = 90\n        cudaDevAttrConcurrentKernels = 31\n        cudaDevAttrConcurrentManagedAccess = 89\n        cudaDevAttrCooperativeLaunch = 95\n        cudaDevAttrCooperativeMultiDeviceLaunch = 96\n        cudaDevAttrDirectManagedMemAccessFromHost = 101\n        cudaDevAttrEccEnabled = 32\n        cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\n        cudaDevAttrGPUDirectRDMASupported = 116\n        cudaDevAttrGPUDirectRDMAWritesOrdering = 118\n        cudaDevAttrGlobalL1CacheSupported = 79\n        cudaDevAttrGlobalMemoryBusWidth = 37\n        cudaDevAttrGpuOverlap = 15\n        cudaDevAttrHostNativeAtomicSupported = 86\n        cudaDevAttrHostRegisterReadOnlySupported = 113\n        cudaDevAttrHostRegisterSupported = 99\n        cudaDevAttrIntegrated = 18\n        cudaDevAttrIsMultiGpuBoard = 84\n        cudaDevAttrKernelExecTimeout = 17\n        cudaDevAttrL2CacheSize = 38\n        cudaDevAttrLocalL1CacheSupported = 80\n        cudaDevAttrManagedMemory = 83\n        cudaDevAttrMaxBlockDimX = 2\n        cudaDevAttrMaxBlockDimY = 3\n        cudaDevAttrMaxBlockDimZ = 4\n        cudaDevAttrMaxBlocksPerMultiprocessor = 106\n        cudaDevAttrMaxGridDimX = 5\n        cudaDevAttrMaxGridDimY = 6\n        cudaDevAttrMaxGridDimZ = 7\n        cudaDevAttrMaxPitch = 11\n        cudaDevAttrMaxRegistersPerBlock = 12\n        cudaDevAttrMaxRegistersPerMultiprocessor = 82\n        cudaDevAttrMaxSharedMemoryPerBlock = 8\n        cudaDevAttrMaxSharedMemoryPerBlockOptin = 97\n        cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\n        cudaDevAttrMaxSurface1DLayeredLayers = 62\n        cudaDevAttrMaxSurface1DLayeredWidth = 61\n        cudaDevAttrMaxSurface1DWidth = 55\n        cudaDevAttrMaxSurface2DHeight = 57\n        cudaDevAttrMaxSurface2DLayeredHeight = 64\n        cudaDevAttrMaxSurface2DLayeredLayers = 65\n        cudaDevAttrMaxSurface2DLayeredWidth = 63\n        cudaDevAttrMaxSurface2DWidth = 56\n        cudaDevAttrMaxSurface3DDepth = 60\n        cudaDevAttrMaxSurface3DHeight = 59\n        cudaDevAttrMaxSurface3DWidth = 58\n        cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\n        cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\n        cudaDevAttrMaxSurfaceCubemapWidth = 66\n        cudaDevAttrMaxTexture1DLayeredLayers = 43\n        cudaDevAttrMaxTexture1DLayeredWidth = 42\n        cudaDevAttrMaxTexture1DLinearWidth = 69\n        cudaDevAttrMaxTexture1DMipmappedWidth = 77\n        cudaDevAttrMaxTexture1DWidth = 21\n        cudaDevAttrMaxTexture2DGatherHeight = 46\n        cudaDevAttrMaxTexture2DGatherWidth = 45\n        cudaDevAttrMaxTexture2DHeight = 23\n        cudaDevAttrMaxTexture2DLayeredHeight = 28\n        cudaDevAttrMaxTexture2DLayeredLayers = 29\n        cudaDevAttrMaxTexture2DLayeredWidth = 27\n        cudaDevAttrMaxTexture2DLinearHeight = 71\n        cudaDevAttrMaxTexture2DLinearPitch = 72\n        cudaDevAttrMaxTexture2DLinearWidth = 70\n        cudaDevAttrMaxTexture2DMipmappedHeight = 74\n        cudaDevAttrMaxTexture2DMipmappedWidth = 73\n        cudaDevAttrMaxTexture2DWidth = 22\n        cudaDevAttrMaxTexture3DDepth = 26\n        cudaDevAttrMaxTexture3DDepthAlt = 49\n        cudaDevAttrMaxTexture3DHeight = 25\n        cudaDevAttrMaxTexture3DHeightAlt = 48\n        cudaDevAttrMaxTexture3DWidth = 24\n        cudaDevAttrMaxTexture3DWidthAlt = 47\n        cudaDevAttrMaxTextureCubemapLayeredLayers = 54\n        cudaDevAttrMaxTextureCubemapLayeredWidth = 53\n        cudaDevAttrMaxTextureCubemapWidth = 52\n        cudaDevAttrMaxThreadsPerBlock = 1\n        cudaDevAttrMaxThreadsPerMultiProcessor = 39\n        cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\n        cudaDevAttrMemoryClockRate = 36\n        cudaDevAttrMemoryPoolSupportedHandleTypes = 119\n        cudaDevAttrMemoryPoolsSupported = 115\n        cudaDevAttrMultiGpuBoardGroupID = 85\n        cudaDevAttrMultiProcessorCount = 16\n        cudaDevAttrPageableMemoryAccess = 88\n        cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\n        cudaDevAttrPciBusId = 33\n        cudaDevAttrPciDeviceId = 34\n        cudaDevAttrPciDomainId = 50\n        cudaDevAttrReserved92 = 92\n        cudaDevAttrReserved93 = 93\n        cudaDevAttrReserved94 = 94\n        cudaDevAttrReservedSharedMemoryPerBlock = 111\n        cudaDevAttrSingleToDoublePrecisionPerfRatio = 87\n        cudaDevAttrSparseCudaArraySupported = 112\n        cudaDevAttrStreamPrioritiesSupported = 78\n        cudaDevAttrSurfaceAlignment = 30\n        cudaDevAttrTccDriver = 35\n        cudaDevAttrTextureAlignment = 14\n        cudaDevAttrTexturePitchAlignment = 51\n        cudaDevAttrTotalConstantMemory = 9\n        cudaDevAttrUnifiedAddressing = 41\n        cudaDevAttrWarpSize = 10\n        cudaFilterModeLinear = 1\n        cudaFilterModePoint = 0\n        cudaIpcMemLazyEnablePeerAccess = 1\n        cudaLimitDevRuntimePendingLaunchCount = 4\n        cudaLimitDevRuntimeSyncDepth = 3\n        cudaLimitMallocHeapSize = 2\n        cudaLimitMaxL2FetchGranularity = 5\n        cudaLimitPrintfFifoSize = 1\n        cudaLimitStackSize = 0\n        cudaMemAdviseSetAccessedBy = 5\n        cudaMemAdviseSetPreferredLocation = 3\n        cudaMemAdviseSetReadMostly = 1\n        cudaMemAdviseUnsetAccessedBy = 6\n        cudaMemAdviseUnsetPreferredLocation = 4\n        cudaMemAdviseUnsetReadMostly = 2\n        cudaMemAllocationTypePinned = 1\n        cudaMemAttachGlobal = 1\n        cudaMemAttachHost = 2\n        cudaMemAttachSingle = 4\n        cudaMemHandleTypeNone = 0\n        cudaMemHandleTypePosixFileDescriptor = 1\n        cudaMemLocationTypeDevice = 1\n        cudaMemPoolAttrReleaseThreshold = 4\n        cudaMemPoolAttrReservedMemCurrent = 5\n        cudaMemPoolAttrReservedMemHigh = 6\n        cudaMemPoolAttrUsedMemCurrent = 7\n        cudaMemPoolAttrUsedMemHigh = 8\n        cudaMemPoolReuseAllowInternalDependencies = 3\n        cudaMemPoolReuseAllowOpportunistic = 2\n        cudaMemPoolReuseFollowEventDependencies = 1\n        cudaMemoryTypeDevice = 2\n        cudaMemoryTypeHost = 1\n        cudaReadModeElementType = 0\n        cudaReadModeNormalizedFloat = 1\n        cudaResourceTypeArray = 0\n        cudaResourceTypeLinear = 2\n        cudaResourceTypeMipmappedArray = 1\n        cudaResourceTypePitch2D = 3\n        destroySurfaceObject = <built-in function destroySurfaceObject>\n        destroyTextureObject = <built-in function destroyTextureObject>\n        deviceCanAccessPeer = <built-in function deviceCanAccessPeer>\n        deviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\n        deviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\n        deviceGetAttribute = <built-in function deviceGetAttribute>\n        deviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\n        deviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\n        deviceGetLimit = <built-in function deviceGetLimit>\n        deviceGetMemPool = <built-in function deviceGetMemPool>\n        deviceGetPCIBusId = <built-in function deviceGetPCIBusId>\n        deviceSetLimit = <built-in function deviceSetLimit>\n        deviceSetMemPool = <built-in function deviceSetMemPool>\n        deviceSynchronize = <built-in function deviceSynchronize>\n        driverGetVersion = <built-in function driverGetVersion>\n        eventBlockingSync = 1\n        eventCreate = <built-in function eventCreate>\n        eventCreateWithFlags = <built-in function eventCreateWithFlags>\n        eventDefault = 0\n        eventDestroy = <built-in function eventDestroy>\n        eventDisableTiming = 2\n        eventElapsedTime = <built-in function eventElapsedTime>\n        eventInterprocess = 4\n        eventQuery = <built-in function eventQuery>\n        eventRecord = <built-in function eventRecord>\n        eventSynchronize = <built-in function eventSynchronize>\n        free       = <built-in function free>\n        freeArray  = <built-in function freeArray>\n        freeAsync  = <built-in function freeAsync>\n        freeHost   = <built-in function freeHost>\n        getDevice  = <built-in function getDevice>\n        getDeviceCount = <built-in function getDeviceCount>\n        getDeviceProperties = <built-in function getDeviceProperties>\n        graphDestroy = <built-in function graphDestroy>\n        graphExecDestroy = <built-in function graphExecDestroy>\n        graphInstantiate = <built-in function graphInstantiate>\n        graphLaunch = <built-in function graphLaunch>\n        graphUpload = <built-in function graphUpload>\n        hostAlloc  = <built-in function hostAlloc>\n        hostAllocDefault = 0\n        hostAllocMapped = 2\n        hostAllocPortable = 1\n        hostAllocWriteCombined = 4\n        hostRegister = <built-in function hostRegister>\n        hostUnregister = <built-in function hostUnregister>\n        ipcCloseMemHandle = <built-in function ipcCloseMemHandle>\n        ipcGetEventHandle = <built-in function ipcGetEventHandle>\n        ipcGetMemHandle = <built-in function ipcGetMemHandle>\n        ipcOpenEventHandle = <built-in function ipcOpenEventHandle>\n        ipcOpenMemHandle = <built-in function ipcOpenMemHandle>\n        is_hip     = False\n        launchHostFunc = <built-in function launchHostFunc>\n        malloc     = <built-in function malloc>\n        malloc3DArray = <built-in function malloc3DArray>\n        mallocArray = <built-in function mallocArray>\n        mallocAsync = <built-in function mallocAsync>\n        mallocFromPoolAsync = <built-in function mallocFromPoolAsync>\n        mallocManaged = <built-in function mallocManaged>\n        memAdvise  = <built-in function memAdvise>\n        memGetInfo = <built-in function memGetInfo>\n        memPoolCreate = <built-in function memPoolCreate>\n        memPoolDestroy = <built-in function memPoolDestroy>\n        memPoolGetAttribute = <built-in function memPoolGetAttribute>\n        memPoolSetAttribute = <built-in function memPoolSetAttribute>\n        memPoolTrimTo = <built-in function memPoolTrimTo>\n        memPrefetchAsync = <built-in function memPrefetchAsync>\n        memcpy     = <built-in function memcpy>\n        memcpy2D   = <built-in function memcpy2D>\n        memcpy2DAsync = <built-in function memcpy2DAsync>\n        memcpy2DFromArray = <built-in function memcpy2DFromArray>\n        memcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\n        memcpy2DToArray = <built-in function memcpy2DToArray>\n        memcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\n        memcpy3D   = <built-in function memcpy3D>\n        memcpy3DAsync = <built-in function memcpy3DAsync>\n        memcpyAsync = <built-in function memcpyAsync>\n        memcpyDefault = 4\n        memcpyDeviceToDevice = 3\n        memcpyDeviceToHost = 2\n        memcpyHostToDevice = 1\n        memcpyHostToHost = 0\n        memcpyPeer = <built-in function memcpyPeer>\n        memcpyPeerAsync = <built-in function memcpyPeerAsync>\n        memoryTypeDevice = 2\n        memoryTypeHost = 1\n        memoryTypeManaged = 3\n        memoryTypeUnregistered = 0\n        memset     = <built-in function memset>\n        memsetAsync = <built-in function memsetAsync>\n        pointerGetAttributes = <built-in function pointerGetAttributes>\n        runtimeGetVersion = <built-in function runtimeGetVersion>\n        setDevice  = <built-in function setDevice>\n        streamAddCallback = <built-in function streamAddCallback>\n        streamBeginCapture = <built-in function streamBeginCapture>\n        streamCaptureModeGlobal = 0\n        streamCaptureModeRelaxed = 2\n        streamCaptureModeThreadLocal = 1\n        streamCaptureStatusActive = 1\n        streamCaptureStatusInvalidated = 2\n        streamCaptureStatusNone = 0\n        streamCreate = <built-in function streamCreate>\n        streamCreateWithFlags = <built-in function streamCreateWithFlags>\n        streamDefault = 0\n        streamDestroy = <built-in function streamDestroy>\n        streamEndCapture = <built-in function streamEndCapture>\n        streamIsCapturing = <built-in function streamIsCapturing>\n        streamLegacy = 1\n        streamNonBlocking = 1\n        streamPerThread = 2\n        streamQuery = <built-in function streamQuery>\n        streamSynchronize = <built-in function streamSynchronize>\n        streamWaitEvent = <built-in function streamWaitEvent>\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>   ???\nE   cupy_backends.cuda.api.runtime.CUDARuntimeError: cudaErrorNoDevice: no CUDA-capable device is detected\n\nCUDARuntimeError = <class 'cupy_backends.cuda.api.runtime.CUDARuntimeError'>\nCUDA_C_16F = 6\nCUDA_C_32F = 4\nCUDA_C_64F = 5\nCUDA_C_8I  = 7\nCUDA_C_8U  = 9\nCUDA_R_16F = 2\nCUDA_R_32F = 0\nCUDA_R_64F = 1\nCUDA_R_8I  = 3\nCUDA_R_8U  = 8\nMemPoolProps = <class 'cupy_backends.cuda.api.runtime.MemPoolProps'>\nPointerAttributes = <class 'cupy_backends.cuda.api.runtime.PointerAttributes'>\n_ThreadLocal = <class 'cupy_backends.cuda.api.runtime._ThreadLocal'>\n__builtins__ = <builtins>\n__doc__    = ('Thin wrapper of CUDA Runtime API.\\n'\n '\\n'\n 'There are four differences compared to the original C API.\\n'\n '\\n'\n '1. Not all functions are ported.\\n'\n '2. Errors are translated into CUDARuntimeError exceptions.\\n'\n \"3. The 'cuda' prefix of each API is omitted and the next character is set \"\n 'to\\n'\n '   lower case.\\n'\n '4. The resulting values are returned directly instead of references.\\n'\n '\\n')\n__file__   = '/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so'\n__loader__ = <_frozen_importlib_external.ExtensionFileLoader object at 0x7f99f7dc5820>\n__name__   = 'cupy_backends.cuda.api.runtime'\n__package__ = 'cupy_backends.cuda.api'\n__pyx_capi__ = {'_deviceEnsurePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd61e0>,\n '_ensure_context': <capsule object \"PyObject *(void)\" at 0x7f99f7dd6d20>,\n '_is_hip_environment': <capsule object \"int\" at 0x7f99f7dc5f00>,\n 'check_status': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dc5f30>,\n 'createSurfaceObject': <capsule object \"uintmax_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ed0>,\n 'createTextureObject': <capsule object \"uintmax_t (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6d50>,\n 'destroySurfaceObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f00>,\n 'destroyTextureObject': <capsule object \"PyObject *(uintmax_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6d80>,\n 'deviceAttributeComputeCapabilityMajor': <capsule object \"int\" at 0x7f99f7dc5ea0>,\n 'deviceAttributeComputeCapabilityMinor': <capsule object \"int\" at 0x7f99f7dc5ed0>,\n 'deviceCanAccessPeer': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6180>,\n 'deviceEnablePeerAccess': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd61b0>,\n 'deviceGetAttribute': <capsule object \"int (int, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6030>,\n 'deviceGetByPCIBusId': <capsule object \"int (PyObject *, int __pyx_skip_dispatch)\" at 0x7f99f7dd6060>,\n 'deviceGetDefaultMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6840>,\n 'deviceGetLimit': <capsule object \"size_t (int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6210>,\n 'deviceGetMemPool': <capsule object \"intptr_t (int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6870>,\n 'deviceGetPCIBusId': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6090>,\n 'deviceSetLimit': <capsule object \"PyObject *(int, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6240>,\n 'deviceSetMemPool': <capsule object \"PyObject *(int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd68a0>,\n 'deviceSynchronize': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f99f7dd6120>,\n 'driverGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dc5f60>,\n 'errorContextIsDestroyed': <capsule object \"int\" at 0x7f99f7dc5e40>,\n 'errorInvalidResourceHandle': <capsule object \"int\" at 0x7f99f7dc5e70>,\n 'errorInvalidValue': <capsule object \"int\" at 0x7f99f7dc5de0>,\n 'errorMemoryAllocation': <capsule object \"int\" at 0x7f99f7dc5db0>,\n 'errorPeerAccessAlreadyEnabled': <capsule object \"int\" at 0x7f99f7dc5e10>,\n 'eventCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f99f7dd6bd0>,\n 'eventCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c00>,\n 'eventDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c30>,\n 'eventElapsedTime': <capsule object \"float (intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c60>,\n 'eventQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6c90>,\n 'eventRecord': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6cc0>,\n 'eventSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6cf0>,\n 'free': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6420>,\n 'freeArray': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6480>,\n 'freeAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd64b0>,\n 'freeHost': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6450>,\n 'getChannelDesc': <capsule object \"cudaChannelFormatDesc (intptr_t)\" at 0x7f99f7dd6db0>,\n 'getDevice': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dc5fc0>,\n 'getDeviceCount': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dd60c0>,\n 'getDeviceProperties': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6150>,\n 'getTextureObjectResourceDesc': <capsule object \"cudaResourceDesc (uintmax_t)\" at 0x7f99f7dd6de0>,\n 'getTextureObjectTextureDesc': <capsule object \"cudaTextureDesc (uintmax_t)\" at 0x7f99f7dd6e10>,\n 'graphDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f30>,\n 'graphExecDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f60>,\n 'graphInstantiate': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6f90>,\n 'graphLaunch': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6fc0>,\n 'graphUpload': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99c0fbe030>,\n 'hostAlloc': <capsule object \"intptr_t (size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6390>,\n 'hostRegister': <capsule object \"PyObject *(intptr_t, size_t, unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd63c0>,\n 'hostUnregister': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd63f0>,\n 'launchHostFunc': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ab0>,\n 'make_Extent': <capsule object \"cudaExtent (size_t, size_t, size_t)\" at 0x7f99f7dd6e40>,\n 'make_PitchedPtr': <capsule object \"cudaPitchedPtr (intptr_t, size_t, size_t, size_t)\" at 0x7f99f7dd6ea0>,\n 'make_Pos': <capsule object \"cudaPos (size_t, size_t, size_t)\" at 0x7f99f7dd6e70>,\n 'malloc': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6270>,\n 'malloc3DArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_malloc3DArray *__pyx_optional_args)\" at 0x7f99f7dd62d0>,\n 'mallocArray': <capsule object \"intptr_t (intptr_t, size_t, size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocArray *__pyx_optional_args)\" at 0x7f99f7dd6300>,\n 'mallocAsync': <capsule object \"intptr_t (size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6330>,\n 'mallocFromPoolAsync': <capsule object \"intptr_t (size_t, intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6360>,\n 'mallocManaged': <capsule object \"intptr_t (size_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_mallocManaged *__pyx_optional_args)\" at 0x7f99f7dd62a0>,\n 'memAdvise': <capsule object \"PyObject *(intptr_t, size_t, int, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd67e0>,\n 'memGetInfo': <capsule object \"PyObject *(int __pyx_skip_dispatch)\" at 0x7f99f7dd64e0>,\n 'memPoolCreate': <capsule object \"intptr_t (struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_MemPoolProps *, int __pyx_skip_dispatch)\" at 0x7f99f7dd68d0>,\n 'memPoolDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6900>,\n 'memPoolGetAttribute': <capsule object \"PyObject *(intptr_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6960>,\n 'memPoolSetAttribute': <capsule object \"PyObject *(intptr_t, int, PyObject *, int __pyx_skip_dispatch)\" at 0x7f99f7dd6990>,\n 'memPoolTrimTo': <capsule object \"PyObject *(intptr_t, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6930>,\n 'memPrefetchAsync': <capsule object \"PyObject *(intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd67b0>,\n 'memcpy': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6510>,\n 'memcpy2D': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, int __pyx_skip_dispatch)\" at 0x7f99f7dd65d0>,\n 'memcpy2DAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, cudaMemcpyKind, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6600>,\n 'memcpy2DFromArray': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6630>,\n 'memcpy2DFromArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, intptr_t, size_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6660>,\n 'memcpy2DToArray': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, int __pyx_skip_dispatch)\" at 0x7f99f7dd6690>,\n 'memcpy2DToArrayAsync': <capsule object \"PyObject *(intptr_t, size_t, size_t, intptr_t, size_t, size_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd66c0>,\n 'memcpy3D': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd66f0>,\n 'memcpy3DAsync': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6720>,\n 'memcpyAsync': <capsule object \"PyObject *(intptr_t, intptr_t, size_t, int, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6540>,\n 'memcpyPeer': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6570>,\n 'memcpyPeerAsync': <capsule object \"PyObject *(intptr_t, int, intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd65a0>,\n 'memset': <capsule object \"PyObject *(intptr_t, int, size_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6750>,\n 'memsetAsync': <capsule object \"PyObject *(intptr_t, int, size_t, intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6780>,\n 'pointerGetAttributes': <capsule object \"struct __pyx_obj_13cupy_backends_4cuda_3api_7runtime_PointerAttributes *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6810>,\n 'runtimeGetVersion': <capsule object \"int (int __pyx_skip_dispatch)\" at 0x7f99f7dc5f90>,\n 'setDevice': <capsule object \"PyObject *(int, int __pyx_skip_dispatch)\" at 0x7f99f7dd60f0>,\n 'streamAddCallback': <capsule object \"PyObject *(intptr_t, PyObject *, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamAddCallback *__pyx_optional_args)\" at 0x7f99f7dd6a80>,\n 'streamBeginCapture': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamBeginCapture *__pyx_optional_args)\" at 0x7f99f7dd6b40>,\n 'streamCreate': <capsule object \"intptr_t (int __pyx_skip_dispatch)\" at 0x7f99f7dd69c0>,\n 'streamCreateWithFlags': <capsule object \"intptr_t (unsigned int, int __pyx_skip_dispatch)\" at 0x7f99f7dd69f0>,\n 'streamDestroy': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6a20>,\n 'streamEndCapture': <capsule object \"intptr_t (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6b70>,\n 'streamIsCapturing': <capsule object \"int (intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ba0>,\n 'streamQuery': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6ae0>,\n 'streamSynchronize': <capsule object \"PyObject *(intptr_t, int __pyx_skip_dispatch)\" at 0x7f99f7dd6a50>,\n 'streamWaitEvent': <capsule object \"PyObject *(intptr_t, intptr_t, int __pyx_skip_dispatch, struct __pyx_opt_args_13cupy_backends_4cuda_3api_7runtime_streamWaitEvent *__pyx_optional_args)\" at 0x7f99f7dd6b10>}\n__pyx_unpickle_MemPoolProps = <built-in function __pyx_unpickle_MemPoolProps>\n__pyx_unpickle_PointerAttributes = <built-in function __pyx_unpickle_PointerAttributes>\n__pyx_unpickle__ThreadLocal = <built-in function __pyx_unpickle__ThreadLocal>\n__spec__   = ModuleSpec(name='cupy_backends.cuda.api.runtime', loader=<_frozen_importlib_external.ExtensionFileLoader object at 0x7f99f7dc5820>, origin='/opt/build-venv/lib/python3.8/site-packages/cupy_backends/cuda/api/runtime.cpython-38-x86_64-linux-gnu.so')\n__test__   = {}\n_deviceEnsurePeerAccess = <built-in function _deviceEnsurePeerAccess>\n_export_enum = <built-in function _export_enum>\n_threading = <module 'threading' from '/usr/lib/python3.8/threading.py'>\ncheck_status = <built-in function check_status>\ncreateSurfaceObject = <built-in function createSurfaceObject>\ncreateTextureObject = <built-in function createTextureObject>\ncudaAddressModeBorder = 3\ncudaAddressModeClamp = 1\ncudaAddressModeMirror = 2\ncudaAddressModeWrap = 0\ncudaArrayDefault = 0\ncudaArraySurfaceLoadStore = 2\ncudaChannelFormatKindFloat = 2\ncudaChannelFormatKindNone = 3\ncudaChannelFormatKindSigned = 0\ncudaChannelFormatKindUnsigned = 1\ncudaDevAttrAsyncEngineCount = 40\ncudaDevAttrCanFlushRemoteWrites = 98\ncudaDevAttrCanMapHostMemory = 19\ncudaDevAttrCanUseHostPointerForRegisteredMem = 91\ncudaDevAttrClockRate = 13\ncudaDevAttrComputeMode = 20\ncudaDevAttrComputePreemptionSupported = 90\ncudaDevAttrConcurrentKernels = 31\ncudaDevAttrConcurrentManagedAccess = 89\ncudaDevAttrCooperativeLaunch = 95\ncudaDevAttrCooperativeMultiDeviceLaunch = 96\ncudaDevAttrDirectManagedMemAccessFromHost = 101\ncudaDevAttrEccEnabled = 32\ncudaDevAttrGPUDirectRDMAFlushWritesOptions = 117\ncudaDevAttrGPUDirectRDMASupported = 116\ncudaDevAttrGPUDirectRDMAWritesOrdering = 118\ncudaDevAttrGlobalL1CacheSupported = 79\ncudaDevAttrGlobalMemoryBusWidth = 37\ncudaDevAttrGpuOverlap = 15\ncudaDevAttrHostNativeAtomicSupported = 86\ncudaDevAttrHostRegisterReadOnlySupported = 113\ncudaDevAttrHostRegisterSupported = 99\ncudaDevAttrIntegrated = 18\ncudaDevAttrIsMultiGpuBoard = 84\ncudaDevAttrKernelExecTimeout = 17\ncudaDevAttrL2CacheSize = 38\ncudaDevAttrLocalL1CacheSupported = 80\ncudaDevAttrManagedMemory = 83\ncudaDevAttrMaxBlockDimX = 2\ncudaDevAttrMaxBlockDimY = 3\ncudaDevAttrMaxBlockDimZ = 4\ncudaDevAttrMaxBlocksPerMultiprocessor = 106\ncudaDevAttrMaxGridDimX = 5\ncudaDevAttrMaxGridDimY = 6\ncudaDevAttrMaxGridDimZ = 7\ncudaDevAttrMaxPitch = 11\ncudaDevAttrMaxRegistersPerBlock = 12\ncudaDevAttrMaxRegistersPerMultiprocessor = 82\ncudaDevAttrMaxSharedMemoryPerBlock = 8\ncudaDevAttrMaxSharedMemoryPerBlockOptin = 97\ncudaDevAttrMaxSharedMemoryPerMultiprocessor = 81\ncudaDevAttrMaxSurface1DLayeredLayers = 62\ncudaDevAttrMaxSurface1DLayeredWidth = 61\ncudaDevAttrMaxSurface1DWidth = 55\ncudaDevAttrMaxSurface2DHeight = 57\ncudaDevAttrMaxSurface2DLayeredHeight = 64\ncudaDevAttrMaxSurface2DLayeredLayers = 65\ncudaDevAttrMaxSurface2DLayeredWidth = 63\ncudaDevAttrMaxSurface2DWidth = 56\ncudaDevAttrMaxSurface3DDepth = 60\ncudaDevAttrMaxSurface3DHeight = 59\ncudaDevAttrMaxSurface3DWidth = 58\ncudaDevAttrMaxSurfaceCubemapLayeredLayers = 68\ncudaDevAttrMaxSurfaceCubemapLayeredWidth = 67\ncudaDevAttrMaxSurfaceCubemapWidth = 66\ncudaDevAttrMaxTexture1DLayeredLayers = 43\ncudaDevAttrMaxTexture1DLayeredWidth = 42\ncudaDevAttrMaxTexture1DLinearWidth = 69\ncudaDevAttrMaxTexture1DMipmappedWidth = 77\ncudaDevAttrMaxTexture1DWidth = 21\ncudaDevAttrMaxTexture2DGatherHeight = 46\ncudaDevAttrMaxTexture2DGatherWidth = 45\ncudaDevAttrMaxTexture2DHeight = 23\ncudaDevAttrMaxTexture2DLayeredHeight = 28\ncudaDevAttrMaxTexture2DLayeredLayers = 29\ncudaDevAttrMaxTexture2DLayeredWidth = 27\ncudaDevAttrMaxTexture2DLinearHeight = 71\ncudaDevAttrMaxTexture2DLinearPitch = 72\ncudaDevAttrMaxTexture2DLinearWidth = 70\ncudaDevAttrMaxTexture2DMipmappedHeight = 74\ncudaDevAttrMaxTexture2DMipmappedWidth = 73\ncudaDevAttrMaxTexture2DWidth = 22\ncudaDevAttrMaxTexture3DDepth = 26\ncudaDevAttrMaxTexture3DDepthAlt = 49\ncudaDevAttrMaxTexture3DHeight = 25\ncudaDevAttrMaxTexture3DHeightAlt = 48\ncudaDevAttrMaxTexture3DWidth = 24\ncudaDevAttrMaxTexture3DWidthAlt = 47\ncudaDevAttrMaxTextureCubemapLayeredLayers = 54\ncudaDevAttrMaxTextureCubemapLayeredWidth = 53\ncudaDevAttrMaxTextureCubemapWidth = 52\ncudaDevAttrMaxThreadsPerBlock = 1\ncudaDevAttrMaxThreadsPerMultiProcessor = 39\ncudaDevAttrMaxTimelineSemaphoreInteropSupported = 114\ncudaDevAttrMemoryClockRate = 36\ncudaDevAttrMemoryPoolSupportedHandleTypes = 119\ncudaDevAttrMemoryPoolsSupported = 115\ncudaDevAttrMultiGpuBoardGroupID = 85\ncudaDevAttrMultiProcessorCount = 16\ncudaDevAttrPageableMemoryAccess = 88\ncudaDevAttrPageableMemoryAccessUsesHostPageTables = 100\ncudaDevAttrPciBusId = 33\ncudaDevAttrPciDeviceId = 34\ncudaDevAttrPciDomainId = 50\ncudaDevAttrReserved92 = 92\ncudaDevAttrReserved93 = 93\ncudaDevAttrReserved94 = 94\ncudaDevAttrReservedSharedMemoryPerBlock = 111\ncudaDevAttrSingleToDoublePrecisionPerfRatio = 87\ncudaDevAttrSparseCudaArraySupported = 112\ncudaDevAttrStreamPrioritiesSupported = 78\ncudaDevAttrSurfaceAlignment = 30\ncudaDevAttrTccDriver = 35\ncudaDevAttrTextureAlignment = 14\ncudaDevAttrTexturePitchAlignment = 51\ncudaDevAttrTotalConstantMemory = 9\ncudaDevAttrUnifiedAddressing = 41\ncudaDevAttrWarpSize = 10\ncudaFilterModeLinear = 1\ncudaFilterModePoint = 0\ncudaIpcMemLazyEnablePeerAccess = 1\ncudaLimitDevRuntimePendingLaunchCount = 4\ncudaLimitDevRuntimeSyncDepth = 3\ncudaLimitMallocHeapSize = 2\ncudaLimitMaxL2FetchGranularity = 5\ncudaLimitPrintfFifoSize = 1\ncudaLimitStackSize = 0\ncudaMemAdviseSetAccessedBy = 5\ncudaMemAdviseSetPreferredLocation = 3\ncudaMemAdviseSetReadMostly = 1\ncudaMemAdviseUnsetAccessedBy = 6\ncudaMemAdviseUnsetPreferredLocation = 4\ncudaMemAdviseUnsetReadMostly = 2\ncudaMemAllocationTypePinned = 1\ncudaMemAttachGlobal = 1\ncudaMemAttachHost = 2\ncudaMemAttachSingle = 4\ncudaMemHandleTypeNone = 0\ncudaMemHandleTypePosixFileDescriptor = 1\ncudaMemLocationTypeDevice = 1\ncudaMemPoolAttrReleaseThreshold = 4\ncudaMemPoolAttrReservedMemCurrent = 5\ncudaMemPoolAttrReservedMemHigh = 6\ncudaMemPoolAttrUsedMemCurrent = 7\ncudaMemPoolAttrUsedMemHigh = 8\ncudaMemPoolReuseAllowInternalDependencies = 3\ncudaMemPoolReuseAllowOpportunistic = 2\ncudaMemPoolReuseFollowEventDependencies = 1\ncudaMemoryTypeDevice = 2\ncudaMemoryTypeHost = 1\ncudaReadModeElementType = 0\ncudaReadModeNormalizedFloat = 1\ncudaResourceTypeArray = 0\ncudaResourceTypeLinear = 2\ncudaResourceTypeMipmappedArray = 1\ncudaResourceTypePitch2D = 3\ndestroySurfaceObject = <built-in function destroySurfaceObject>\ndestroyTextureObject = <built-in function destroyTextureObject>\ndeviceCanAccessPeer = <built-in function deviceCanAccessPeer>\ndeviceDisablePeerAccess = <built-in function deviceDisablePeerAccess>\ndeviceEnablePeerAccess = <built-in function deviceEnablePeerAccess>\ndeviceGetAttribute = <built-in function deviceGetAttribute>\ndeviceGetByPCIBusId = <built-in function deviceGetByPCIBusId>\ndeviceGetDefaultMemPool = <built-in function deviceGetDefaultMemPool>\ndeviceGetLimit = <built-in function deviceGetLimit>\ndeviceGetMemPool = <built-in function deviceGetMemPool>\ndeviceGetPCIBusId = <built-in function deviceGetPCIBusId>\ndeviceSetLimit = <built-in function deviceSetLimit>\ndeviceSetMemPool = <built-in function deviceSetMemPool>\ndeviceSynchronize = <built-in function deviceSynchronize>\ndriverGetVersion = <built-in function driverGetVersion>\neventBlockingSync = 1\neventCreate = <built-in function eventCreate>\neventCreateWithFlags = <built-in function eventCreateWithFlags>\neventDefault = 0\neventDestroy = <built-in function eventDestroy>\neventDisableTiming = 2\neventElapsedTime = <built-in function eventElapsedTime>\neventInterprocess = 4\neventQuery = <built-in function eventQuery>\neventRecord = <built-in function eventRecord>\neventSynchronize = <built-in function eventSynchronize>\nfree       = <built-in function free>\nfreeArray  = <built-in function freeArray>\nfreeAsync  = <built-in function freeAsync>\nfreeHost   = <built-in function freeHost>\ngetDevice  = <built-in function getDevice>\ngetDeviceCount = <built-in function getDeviceCount>\ngetDeviceProperties = <built-in function getDeviceProperties>\ngraphDestroy = <built-in function graphDestroy>\ngraphExecDestroy = <built-in function graphExecDestroy>\ngraphInstantiate = <built-in function graphInstantiate>\ngraphLaunch = <built-in function graphLaunch>\ngraphUpload = <built-in function graphUpload>\nhostAlloc  = <built-in function hostAlloc>\nhostAllocDefault = 0\nhostAllocMapped = 2\nhostAllocPortable = 1\nhostAllocWriteCombined = 4\nhostRegister = <built-in function hostRegister>\nhostUnregister = <built-in function hostUnregister>\nipcCloseMemHandle = <built-in function ipcCloseMemHandle>\nipcGetEventHandle = <built-in function ipcGetEventHandle>\nipcGetMemHandle = <built-in function ipcGetMemHandle>\nipcOpenEventHandle = <built-in function ipcOpenEventHandle>\nipcOpenMemHandle = <built-in function ipcOpenMemHandle>\nis_hip     = False\nlaunchHostFunc = <built-in function launchHostFunc>\nmalloc     = <built-in function malloc>\nmalloc3DArray = <built-in function malloc3DArray>\nmallocArray = <built-in function mallocArray>\nmallocAsync = <built-in function mallocAsync>\nmallocFromPoolAsync = <built-in function mallocFromPoolAsync>\nmallocManaged = <built-in function mallocManaged>\nmemAdvise  = <built-in function memAdvise>\nmemGetInfo = <built-in function memGetInfo>\nmemPoolCreate = <built-in function memPoolCreate>\nmemPoolDestroy = <built-in function memPoolDestroy>\nmemPoolGetAttribute = <built-in function memPoolGetAttribute>\nmemPoolSetAttribute = <built-in function memPoolSetAttribute>\nmemPoolTrimTo = <built-in function memPoolTrimTo>\nmemPrefetchAsync = <built-in function memPrefetchAsync>\nmemcpy     = <built-in function memcpy>\nmemcpy2D   = <built-in function memcpy2D>\nmemcpy2DAsync = <built-in function memcpy2DAsync>\nmemcpy2DFromArray = <built-in function memcpy2DFromArray>\nmemcpy2DFromArrayAsync = <built-in function memcpy2DFromArrayAsync>\nmemcpy2DToArray = <built-in function memcpy2DToArray>\nmemcpy2DToArrayAsync = <built-in function memcpy2DToArrayAsync>\nmemcpy3D   = <built-in function memcpy3D>\nmemcpy3DAsync = <built-in function memcpy3DAsync>\nmemcpyAsync = <built-in function memcpyAsync>\nmemcpyDefault = 4\nmemcpyDeviceToDevice = 3\nmemcpyDeviceToHost = 2\nmemcpyHostToDevice = 1\nmemcpyHostToHost = 0\nmemcpyPeer = <built-in function memcpyPeer>\nmemcpyPeerAsync = <built-in function memcpyPeerAsync>\nmemoryTypeDevice = 2\nmemoryTypeHost = 1\nmemoryTypeManaged = 3\nmemoryTypeUnregistered = 0\nmemset     = <built-in function memset>\nmemsetAsync = <built-in function memsetAsync>\npointerGetAttributes = <built-in function pointerGetAttributes>\nruntimeGetVersion = <built-in function runtimeGetVersion>\nsetDevice  = <built-in function setDevice>\nstreamAddCallback = <built-in function streamAddCallback>\nstreamBeginCapture = <built-in function streamBeginCapture>\nstreamCaptureModeGlobal = 0\nstreamCaptureModeRelaxed = 2\nstreamCaptureModeThreadLocal = 1\nstreamCaptureStatusActive = 1\nstreamCaptureStatusInvalidated = 2\nstreamCaptureStatusNone = 0\nstreamCreate = <built-in function streamCreate>\nstreamCreateWithFlags = <built-in function streamCreateWithFlags>\nstreamDefault = 0\nstreamDestroy = <built-in function streamDestroy>\nstreamEndCapture = <built-in function streamEndCapture>\nstreamIsCapturing = <built-in function streamIsCapturing>\nstreamLegacy = 1\nstreamNonBlocking = 1\nstreamPerThread = 2\nstreamQuery = <built-in function streamQuery>\nstreamSynchronize = <built-in function streamSynchronize>\nstreamWaitEvent = <built-in function streamWaitEvent>\n\ncupy_backends/cuda/api/runtime.pyx:144: CUDARuntimeError\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================= 1229 failed, 120 skipped in 79.12s (0:01:19) =================\n\n```",
  "closed_at":"2023-11-28T12:53:00Z",
  "comments":1,
  "created_at":"2023-11-26T20:44:15Z",
  "id":2011197975,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws534HIX",
  "number":2849,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-28T12:53:00Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/python-jsonschema/check-jsonschema: 0.27.1 \u2192 0.27.2](https://github.com/python-jsonschema/check-jsonschema/compare/0.27.1...0.27.2)\n- [github.com/pre-commit/mirrors-mypy: v1.7.0 \u2192 v1.7.1](https://github.com/pre-commit/mirrors-mypy/compare/v1.7.0...v1.7.1)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-11-28T21:34:18Z",
  "comments":1,
  "created_at":"2023-11-27T19:19:53Z",
  "draft":false,
  "id":2012936596,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5geVgZ",
  "number":2850,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-28T21:34:18Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-11-28T21:34:19Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I think the header only tests were not executing due to a change in the path",
  "closed_at":"2023-11-29T13:46:04Z",
  "comments":3,
  "created_at":"2023-11-28T20:35:54Z",
  "draft":false,
  "id":2015260232,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gmTeC",
  "number":2851,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-29T13:46:04Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"ci: fix path to header only tests",
  "updated_at":"2023-11-29T13:46:10Z",
  "user":"MDQ6VXNlcjM4MzA5MA=="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR:\r\n1. Splits `Content._mergeable_next` and `ak._do.mergeable` into `Meta._mergeable_next` and `ak._do.meta.mergeable`.\r\n2. Adds `dtype` to `NumpyMeta`\r\n3. Drops use of `Generic` in type hints for `Meta` classes\r\n\r\n(3) is required because of the lack of higher-kinded types. This means that our type hints will only let us prove that `NumpyArray` is a `NumpyMeta` in some contexts, e.g. via `ak._meta.meta.is_numpy()`",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-11-29T13:46:41Z",
  "draft":false,
  "id":2016633766,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gq_W2",
  "number":2852,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"refactor: split `ak._do` into `meta` and `content`",
  "updated_at":"2023-12-19T21:21:53Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\r\n\r\nmain\r\n\r\n### Description and code to reproduce\r\n\r\n- Categoricals should merge for strings, but error for non strings?\r\n- We _can_ add an extension for merging non-string categoricals.",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-11-29T14:21:05Z",
  "id":2016703666,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54NHSy",
  "number":2853,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Categoricals should merge subject to particular rules",
  "updated_at":"2023-12-08T13:09:14Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I could not find a way to run JupyterLite at https://awkward-array.org/doc/main/getting-started/try-awkward-array.html#try-it full screen, if not it is too small to execute comfortably in my opinion.\r\n\r\nFollowing https://jupyterlite-sphinx.readthedocs.io/en/latest/full.html, I think the easiest way is to provide a link to https://awkward-array.org/doc/main/lite/retro/notebooks/?path=what-is-an-awkward-array.ipynb",
  "closed_at":"2023-11-30T10:31:42Z",
  "comments":6,
  "created_at":"2023-11-29T17:08:01Z",
  "draft":false,
  "id":2017050598,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gsbOj",
  "number":2854,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-30T10:31:42Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: link to execute JupyterLite full screen",
  "updated_at":"2023-11-30T10:31:43Z",
  "user":"MDQ6VXNlcjM4MzA5MA=="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [pypa/gh-action-pypi-publish](https://github.com/pypa/gh-action-pypi-publish) from 1.8.10 to 1.8.11.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pypi-publish/releases\">pypa/gh-action-pypi-publish's releases</a>.</em></p>\n<blockquote>\n<h2>v1.8.11</h2>\n<h2>:nail_care: Cosmetic output improvements</h2>\n<p><a href=\"https://github.com/woodruffw\"><code>@\u200bwoodruffw</code></a> added a nudge suggesting the users storing passwords in a GitHub Actions repository secrets to switch to using secretless publishing in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/190\">pypa/gh-action-pypi-publish#190</a>. This also reminds people that PyPI will start mandating two-factor authentication to perform uploads in 2024.</p>\n<h2>:memo: What's Documented</h2>\n<p><a href=\"https://github.com/di\"><code>@\u200bdi</code></a> linked the configuration docs for Trusted Publishing in README via <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/179\">pypa/gh-action-pypi-publish#179</a>.</p>\n<h2>:hammer_and_wrench: Internal dependencies</h2>\n<ul>\n<li>Cryptography was bumped from 41.0.3 to 41.0.6 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/194\">pypa/gh-action-pypi-publish#194</a></li>\n<li>Pip was bumped from 22.3.1 to 23.3 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/189\">pypa/gh-action-pypi-publish#189</a></li>\n<li>pre-commit linters got autoupdated @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/184\">pypa/gh-action-pypi-publish#184</a></li>\n<li>Urllib3 was bumped from 2.0.3 to 2.0.7 @ <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/183\">pypa/gh-action-pypi-publish#183</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/185\">pypa/gh-action-pypi-publish#185</a></li>\n</ul>\n<h2>:muscle: New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/di\"><code>@\u200bdi</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/pull/179\">pypa/gh-action-pypi-publish#179</a></li>\n</ul>\n<p><strong>:mirror: Full Diff</strong>: <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11\">https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2f6f737ca5f74c637829c0f5c3acd0e29ea5e8bf\"><code>2f6f737</code></a> Merge commit PR <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/184\">#184</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2fa448ab0cb5d361fc9e7faa3d0046366bd2db64\"><code>2fa448a</code></a> Merge PRs <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/190\">#190</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/184\">#184</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/185\">#185</a>, <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/189\">#189</a> and <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/194\">#194</a> into unstable/v1</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/824ad317867cf757fa348a46a1a430cd9bd7ef28\"><code>824ad31</code></a> Revert flake8 to v4.0.1 for WPS</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/41f3f53c7540cba18712b77660518afd98e0b65a\"><code>41f3f53</code></a> Bump cryptography from 41.0.3 to 41.0.6 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/2319287e0a60524271d7d771003e897075162148\"><code>2319287</code></a> twine-upload: ::error, switch nudge order</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/254a0d4ec4eacf3fd4c21bdd327fdd72c45213d9\"><code>254a0d4</code></a> twine-upload: add a nudge for password auth</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/70a33caeb93cb7e19240fbec59f10b44df0c20ce\"><code>70a33ca</code></a> Bump pip from 22.3.1 to 23.3 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/102f507b758434b11f3a302e53c72ebad30ebef8\"><code>102f507</code></a> Bump urllib3 from 2.0.6 to 2.0.7 in /requirements</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/79739dc2f2bf6bcfd21ecf9af9f06bd643dbeeae\"><code>79739dc</code></a> Merge pull request <a href=\"https://redirect.github.com/pypa/gh-action-pypi-publish/issues/183\">#183</a> from pypa/dependabot/pip/requirements/urllib3-2.0.6</li>\n<li><a href=\"https://github.com/pypa/gh-action-pypi-publish/commit/9a3f9ad5bc96111f11d014e047f1ac7dc644ff56\"><code>9a3f9ad</code></a> [pre-commit.ci] pre-commit autoupdate</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pypi-publish/compare/v1.8.10...v1.8.11\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pypa/gh-action-pypi-publish&package-manager=github_actions&previous-version=1.8.10&new-version=1.8.11)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-11-29T20:49:51Z",
  "comments":1,
  "created_at":"2023-11-29T17:46:14Z",
  "draft":false,
  "id":2017112735,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gsoo_",
  "number":2855,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-29T20:49:51Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump pypa/gh-action-pypi-publish from 1.8.10 to 1.8.11",
  "updated_at":"2023-11-29T20:49:52Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Description of new feature\n\nDask-awkward currently imports this private name.",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-11-29T23:35:06Z",
  "id":2017611950,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54QlCu",
  "number":2856,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"Export `remove_structure` and `prettyprint` for dask-awkward",
  "updated_at":"2024-01-19T23:55:17Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Currently we follow a ufunc branch in `full_like`, which can be avoided. This branch may fail for non-castable fill-value dtypes e.g. datetime64.",
  "closed_at":"2023-11-30T10:29:29Z",
  "comments":2,
  "created_at":"2023-11-29T23:38:28Z",
  "draft":false,
  "id":2017614731,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5guXKx",
  "number":2857,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-11-30T10:29:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: only compare scalars in full_like",
  "updated_at":"2023-11-30T10:29:31Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The test-runner for the GPU tests failed before hitting pytest.",
  "closed_at":"2023-11-30T12:59:39Z",
  "comments":0,
  "created_at":"2023-11-30T07:02:10Z",
  "id":2018007795,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54SFrz",
  "number":2858,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Setup Failed",
  "updated_at":"2023-11-30T12:59:39Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit  with the following pytest output:\n\n```\n\n```",
  "closed_at":"2023-11-30T12:59:36Z",
  "comments":0,
  "created_at":"2023-11-30T07:02:11Z",
  "id":2018007823,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54SFsP",
  "number":2859,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-11-30T12:59:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"> [!TIP]\r\n> This PR makes the following changes:\r\n> 1. Merging categoricals is an error, see #2853 \r\n> 2. `_mergemany` no longer enforces a backend\r\n> 3. More bugs in merging are fixed\r\n> 4. New `ak.operations.ak_concatenate.enforce_concatenated_form` for enforcing a concatenated form.\r\n\r\n`dask-awkward` needs to be able to compute a concatenation operation _but_ without actually concatenating buffers. @jpivarski and I discussed the various ways we could go about this:\r\n\r\n1. Concatenate some typetracer arrays and use `enforce_type` to produce partitions of the correct _type_.\r\n2. Concatenate each partition with a length-zero array of the final type.\r\n3. Concatenate some typetracer arrays and introduce a new `enforce_form` to produce partitions of the correct _form_.\r\n4. Add a special path to `_mergemany` that doesn't touch buffers if they have known length-zero.\r\n\r\nEach of these solutions has drawbacks. In particular, modifying existing code to satisfy two constraints (perform an optimal merge in convenient amounts of code, and have a length-zero path) is more difficult than having a dedicated function that only handles the \"don't touch buffers\" case. As such, this PR instead adds a new function that acts like `enforce_form` _but_ under the conditions that the `form` was build from `ak.concatenate((layout, ...), axis=0)` where `layout` is the content being enforced to `form`. This allows us to make many simplifying assumptions according to the implementation of `_mergemany`.\r\n",
  "closed_at":"2023-12-05T19:08:04Z",
  "comments":1,
  "created_at":"2023-11-30T12:39:36Z",
  "draft":false,
  "id":2018586144,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5gxqtU",
  "number":2860,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-05T19:08:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `enforce_concatenated_form`",
  "updated_at":"2023-12-05T19:08:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThe presence of 0-D scalars as input to `ak.to_layout` presents a tension between preserving scalar-ness and mixing backends between 0D scalars and other arrays.\r\n\r\nWe could add a rule to promote 0D arrays to 1D-length-1 arrays. But, on balance this would affect typetracer, whose scalars are only ever 0D arrays. In general, the scalar-ness matters. Another solution would be to implement a new function that maps 0D scalars between backends.",
  "closed_at":null,
  "comments":3,
  "created_at":"2023-12-01T10:59:09Z",
  "id":2020634628,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54cHAE",
  "number":2861,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":"reopened",
  "title":"Internal promotion rules should distinguish between 0-D scalars and non 0-D scalars",
  "updated_at":"2024-01-22T17:31:50Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"We already have `Type.is_equal_to` and `Content.is_equal_to`. This PR extends this to `Form`, and fixes some bugs in the existing implementations.",
  "closed_at":"2023-12-01T19:16:35Z",
  "comments":0,
  "created_at":"2023-12-01T13:01:46Z",
  "draft":false,
  "id":2020841203,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5g5ZX6",
  "number":2862,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-01T19:16:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add `Form.is_equal_to`",
  "updated_at":"2023-12-01T19:16:36Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The test-runner for the GPU tests failed before hitting pytest.",
  "closed_at":"2023-12-02T09:09:13Z",
  "comments":0,
  "created_at":"2023-12-01T14:23:04Z",
  "id":2020984163,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54dcVj",
  "number":2863,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"not_planned",
  "title":"GPU Tests Setup Failed",
  "updated_at":"2023-12-02T09:09:13Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit  with the following pytest output:\n\n```\n\n```",
  "closed_at":"2023-12-02T09:09:01Z",
  "comments":0,
  "created_at":"2023-12-01T14:23:05Z",
  "id":2020984195,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54dcWD",
  "number":2864,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"not_planned",
  "title":"GPU Tests Failed",
  "updated_at":"2023-12-02T09:09:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\r\n\r\n2.5.0\r\n\r\n### Description and code to reproduce\r\n\r\n## Context\r\nIn order to pass a ragged array in a class wrapped using `@jitclass` of `numba`. I want to use `ak.Array` to store some information that will be used inside a method of the class. \r\n\r\n## Example of usage\r\n```python\r\nimport awkward as ak\r\nimport numpy as np\r\nfrom numba.experimental.jitclass import jitclass\r\nfrom unittest import TestCase, main\r\n\r\n@jitclass([(\"arr\", ak.Array([[[0]]]).numba_type)])\r\nclass A:\r\n    def __init__(self, arr):\r\n        self.arr = arr\r\n\r\n    def do_smth(self):\r\n        # some access to information stored in self.arr\r\n        self.arr[0][0]\r\n        print(len(self.arr))\r\n\r\ndef create_a():\r\n    arr = ak.Array([\r\n         [[0]], \r\n         [[0]],\r\n         [[0]]\r\n    ])\r\n    return A(arr=arr)\r\n\r\nclass TestA(TestCase):\r\n    def test_a(self):\r\n        a = create_a()\r\n        \r\n        a.do_smth()\r\n        x = np.zeros(4)\r\n        a.do_smth()\r\n\r\nmain(argv=[''], verbosity=2, exit=False)\r\n```\r\n\r\n## Issue\r\nThis code raises : \r\n`ValueError: slice index out of bounds`\r\n![Capture d\u2019e\u0301cran 2023-12-01 a\u0300 16 25 11](https://github.com/scikit-hep/awkward/assets/33251676/658f79a7-bafd-4753-8097-996b0b994ab2)\r\n\r\nIt seems like only the first call to `do_smth` can access to `self.arr`, but the second call can't find anymore the values in `self.arr`\r\n\r\n**What's more surprising** is that \r\n- When I init `arr` with more or less elements, it works ... It's only when there are exactly 3 elements that breaks\r\n- If I remove `x = np.zeros(4)`, it works as well\r\n- If I use `x = np.zeros(3)`, it works as well ...\r\n\r\n\r\nSo, if anymore could help me to explain this bug and how to solve it \ud83e\udd72",
  "closed_at":"2024-01-20T00:00:45Z",
  "comments":4,
  "created_at":"2023-12-01T15:25:43Z",
  "id":2021097788,
  "labels":null,
  "locked":true,
  "milestone":null,
  "node_id":"I_kwDODBCWws54d4E8",
  "number":2865,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Using Awkward Arrays in Numba's `jitclass`",
  "updated_at":"2024-01-20T00:00:45Z",
  "user":"MDQ6VXNlcjMzMjUxNjc2"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The assignment of `attrs` to derived arrays was missing in highlevel. This fixes it, and adds more tests!",
  "closed_at":"2023-12-01T21:09:45Z",
  "comments":2,
  "created_at":"2023-12-01T19:12:12Z",
  "draft":false,
  "id":2021442147,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5g7cQh",
  "number":2866,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-01T21:09:45Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: `Array.__getitem__` should set `attrs` on result",
  "updated_at":"2023-12-01T21:09:46Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.5.0\r\n\r\n### Description and code to reproduce\r\n\r\n```python3\r\nimport json\r\nimport awkward as ak\r\nimport numpy as np\r\n\r\nfromjson = {\r\n    \"class\": \"RecordArray\",\r\n    \"fields\": [\"muon\"],\r\n    \"contents\": [\r\n        {\r\n            \"class\": \"ListOffsetArray\",\r\n            \"offsets\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\"pt\", \"eta\", \"phi\", \"crossref\", \"thing1\"],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_pt!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_eta!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_phi!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"ListOffsetArray\",\r\n                        \"offsets\": \"i64\",\r\n                        \"content\": {\r\n                            \"class\": \"NumpyArray\",\r\n                            \"primitive\": \"int64\",\r\n                            \"inner_shape\": [],\r\n                            \"parameters\": {},\r\n                            \"form_key\": \"muon_crossref_content!\",\r\n                        },\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_crossref_index!\",\r\n                    },\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"int64\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {},\r\n                        \"form_key\": \"muon_thing1!\",\r\n                    },\r\n                ],\r\n                \"parameters\": {},\r\n                \"form_key\": \"muon_record!\",\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": \"muon_list_outer!\",\r\n        },\r\n    ],\r\n    \"parameters\": {},\r\n    \"form_key\": \"outer!\",\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak.typetracer.typetracer_with_report(form)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\nttarray.attrs = {'@test': None, 'test': None}\r\n\r\nassert \"@test\" in ttarray.attrs\r\nassert \"test\" in ttarray.attrs\r\n\r\nassert \"@test\" in ttarray.muon.attrs\r\nassert \"test\" in ttarray.muon.attrs\r\n```\r\n\r\nfails with:\r\n```\r\nTraceback (most recent call last):\r\n  File \"attrs_madness1.py\", line 80, in <module>\r\n    assert \"@test\" in ttarray.muon.attrs\r\nAssertionError\r\n```\r\n\r\nand `ttarray.muon.attrs` is completely empty.\r\n\r\nMy understanding from talking to @agoose77 is that all attrs of daughters of ttarray should share attrs with ttarray!",
  "closed_at":"2023-12-04T14:39:04Z",
  "comments":1,
  "created_at":"2023-12-01T22:49:32Z",
  "id":2021690441,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws54gIxJ",
  "number":2867,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"attrs do no propagate properly to sub-record arrays",
  "updated_at":"2023-12-04T14:39:04Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"I've been wanting to do this for a while, and seeing @jpivarski's CI in the integration test repository inspired me to actually do it.\r\n\r\nThis PR merges our Linux, Windows, and MacOS test jobs into a single branching job.",
  "closed_at":"2023-12-19T19:44:35Z",
  "comments":6,
  "created_at":"2023-12-04T22:58:25Z",
  "draft":false,
  "id":2024948013,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hHIeo",
  "number":2869,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-19T19:44:35Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: simplify test workflow",
  "updated_at":"2023-12-19T21:29:47Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjM4MzA5MA==",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The header only tests were compiled in `Release` mode,\r\ntherefore making all `assert` statements ineffective.\r\n\r\nSee for example https://github.com/zonca/awkward/pull/4\r\nwhere I add an error in the unit test but tests pass anyway\r\n",
  "closed_at":"2023-12-07T01:41:58Z",
  "comments":3,
  "created_at":"2023-12-05T20:42:45Z",
  "draft":false,
  "id":2027089479,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hOfxZ",
  "number":2870,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-07T01:41:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: compile header only tests in Debug mode",
  "updated_at":"2023-12-07T01:42:02Z",
  "user":"MDQ6VXNlcjM4MzA5MA=="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Forked repositories normally do not have secrets correctly configured,\nso the deploy preview of the docs always fail, making PRs on forks always failing.\nOf course this won't work if you have cases where you have forked repos with secrets.\n\nSee\nhttps://github.com/orgs/community/discussions/26409#discussioncomment-3251822\n",
  "closed_at":"2024-02-13T12:12:02Z",
  "comments":5,
  "created_at":"2023-12-06T03:37:12Z",
  "draft":true,
  "id":2027585087,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hQM_R",
  "number":2871,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: deploy branch preview docs only on main repo",
  "updated_at":"2024-02-13T12:12:03Z",
  "user":"MDQ6VXNlcjM4MzA5MA=="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"`cuda_kernels` for complex type reducers:\r\n- [x] awkward_reduce_argmax_complex\r\n- [x] awkward_reduce_argmin_complex\r\n- [x] awkward_reduce_max_complex\r\n- [x] awkward_reduce_min_complex\r\n- [x] awkward_reduce_sum_complex\r\n- [ ] awkward_reduce_prod_complex\r\n- [x] awkward_reduce_sum_bool_complex\r\n- [x] awkward_reduce_prod_bool_complex\r\n- [x] awkward_reduce_countnonzero_complex",
  "closed_at":"2023-12-12T18:50:42Z",
  "comments":3,
  "created_at":"2023-12-06T11:02:53Z",
  "draft":true,
  "id":2028289536,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hSlQp",
  "number":2872,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add complex datatype `cuda_kernels` for reducers",
  "updated_at":"2024-01-15T15:58:21Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release, we update node version runtime from node16 to node20 (<a href=\"https://redirect.github.com/actions/setup-python/pull/772\">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0\">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>\n<h2>v4.8.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release we added support for GraalPy (<a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>\n<pre lang=\"yaml\"><code>steps:\n- uses: actions/checkout@v4\n- uses: actions/setup-python@v4 \n  with:\n    python-version: 'graalpy-22.3' \n- run: python my_script.py\n</code></pre>\n<p>Besides, the release contains such changes as:</p>\n<ul>\n<li>Trim python version when reading from file by <a href=\"https://github.com/FerranPares\"><code>@\u200bFerranPares</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li>Use non-deprecated versions in examples by <a href=\"https://github.com/jeffwidman\"><code>@\u200bjeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n<li>Change deprecation comment to past tense by <a href=\"https://github.com/jeffwidman\"><code>@\u200bjeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/723\">actions/setup-python#723</a></li>\n<li>Bump <code>@\u200bbabel/traverse</code> from 7.9.0 to 7.23.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/743\">actions/setup-python#743</a></li>\n<li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=\"https://github.com/cclauss\"><code>@\u200bcclauss</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/729\">actions/setup-python#729</a></li>\n<li>Examples now use checkout@v4 by <a href=\"https://github.com/simonw\"><code>@\u200bsimonw</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/738\">actions/setup-python#738</a></li>\n<li>Update actions/checkout to v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@\u200bdmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/761\">actions/setup-python#761</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/FerranPares\"><code>@\u200bFerranPares</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li><a href=\"https://github.com/timfel\"><code>@\u200btimfel</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a></li>\n<li><a href=\"https://github.com/jeffwidman\"><code>@\u200bjeffwidman</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.8.0\">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>\n<h2>v4.7.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/702\">actions/setup-python#702</a></li>\n<li>Add range validation for toml files by <a href=\"https://github.com/dmitry-shibanov\"><code>@\u200bdmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/726\">actions/setup-python#726</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.1\">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c\"><code>0a5c615</code></a> Update action to node20 (<a href=\"https://redirect.github.com/actions/setup-python/issues/772\">#772</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955\"><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=\"https://redirect.github.com/actions/setup-python/issues/773\">#773</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa\"><code>b64ffca</code></a> update actions/checkout to v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/761\">#761</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587\"><code>8d28961</code></a> Examples now use checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/738\">#738</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56\"><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/729\">#729</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a\"><code>e8111ce</code></a> Bump <code>@\u200bbabel/traverse</code> from 7.9.0 to 7.23.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/743\">#743</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2bdae58b3afecd77057eb9e\"><code>a00ea43</code></a> add fix for graalpy ci (<a href=\"https://redirect.github.com/actions/setup-python/issues/741\">#741</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b\"><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=\"https://redirect.github.com/actions/setup-python/issues/723\">#723</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758\"><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=\"https://redirect.github.com/actions/setup-python/issues/724\">#724</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060\"><code>5f2af21</code></a> Add GraalPy support (<a href=\"https://redirect.github.com/actions/setup-python/issues/694\">#694</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/v4...v5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-12-06T18:13:58Z",
  "comments":1,
  "created_at":"2023-12-06T17:22:01Z",
  "draft":false,
  "id":2029043958,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hVMdu",
  "number":2873,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-06T18:13:58Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump actions/setup-python from 4 to 5",
  "updated_at":"2023-12-06T18:14:00Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":null,
  "closed_at":"2023-12-07T13:03:17Z",
  "comments":3,
  "created_at":"2023-12-06T19:42:25Z",
  "draft":false,
  "id":2029264509,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hV8ve",
  "number":2874,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-07T13:03:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: formatted kernel-test-data.json for better searching and editing in git.",
  "updated_at":"2023-12-07T13:03:18Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-12-08T11:12:17Z",
  "comments":1,
  "created_at":"2023-12-07T09:52:15Z",
  "draft":false,
  "id":2030338765,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hZllb",
  "number":2875,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-08T11:12:17Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: remove dead code in generate-tests.py",
  "updated_at":"2023-12-08T11:12:17Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Removed the following `cuda_kernels` which had a corresponding `cpu-kernels` in `v1` but not in `v2`:\r\n\r\n1. awkward_ByteMaskedArray_getitem_carry.cu\r\n2. awkward_ByteMaskedArray_mask.cu\r\n3. awkward_Index_to_Index64\r\n4. awkward_IndexedArray_getitem_nextcarry_outindex_mask\r\n5. awkward_IndexedArray_mask\r\n6. awkward_ListOffsetArray_reduce_global_startstop_64\r\n7. awkward_NumpyArray_contiguous_init\r\n8. awkward_NumpyArray_contiguous_next\r\n9. awkward_NumpyArray_fill_tobool\r\n10. awkward_NumpyArray_getitem_boolean_nonzero\r\n11. awkward_NumpyArray_getitem_next_array\r\n12. awkward_NumpyArray_getitem_next_array_advanced\r\n13. awkward_NumpyArray_getitem_next_at\r\n14. awkward_NumpyArray_getitem_next_range\r\n15. awkward_NumpyArray_getitem_next_range_advanced\r\n16. awkward_carry_arange\r\n17. awkward_combinations\r\n18. awkward_content_reduce_zeroparents_64\r\n19. awkward_index_carry_nocheck\r\n20. awkward_regularize_arrayslice\r\n21. awkward_zero_mask\r\n\r\nThis one was in none of the versions:\r\n\r\n22. awkward_index_carry",
  "closed_at":"2023-12-08T08:53:04Z",
  "comments":4,
  "created_at":"2023-12-07T12:38:05Z",
  "draft":false,
  "id":2030674123,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5haw-s",
  "number":2876,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-08T08:53:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"refactor: remove obsolete cuda_kernels",
  "updated_at":"2023-12-08T08:53:05Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Some minor fixes in some of the `cuda_kernels`.",
  "closed_at":"2023-12-11T08:12:34Z",
  "comments":2,
  "created_at":"2023-12-08T10:30:20Z",
  "draft":false,
  "id":2032396454,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hgpW9",
  "number":2877,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-11T08:12:34Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: errors in existing `cuda_kernels`",
  "updated_at":"2023-12-11T09:06:04Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEzOTA2ODI=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\n2.5.1rc1\n\n### Description and code to reproduce\n\nThe `tests/test_2799_numba_ufunc_resolution.py::test_numba_ufunc_legacy` test fails with `TypeError: return type must be specified for object mode` \r\n\r\n```python\r\n% python\r\nPython 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import numpy as np\r\n>>> np.__version__\r\n'1.24.3'\r\n>>> import numba\r\n>>> numba.__version__\r\n'0.57.0'\r\n>>> import awkward as ak\r\n>>> ak.__version__\r\n'2.5.1rc1'\r\n```",
  "closed_at":"2024-01-11T07:54:55Z",
  "comments":0,
  "created_at":"2023-12-08T11:05:23Z",
  "id":2032447394,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55JK-i",
  "number":2878,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`test_numba_ufunc_legacy` fails with `TypeError: return type must be specified for object mode`",
  "updated_at":"2024-01-11T07:54:55Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR recognises that Numba isn't being registered for a specific test, and fixes it!",
  "closed_at":"2023-12-08T21:15:21Z",
  "comments":3,
  "created_at":"2023-12-08T12:06:23Z",
  "draft":false,
  "id":2032541993,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hhIb8",
  "number":2879,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-08T21:15:21Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: register Numba in test",
  "updated_at":"2023-12-08T21:15:22Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Added some `cuda_kernels`\r\n\r\n- awkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_fromshifts_64\r\n- awkward_IndexedArray_fill\r\n- awkward_ListArray_fill\r\n- awkward_IndexedArray_numnull_unique\r\n- awkward_RegularArray_rpad_and_clip_axis1\r\n- awkward_index_rpad_and_clip_axis0\r\n- awkward_UnionArray_simplify\r\n- awkward_UnionArray_simplify_one\r\n- awkward_UnionArray_fillindex\r\n- awkward_UnionArray_fillindex_count\r\n- awkward_UnionArray_filltags\r\n- awkward_UnionArray_filltags_const\r\n- awkward_NumpyArray_fill",
  "closed_at":"2023-12-20T08:20:19Z",
  "comments":3,
  "created_at":"2023-12-08T12:38:39Z",
  "draft":false,
  "id":2032586889,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hhSMX",
  "number":2880,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-20T08:20:19Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add some simpler `cuda_kernels`",
  "updated_at":"2023-12-20T08:20:20Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\n\n2.5.0\n\n### Description and code to reproduce\n\nTrying to concatenate too many nested arrays at once results in a crash.\r\nIn my case, too many means more than 129 arrays. So close to the int8 range.\r\nAs a workaround one can concatenate the arrays in an iterative way by using the concatenate function multiple times.\r\n\r\nMinimal example:\r\nThis works fine:\r\n```\r\na = ak.Array([[1]])\r\nak.concatenate([a for i in range(128)], axis = -1)\r\n```  \r\n\r\nThis fails:\r\n```\r\na = ak.Array([[1]])\r\nak.concatenate([a for i in range(130)], axis = -1)\r\n```\r\n\r\nTraceback:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\nFile ~\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\contents\\numpyarray.py:349, in NumpyArray._carry(self, carry, allow_lazy)\r\n    348 try:\r\n--> 349     nextdata = self._data[carry.data]\r\n    350 except IndexError as err:\r\n\r\nIndexError: index 2352008096080 is out of bounds for axis 0 with size 130\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\contents\\numpyarray.py\", line 349, in _carry\r\n    nextdata = self._data[carry.data]\r\n               ~~~~~~~~~~^^^^^^^^^^^^\r\nIndexError: index 1867296635536 is out of bounds for axis 0 with size 130\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\_dispatch.py\", line 62, in dispatch\r\n    next(gen_or_result)\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\operations\\ak_concatenate.py\", line 61, in concatenate\r\n    return _impl(arrays, axis, mergebool, highlevel, behavior, attrs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\operations\\ak_concatenate.py\", line 330, in _impl\r\n    out = ak._broadcasting.broadcast_and_apply(\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\_broadcasting.py\", line 1027, in broadcast_and_apply\r\n    out = apply_step(\r\n          ^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\_broadcasting.py\", line 1005, in apply_step\r\n    return continuation()\r\n           ^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\_broadcasting.py\", line 974, in continuation\r\n    return broadcast_any_list()\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\_broadcasting.py\", line 630, in broadcast_any_list\r\n    outcontent = apply_step(\r\n                 ^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\_broadcasting.py\", line 987, in apply_step\r\n    result = action(\r\n             ^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\operations\\ak_concatenate.py\", line 321, in action\r\n    inner = ak.contents.UnionArray.simplified(\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\contents\\unionarray.py\", line 455, in simplified\r\n    next = contents[0]._carry(index, True)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\flori\\miniforge3\\envs\\uni4\\Lib\\site-packages\\awkward\\contents\\numpyarray.py\", line 351, in _carry\r\n    raise ak._errors.index_error(self, carry.data, str(err)) from err\r\nIndexError: cannot slice NumpyArray (of length 130) with array([            0,             1,             2,             3,\r\n                   4,             5,             6,             7,\r\n                   8,             9,            10,            11,\r\n                  12,            13,            14,            15,\r\n                  16,            17,            18,            19,\r\n                  20,            21,            22,            23,\r\n                  24,            25,            26,            27,\r\n                  28,            29,            30,            31,\r\n                  32,            33,            34,            35,\r\n                  36,            37,            38,            39,\r\n                  40,            41,            42,            43,\r\n                  44,            45,            46,            47,\r\n                  48,            49,            50,            51,\r\n                  52,            53,            54,            55,\r\n                  56,            57,            58,            59,\r\n                  60,            61,            62,            63,\r\n                  64,            65,            66,            67,\r\n                  68,            69,            70,            71,\r\n                  72,            73,            74,            75,\r\n                  76,            77,            78,            79,\r\n                  80,            81,            82,            83,\r\n                  84,            85,            86,            87,\r\n                  88,            89,            90,            91,\r\n                  92,            93,            94,            95,\r\n                  96,            97,            98,            99,\r\n                 100,           101,           102,           103,\r\n                 104,           105,           106,           107,\r\n                 108,           109,           110,           111,\r\n                 112,           113,           114,           115,\r\n                 116,           117,           118,           119,\r\n                 120,           121,           122,           123,\r\n                 124,           125,           126,           127,\r\n       1867296635536, 1867296635536], dtype=int64): index 1867296635536 is out of bounds for axis 0 with size 130\r\n\r\nThis error occurred while calling\r\n\r\n    ak.concatenate(\r\n        [<Array [[1]] type='1 * var * int64'>, <Array [[1]] type='1 * var * i...\r\n        axis = -1\r\n    )\r\n\r\n```",
  "closed_at":null,
  "comments":1,
  "created_at":"2023-12-08T14:24:32Z",
  "id":2032754221,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55KV4t",
  "number":2881,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"ak.concatenate fails trying to concatenate too many nested arrays",
  "updated_at":"2023-12-08T15:37:47Z",
  "user":"MDQ6VXNlcjExMzA2NzMy"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"Little bit of modernization.\n",
  "closed_at":"2023-12-11T12:01:54Z",
  "comments":1,
  "created_at":"2023-12-08T16:58:29Z",
  "draft":false,
  "id":2033014892,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hiwto",
  "number":2882,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-11T12:01:54Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: use tomli",
  "updated_at":"2023-12-12T09:32:13Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjM4MzA5MA==",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"As discussed with @jpivarski and @ManasviGoyal, here is the implementation of the Indexed layout builder.\r\nThe final objective is to use this for `EnumType` instead of using `NumpyBuilder`.",
  "closed_at":"2023-12-08T17:21:21Z",
  "comments":5,
  "created_at":"2023-12-08T17:02:17Z",
  "draft":false,
  "id":2033019791,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hixwL",
  "number":2883,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-08T17:21:21Z"
  },
  "reactions":{
   "hooray":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"feat: Implement Indexed builder",
  "updated_at":"2024-01-18T17:06:23Z",
  "user":"MDQ6VXNlcjM4MzA5MA=="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"NONE",
  "body":"### Version of Awkward Array\r\n\r\n2.5.0\r\n\r\n### Description and code to reproduce\r\n\r\nTested with awkward 2.4.6 through 2.5.1rc1 and PyArrow 13.0.0 through 14.0.1. Conda environment created with, e.g., `mamba install -y jupyterlab awkward=2.5.0 pyarrow=14.0.1`.\r\n\r\n```python\r\nimport pyarrow as pa\r\nimport awkward as ak\r\nary = pa.chunked_array([[\"foo\", \"bar\"], [\"blah\", \"bleh\"]])\r\nak.from_arrow(ary)\r\n```\r\nresults in `AttributeError: 'UnmaskedArray' object has no attribute '__pyarrow_original'`.\r\n\r\n<details>\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[12], line 1\r\n----> 1 ak.from_arrow(ary)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/_dispatch.py:39, in named_high_level_function.<locals>.dispatch(*args, **kwargs)\r\n     35 @wraps(func)\r\n     36 def dispatch(*args, **kwargs):\r\n     37     # NOTE: this decorator assumes that the operation is exposed under `ak.`\r\n     38     with OperationErrorContext(name, args, kwargs):\r\n---> 39         gen_or_result = func(*args, **kwargs)\r\n     40         if isgenerator(gen_or_result):\r\n     41             array_likes = next(gen_or_result)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/operations/ak_from_arrow.py:45, in from_arrow(array, generate_bitmasks, highlevel, behavior, attrs)\r\n     15 @high_level_function()\r\n     16 def from_arrow(\r\n     17     array, *, generate_bitmasks=False, highlevel=True, behavior=None, attrs=None\r\n     18 ):\r\n     19     \"\"\"\r\n     20     Args:\r\n     21         array (`pyarrow.Array`, `pyarrow.ChunkedArray`, `pyarrow.RecordBatch`, or `pyarrow.Table`):\r\n   (...)\r\n     43     See also #ak.to_arrow, #ak.to_arrow_table, #ak.from_parquet, #ak.from_arrow_schema.\r\n     44     \"\"\"\r\n---> 45     return _impl(array, generate_bitmasks, highlevel, behavior, attrs)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/operations/ak_from_arrow.py:67, in _impl(array, generate_bitmasks, highlevel, behavior, attrs)\r\n     65 if awkwardarrow_type is None:\r\n     66     if isinstance(out, ak.contents.UnmaskedArray):\r\n---> 67         out = awkward._connect.pyarrow.remove_optiontype(out)\r\n     68 else:\r\n     69     if awkwardarrow_type.mask_type in (None, \"IndexedArray\"):\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/_connect/pyarrow.py:913, in remove_optiontype(akarray)\r\n    912 def remove_optiontype(akarray):\r\n--> 913     return akarray.__pyarrow_original\r\n\r\nAttributeError: 'UnmaskedArray' object has no attribute '__pyarrow_original'\r\n\r\nThis error occurred while calling\r\n\r\n    ak.from_arrow(\r\n        ChunkedArray-instance\r\n    )\r\n```\r\n\r\n</details>\r\n\r\n```python\r\nimport pyarrow as pa\r\nimport awkward as ak\r\nary = pa.chunked_array([[1,2,3], [4,5]])\r\nak.from_arrow(ary)\r\n```\r\nresults in `ModuleNotFoundError: No module named 'pandas'`.\r\n\r\n<details>\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\nCell In[2], line 5\r\n      3 #ary = pa.chunked_array([[\"foo\", \"bar\"], [\"blah\", \"bleh\"]])\r\n      4 ary = pa.chunked_array([[1,2,3], [4,5]])\r\n----> 5 ak.from_arrow(ary)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/_dispatch.py:39, in named_high_level_function.<locals>.dispatch(*args, **kwargs)\r\n     35 @wraps(func)\r\n     36 def dispatch(*args, **kwargs):\r\n     37     # NOTE: this decorator assumes that the operation is exposed under `ak.`\r\n     38     with OperationErrorContext(name, args, kwargs):\r\n---> 39         gen_or_result = func(*args, **kwargs)\r\n     40         if isgenerator(gen_or_result):\r\n     41             array_likes = next(gen_or_result)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/operations/ak_from_arrow.py:45, in from_arrow(array, generate_bitmasks, highlevel, behavior, attrs)\r\n     15 @high_level_function()\r\n     16 def from_arrow(\r\n     17     array, *, generate_bitmasks=False, highlevel=True, behavior=None, attrs=None\r\n     18 ):\r\n     19     \"\"\"\r\n     20     Args:\r\n     21         array (`pyarrow.Array`, `pyarrow.ChunkedArray`, `pyarrow.RecordBatch`, or `pyarrow.Table`):\r\n   (...)\r\n     43     See also #ak.to_arrow, #ak.to_arrow_table, #ak.from_parquet, #ak.from_arrow_schema.\r\n     44     \"\"\"\r\n---> 45     return _impl(array, generate_bitmasks, highlevel, behavior, attrs)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/operations/ak_from_arrow.py:55, in _impl(array, generate_bitmasks, highlevel, behavior, attrs)\r\n     51 pyarrow = awkward._connect.pyarrow.pyarrow\r\n     53 ctx = HighLevelContext(behavior=behavior, attrs=attrs).finalize()\r\n---> 55 out = awkward._connect.pyarrow.handle_arrow(\r\n     56     array, generate_bitmasks=generate_bitmasks, pass_empty_field=True\r\n     57 )\r\n     59 if isinstance(array, (pyarrow.lib.Array, pyarrow.lib.ChunkedArray)):\r\n     60     (\r\n     61         awkwardarrow_type,\r\n     62         storage_type,\r\n     63     ) = awkward._connect.pyarrow.to_awkwardarrow_storage_types(array.type)\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/_connect/pyarrow.py:933, in handle_arrow(obj, generate_bitmasks, pass_empty_field)\r\n    930     return out\r\n    932 elif isinstance(obj, pyarrow.lib.ChunkedArray):\r\n--> 933     layouts = [handle_arrow(x, generate_bitmasks) for x in obj.chunks if len(x) > 0]\r\n    935     if len(layouts) == 1:\r\n    936         return layouts[0]\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/_connect/pyarrow.py:926, in handle_arrow(obj, generate_bitmasks, pass_empty_field)\r\n    922 buffers = obj.buffers()\r\n    924 awkwardarrow_type, storage_type = to_awkwardarrow_storage_types(obj.type)\r\n--> 926 out = popbuffers(\r\n    927     obj, awkwardarrow_type, storage_type, buffers, generate_bitmasks\r\n    928 )\r\n    929 assert len(buffers) == 0\r\n    930 return out\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/awkward/_connect/pyarrow.py:667, in popbuffers(paarray, awkwardarrow_type, storage_type, buffers, generate_bitmasks)\r\n    665     data = numpy.astype(numpy.frombuffer(data, dtype=np.int32), dtype=np.int64)\r\n    666 if dt is None:\r\n--> 667     dt = storage_type.to_pandas_dtype()\r\n    669 out = ak.contents.NumpyArray(\r\n    670     numpy.frombuffer(data, dtype=dt),\r\n    671     parameters=node_parameters(awkwardarrow_type),\r\n    672     backend=NumpyBackend.instance(),\r\n    673 )\r\n    674 return popbuffers_finalize(\r\n    675     out, paarray, validbits, awkwardarrow_type, generate_bitmasks\r\n    676 )\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/pyarrow/types.pxi:336, in pyarrow.lib.DataType.to_pandas_dtype()\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/pyarrow/types.pxi:154, in pyarrow.lib._to_pandas_dtype()\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/pyarrow/pandas-shim.pxi:158, in pyarrow.lib._PandasAPIShim.is_v1()\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/pyarrow/pandas-shim.pxi:100, in pyarrow.lib._PandasAPIShim._check_import()\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/pyarrow/pandas-shim.pxi:53, in pyarrow.lib._PandasAPIShim._import_pandas()\r\n\r\nFile ~/micromamba/envs/test/lib/python3.12/site-packages/pyarrow/pandas-shim.pxi:48, in pyarrow.lib._PandasAPIShim._import_pandas()\r\n\r\nModuleNotFoundError: No module named 'pandas'\r\n\r\nThis error occurred while calling\r\n\r\n    ak.from_arrow(\r\n        ChunkedArray-instance\r\n    )\r\n```\r\n\r\n</details>\r\n\r\nFor the integer ChunkedArray case, if I install pandas, then I get the same error as for the string ChunkedArray.\r\n\r\nFor both integer and string arrays, `ak.from_arrow(ary.combine_chunks())` works.",
  "closed_at":"2023-12-11T16:02:30Z",
  "comments":0,
  "created_at":"2023-12-11T05:17:44Z",
  "id":2034850229,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55SVm1",
  "number":2884,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"`ak.from_arrow` broken for ChunkedArrays",
  "updated_at":"2023-12-11T16:02:30Z",
  "user":"MDQ6VXNlcjI3NTMz"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This reverts commit 76871084d59c409eda591c9afe0e6e04cfba9c49.",
  "closed_at":"2023-12-11T09:23:14Z",
  "comments":0,
  "created_at":"2023-12-11T09:20:43Z",
  "draft":true,
  "id":2035205044,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hqCB4",
  "number":2885,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: errors in existing `cuda_kernels`\"",
  "updated_at":"2023-12-11T09:23:20Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Just noticed that a few changes in #2877 are making the cuda tests fail. So I have fixed them.",
  "closed_at":"2023-12-11T15:58:54Z",
  "comments":8,
  "created_at":"2023-12-11T09:31:30Z",
  "draft":false,
  "id":2035226355,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hqGu-",
  "number":2886,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-11T15:58:54Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: failing tests after #2877",
  "updated_at":"2023-12-11T15:58:55Z",
  "user":"MDQ6VXNlcjU1MTAxODI1"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit 76871084d59c409eda591c9afe0e6e04cfba9c49 with the following pytest output:\n\n```\n.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:58: Failed\n___________ test_cuda_awkward_ListArray32_getitem_jagged_expand_64_3 ___________\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdd345e0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdd345e0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:81: Failed\n___________ test_cuda_awkward_ListArray32_getitem_jagged_expand_64_4 ___________\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdc8e4c0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdc8e4c0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:104: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_1 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_1():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdd81fa0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81370>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81760>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81d00>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81550>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81af0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81dc0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81460>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81490>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81a90>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd81c10>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd62a60>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd62f70>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd62dc0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdd623a0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 3584\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdd623a0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_1():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:35: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_2 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdb41d30>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdb41d30>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:58: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_3 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebd05f490>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 1\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebd05f490>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:81: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_4 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdad9ac0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdad9ac0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:104: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_1 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_1():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebcec7160>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec79d0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec7610>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec7280>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec7f10>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec7820>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec76d0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebcec7790>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc198e0>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc19a00>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc19670>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc19340>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc19c10>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc19610>,\n <awkward._connect.cuda.Invocation object at 0x7f7ebdc19640>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 3584\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdc19640>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_1():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:35: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_2 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdfd6700>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdfd6700>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:58: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_3 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdd34130>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 1\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdd34130>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:81: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_4 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f7ebdc48580>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f7ebdc48580>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:104: Failed\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================ 15 failed, 1214 passed, 120 skipped in 16.13s =================\n\n```",
  "closed_at":"2023-12-11T16:04:45Z",
  "comments":2,
  "created_at":"2023-12-11T10:15:21Z",
  "id":2035311505,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55UGOR",
  "number":2887,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-12-11T16:04:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"The GPU tests failed for commit 76871084d59c409eda591c9afe0e6e04cfba9c49 with the following pytest output:\n\n```\nawkward._connect.cuda.Invocation object at 0x7f6633655af0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655b50>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655040>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874d30>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874f40>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874d00>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874cd0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874430>,\n <awkward._connect.cuda.Invocation object at 0x7f66338745b0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874d90>,\n <awkward._connect.cuda.Invocation object at 0x7f66338746d0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874a30>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874970>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874610>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874400>,\n <awkward._connect.cuda.Invocation object at 0x7f6633874370>,\n <awkward._connect.cuda.Invocation object at 0x7f66338740d0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633889eb0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633889100>,\n <awkward._connect.cuda.Invocation object at 0x7f6633889a60>,\n <awkward._connect.cuda.Invocation object at 0x7f6633889220>,\n <awkward._connect.cuda.Invocation object at 0x7f66337c42e0>,\n <awkward._connect.cuda.Invocation object at 0x7f66337c4970>,\n <awkward._connect.cuda.Invocation object at 0x7f66337c44c0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633827af0>,\n <awkward._connect.cuda.Invocation object at 0x7f66339f69d0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bbab50>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bba970>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bba220>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bba1c0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bba100>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a753a0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a75130>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb5190>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb53d0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb5a60>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb59d0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb5550>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb5d60>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bb5a30>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54880>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54d60>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54eb0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a542b0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54340>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54610>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a547f0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a547c0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54700>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54e80>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a54df0>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2df0>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2580>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2790>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d21f0>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2310>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2e80>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2dc0>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2f10>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2e50>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2100>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2ac0>,\n <awkward._connect.cuda.Invocation object at 0x7f66336d2ca0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 59649\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f66336d2ca0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:58: Failed\n___________ test_cuda_awkward_ListArray32_getitem_jagged_expand_64_3 ___________\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6632bd4520>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6632bd4520>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:81: Failed\n___________ test_cuda_awkward_ListArray32_getitem_jagged_expand_64_4 ___________\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6633ac39a0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6633ac39a0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int32, cupy.int32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int32, int32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray32_getitem_jagged_expand_64.py:104: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_2 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6632bd1940>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd1580>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd17c0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd11f0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd18e0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd1ee0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd15e0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd15b0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bd1730>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655790>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655040>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655dc0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655490>,\n <awkward._connect.cuda.Invocation object at 0x7f6633655ee0>,\n <awkward._connect.cuda.Invocation object at 0x7f66338745b0>,\n <awkward._connect.cuda.Invocation object at 0x7f66338740d0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 3840\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f66338740d0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:58: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_3 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6633a6f5e0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 1\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6633a6f5e0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:81: Failed\n___________ test_cuda_awkward_ListArray64_getitem_jagged_expand_64_4 ___________\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6633adea60>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 1\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6633adea60>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArray64_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.int64)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.int64]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0])\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1])\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, int64, int64>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArray64_getitem_jagged_expand_64.py:104: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_1 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_1():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6632bc08b0>,\n <awkward._connect.cuda.Invocation object at 0x7f6632bc0f40>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a77b20>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a77340>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a77220>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a77400>,\n <awkward._connect.cuda.Invocation object at 0x7f6632a77bb0>,\n <awkward._connect.cuda.Invocation object at 0x7f66338c7610>,\n <awkward._connect.cuda.Invocation object at 0x7f6633b1a130>,\n <awkward._connect.cuda.Invocation object at 0x7f6633b1ab80>,\n <awkward._connect.cuda.Invocation object at 0x7f6633b1a6d0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633b1a970>,\n <awkward._connect.cuda.Invocation object at 0x7f66338881f0>,\n <awkward._connect.cuda.Invocation object at 0x7f6633888b80>,\n <awkward._connect.cuda.Invocation object at 0x7f6633888eb0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 3584\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6633888eb0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_1():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:35: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_2 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f66337c42b0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 1\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f66337c42b0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_2():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 3, 3, 4, 5, 5, 5, 5, 5, 6, 7, 8, 10, 11], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([3, 3, 3])\nsingleoffsets = array([ 2,  3,  3,  4,  5,  5,  5,  5,  5,  6,  7,  8, 10, 11])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:58: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_3 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6633a254f0>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 0\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6633a254f0>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_3():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([2, 2, 2])\nmultistops = array([1, 1, 1])\nsingleoffsets = array([2, 1, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2, 1, 0, 0, 0, 0])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:81: Failed\n__________ test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_4 ___________\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n>           ak_cu.synchronize_cuda()\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream = <Stream 0 (device -1)>\n\n    def synchronize_cuda(stream=None):\n        cupy = import_cupy(\"Awkward Arrays with CUDA\")\n    \n        if stream is None:\n            stream = cupy.cuda.get_current_stream()\n    \n        stream.synchronize()\n    \n        invocation_index = cuda_streamptr_to_contexts[stream.ptr][0].get().tolist()\n        contexts = cuda_streamptr_to_contexts[stream.ptr][1]\n    \n        if invocation_index != NO_ERROR:\n            invoked_kernel = contexts[int(invocation_index // math.pow(2, ERROR_BITS))]\n            cuda_streamptr_to_contexts[stream.ptr] = (\n                cupy.array(NO_ERROR),\n                [],\n            )\n>           raise invoked_kernel.error_context.decorate_exception(\n                ValueError,\n                ValueError(\n                    f\"{kernel_errors[invoked_kernel.name][int(invocation_index % math.pow(2, ERROR_BITS))]} in compiled CUDA code ({invoked_kernel.name})\"\n                ),\n            )\nE           AttributeError: 'NoneType' object has no attribute 'decorate_exception'\n\ncontexts   = [<awkward._connect.cuda.Invocation object at 0x7f6633a62e80>]\ncupy       = <module 'cupy' from '/opt/build-venv/lib/python3.8/site-packages/cupy/__init__.py'>\ninvocation_index = 1\ninvoked_kernel = <awkward._connect.cuda.Invocation object at 0x7f6633a62e80>\nstream     = <Stream 0 (device -1)>\n\n/opt/build-venv/lib/python3.8/site-packages/awkward/_connect/cuda/__init__.py:215: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_cuda_awkward_ListArrayU32_getitem_jagged_expand_64_4():\n        multistarts = cupy.array([123, 123, 123], dtype=cupy.int64)\n        multistops = cupy.array([123, 123, 123], dtype=cupy.int64)\n        singleoffsets = cupy.array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.int64)\n        tocarry = cupy.array([123, 123, 123], dtype=cupy.int64)\n        fromstarts = cupy.array([0, 0, 0, 0, 0, 0, 0, 0], dtype=cupy.uint32)\n        fromstops = cupy.array([1, 1, 1, 1, 1, 1, 1, 1], dtype=cupy.uint32)\n        jaggedsize = 1\n        length = 3\n        funcC = cupy_backend['awkward_ListArray_getitem_jagged_expand', cupy.int64, cupy.int64, cupy.int64, cupy.int64, cupy.uint32, cupy.uint32]\n        funcC(multistarts, multistops, singleoffsets, tocarry, fromstarts, fromstops, jaggedsize, length)\n    \n        try:\n            ak_cu.synchronize_cuda()\n        except:\n>           pytest.fail(\"This test case shouldn't have raised an error\")\nE           Failed: This test case shouldn't have raised an error\n\nfromstarts = array([0, 0, 0, 0, 0, 0, 0, 0], dtype=uint32)\nfromstops  = array([1, 1, 1, 1, 1, 1, 1, 1], dtype=uint32)\nfuncC      = <CupyKernel awkward_ListArray_getitem_jagged_expand, int64, int64, int64, int64, uint32, uint32>\njaggedsize = 1\nlength     = 3\nmultistarts = array([1, 1, 1])\nmultistops = array([0, 0, 0])\nsingleoffsets = array([1, 0, 2, 3, 1, 2, 0, 0, 1, 1, 2, 3, 1, 2, 3, 1, 1, 1, 1, 1, 1, 1,\n       1, 1, 1])\ntocarry    = array([0, 0, 0])\n\ntests-cuda-kernels/test_cudaawkward_ListArrayU32_getitem_jagged_expand_64.py:104: Failed\n=========================== short test summary info ============================\nSKIPPED [1] tests-cuda/test_1276_cuda_num.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cuda_transfers.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_cupy_interop.py:16: too old Numba version\nSKIPPED [1] tests-cuda/test_1276_from_cupy.py:14: too old Numba version\nSKIPPED [1] tests-cuda/test_1300_same_for_numba_cuda.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda/test_1381_check_errors.py:17: too old Numba version\nSKIPPED [1] tests-cuda/test_1809_array_cuda_jit.py:10: could not import 'numba': No module named 'numba'\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ByteMaskedArray_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray64_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_overlay_mask8_to64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArrayU32_reduce_next_nonlocal_nextshifts_fromshifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_IndexedArray_reduce_next_fix_offsets_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArray64_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_ListOffsetArrayU32_rpad_and_clip_axis1_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_adjust_starts_shifts_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_NumpyArray_reduce_mask_ByteMaskedArray_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmax_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_argmin_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_count_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_countnonzero_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_max_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int16_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_int8_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint16_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_min_uint8_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_prod_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_bool_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float32_float32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_float64_float64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int32_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_bool_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_int64_int8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint32_uint8_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint16_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint32_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint64_64.py:20: Unable to generate any tests for kernel\nSKIPPED [1] tests-cuda-kernels/test_cudaawkward_reduce_sum_uint64_uint8_64.py:20: Unable to generate any tests for kernel\n================ 14 failed, 1215 passed, 120 skipped in 17.43s =================\n\n```",
  "closed_at":"2023-12-11T12:22:00Z",
  "comments":2,
  "created_at":"2023-12-11T10:19:12Z",
  "id":2035321039,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55UIjP",
  "number":2888,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"GPU Tests Failed",
  "updated_at":"2023-12-11T12:22:01Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2884 ",
  "closed_at":"2023-12-11T16:02:29Z",
  "comments":2,
  "created_at":"2023-12-11T12:23:46Z",
  "draft":false,
  "id":2035563072,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hrRQt",
  "number":2889,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-11T16:02:29Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support revertable for concatenate in pyarrow logic",
  "updated_at":"2023-12-11T16:02:30Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"It looks like we have some outstanding fixes needed for pylint. This PR makes those changes to unblock main.",
  "closed_at":"2023-12-11T13:15:03Z",
  "comments":1,
  "created_at":"2023-12-11T12:35:34Z",
  "draft":false,
  "id":2035583795,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hrV17",
  "number":2890,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-11T13:15:02Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: appease pylint",
  "updated_at":"2023-12-11T13:15:03Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.6 \u2192 v0.1.7](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.6...v0.1.7)\n- [github.com/python-jsonschema/check-jsonschema: 0.27.2 \u2192 0.27.3](https://github.com/python-jsonschema/check-jsonschema/compare/0.27.2...0.27.3)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-12-12T17:09:11Z",
  "comments":1,
  "created_at":"2023-12-11T19:40:42Z",
  "draft":false,
  "id":2036400353,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5huJ_w",
  "number":2891,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-12T17:09:11Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-12-12T17:09:12Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Whilst checking our wheel to ensure that the necessary headers are included (c.f. #2892), I noticed that an extra header file has snuck into the archive.\r\n\r\nThis PR ensures we only flatten the `header-only/*/awkward/*` heirarchy.",
  "closed_at":"2023-12-12T17:08:56Z",
  "comments":2,
  "created_at":"2023-12-12T09:29:22Z",
  "draft":false,
  "id":2037337515,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5hxVH0",
  "number":2893,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-12T17:08:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: only copy non-test headers",
  "updated_at":"2023-12-12T17:08:57Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\n```python\r\n>>> array_of_int = ak.Array([\r\n...     [3, 1, 5, 2],\r\n...     [2, 2, -4, 1],\r\n...     [],\r\n...     [3, 7, 4]\r\n... ])\r\n>>> ak.argmin(array_of_int, axis=-1, keepdims=False)\r\n<Array [1, 2, None, 0] type='4 * ?int64'>\r\n```\r\n\r\nis fine because there is no index to return for the minimum of `[]`, but\r\n\r\n```python\r\n>>> ak.argmin(array_of_int, axis=-1, keepdims=True)\r\n<Array [[1], [2], [None], [0]] type='4 * 1 * ?int64'>\r\n```\r\n\r\nis just wrapping each output of the `keepdims=False` case with length 1 lists. This is not \"keeping dims\" and it's not useful as an array-slicer (the primary use-case for `ak.argmin` and `ak.argmax`). What we actually want, for `ak.argmin` and `ak.argmax` only (the only reducers without identities) is\r\n\r\n```python\r\n>>> ak.singletons(ak.argmin(array_of_int, axis=-1, keepdims=False))\r\n<Array [[1], [2], [], [0]] type='4 * var * int64'>\r\n```\r\n\r\nI noticed this while writing tutorials. I'll try to make sure that the tutorial works both ways, with and without this feature. (Not hard because `None` is a placeholder for slicing.)\r\n\r\nI'm surprised that I had never noticed this before. Have we ever discussed this behavior and did we come to the conclusion that it's _supposed_ to do this? It will be a breaking change, but I would definitely call it a bug-fix unless I can be convinced that we intentionally decided on this behavior.",
  "closed_at":"2023-12-12T21:38:08Z",
  "comments":8,
  "created_at":"2023-12-12T20:02:56Z",
  "id":2038468253,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55gI6d",
  "number":2894,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.argmin and ak.argmax with `keepdims=True` is replacing empty lists with `[None]`, rather than `[]`",
  "updated_at":"2023-12-13T14:30:46Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"[The Python module JuliaCall](https://juliapy.github.io/PythonCall.jl/stable/juliacall/#The-Python-module-JuliaCall) can be installed as follows:\r\n```\r\npip install juliacall\r\n```\r\nHere is how it works (see [JuliaPkg](https://github.com/JuliaPy/PyJuliaPkg) for more details):\r\n\r\n```python\r\n % python\r\nPython 3.11.5 (main, Sep 11 2023, 08:19:27) [Clang 14.0.6 ] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from juliacall import Main as jl\r\n[juliapkg] Locating Julia ^1.9\r\n[juliapkg] Using Julia 1.9.2 at /usr/local/bin/julia\r\n[juliapkg] Using Julia project at /Users/yana/anaconda3/julia_env\r\n[juliapkg] Installing packages:\r\n           julia> import Pkg\r\n           julia> Pkg.add([Pkg.PackageSpec(name=\"AwkwardArray\", uuid=\"7d259134-7f60-4bf1-aa00-7452e11bde56\"), Pkg.PackageSpec(name=\"PythonCall\", uuid=\"6099a3de-0909-46bc-b1f4-468b9a2dfc0d\")])\r\n           julia> Pkg.resolve()\r\n           julia> Pkg.precompile()\r\n   Resolving package versions...\r\n    Updating `~/anaconda3/julia_env/Project.toml`\r\n  [7d259134] + AwkwardArray v0.1.2\r\n  [6099a3de] + PythonCall v0.9.15\r\n    Updating `~/anaconda3/julia_env/Manifest.toml`\r\n  [7d259134] + AwkwardArray v0.1.2\r\n  [992eb4ea] + CondaPkg v0.2.22\r\n...\r\n```",
  "closed_at":"2024-01-12T17:12:43Z",
  "comments":5,
  "created_at":"2023-12-13T13:39:32Z",
  "draft":false,
  "id":2039736505,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5h5gMp",
  "number":2896,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2024-01-12T17:12:43Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: configure Julia version and required packages",
  "updated_at":"2024-01-12T17:12:44Z",
  "user":"MDQ6VXNlcjEzOTA2ODI="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"### Version of Awkward Array\n\nmain\n\n### Description and code to reproduce\n\nThis is really frustrating. It turns out that our header-only libraries have not been included in our sdists, which in turn means that they have not ended up in our conda archives. ",
  "closed_at":"2023-12-20T17:46:05Z",
  "comments":0,
  "created_at":"2023-12-13T13:45:52Z",
  "id":2039748753,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws55lBiR",
  "number":2897,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Header-only libraries are not included in SDist archives",
  "updated_at":"2023-12-20T17:46:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":null,
  "comments":8,
  "created_at":"2023-12-13T15:46:58Z",
  "draft":false,
  "id":2039990017,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5h6YC-",
  "number":2898,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"feat: add to_parquet_dataset function",
  "updated_at":"2024-02-12T13:00:00Z",
  "user":"MDQ6VXNlcjcwNDQxNjQx"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Add a string builder to the header-only library to make building arrays of strings easier.",
  "closed_at":"2024-01-29T19:15:54Z",
  "comments":5,
  "created_at":"2023-12-14T16:41:49Z",
  "draft":false,
  "id":2042068426,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iBabO",
  "number":2899,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2024-01-29T19:15:54Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"feat: add string builder",
  "updated_at":"2024-02-02T21:12:21Z",
  "user":"MDQ6VXNlcjM1ODAzMjgw"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/download-artifact/releases\">actions/download-artifact's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>\n<p>For more information, see the <a href=\"https://github.com/actions/toolkit/tree/main/packages/artifact\"><code>@\u200bactions/artifact</code></a> documentation.</p>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/bflad\"><code>@\u200bbflad</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/download-artifact/pull/194\">actions/download-artifact#194</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/download-artifact/compare/v3...v4.0.0\">https://github.com/actions/download-artifact/compare/v3...v4.0.0</a></p>\n<h2>v3.0.2</h2>\n<ul>\n<li>Bump <code>@actions/artifact</code> to v1.1.1 - <a href=\"https://redirect.github.com/actions/download-artifact/pull/195\">actions/download-artifact#195</a></li>\n<li>Fixed a bug in Node16 where if an HTTP download finished too quickly (&lt;1ms, e.g. when it's mocked) we attempt to delete a temp file that has not been created yet <a href=\"hhttps://redirect.github.com/actions/toolkit/pull/1278\">actions/toolkit#1278</a></li>\n</ul>\n<h2>v3.0.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/download-artifact/pull/178\">Bump <code>@\u200bactions/core</code> to 1.10.0</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/download-artifact/commit/7a1cd3216ca9260cd8022db641d960b1db4d1be4\"><code>7a1cd32</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/246\">#246</a> from actions/v4-beta</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/8f32874a49903ea488c5e7d476a9173e8706f409\"><code>8f32874</code></a> licensed cache</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/b5ff8444b1c4fcec8131f3cb1ddade813ddfacb1\"><code>b5ff844</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/245\">#245</a> from actions/robherley/v4-documentation</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/f07a0f73f51b3f1d41667c782c821b9667da9d19\"><code>f07a0f7</code></a> Update README.md</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/7226129829bb686fdff47bd63bbd0d1373993a84\"><code>7226129</code></a> update test workflow to use different artifact names for matrix</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/ada9446619b84dd8a557aaaec3b79b58c4986cdf\"><code>ada9446</code></a> update docs and bump <code>@\u200bactions/artifact</code></li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/7eafc8b729ba790ce8f2cee54be8ad6257af4c7c\"><code>7eafc8b</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/244\">#244</a> from actions/robherley/bump-toolkit</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/3132d12662b5915f20cdbf449465896962101abf\"><code>3132d12</code></a> consume latest toolkit</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/5be1d3867182a382bc59f2775e002595f487aa88\"><code>5be1d38</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/download-artifact/issues/243\">#243</a> from actions/robherley/v4-beta-updates</li>\n<li><a href=\"https://github.com/actions/download-artifact/commit/465b526e63559575a64716cdbb755bc78dfb263b\"><code>465b526</code></a> consume latest <code>@\u200bactions/toolkit</code></li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/download-artifact/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-12-15T13:44:33Z",
  "comments":3,
  "created_at":"2023-12-14T17:08:46Z",
  "draft":false,
  "id":2042120854,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iBl9g",
  "number":2900,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump actions/download-artifact from 3 to 4",
  "updated_at":"2023-12-15T13:44:43Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/upload-artifact/releases\">actions/upload-artifact's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>\n<p>For more information, see the <a href=\"https://github.com/actions/toolkit/tree/main/packages/artifact\"><code>@\u200bactions/artifact</code></a> documentation.</p>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/vmjoseph\"><code>@\u200bvmjoseph</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/upload-artifact/pull/464\">actions/upload-artifact#464</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/upload-artifact/compare/v3...v4.0.0\">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>\n<h2>v3.1.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>chore(github): remove trailing whitespaces by <a href=\"https://github.com/ljmf00\"><code>@\u200bljmf00</code></a> in <a href=\"https://redirect.github.com/actions/upload-artifact/pull/313\">actions/upload-artifact#313</a></li>\n<li>Bump <code>@\u200bactions/artifact</code> version to v1.1.2 by <a href=\"https://github.com/bethanyj28\"><code>@\u200bbethanyj28</code></a> in <a href=\"https://redirect.github.com/actions/upload-artifact/pull/436\">actions/upload-artifact#436</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/upload-artifact/compare/v3...v3.1.3\">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>\n<h2>v3.1.2</h2>\n<ul>\n<li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=\"https://redirect.github.com/actions/upload-artifact/issues/374\">#374</a></li>\n<li>Update all dev dependencies to their most recent versions - <a href=\"https://redirect.github.com/actions/upload-artifact/issues/375\">#375</a></li>\n</ul>\n<h2>v3.1.1</h2>\n<ul>\n<li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=\"https://redirect.github.com/actions/upload-artifact/issues/351\">#351</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump <code>@\u200bactions/artifact</code> to v1.1.0 (<a href=\"https://redirect.github.com/actions/upload-artifact/pull/327\">actions/upload-artifact#327</a>)\n<ul>\n<li>Adds checksum headers on artifact upload (<a href=\"https://redirect.github.com/actions/toolkit/pull/1095\">actions/toolkit#1095</a>) (<a href=\"https://redirect.github.com/actions/toolkit/pull/1063\">actions/toolkit#1063</a>)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/c7d193f32edcb7bfad88892161225aeda64e9392\"><code>c7d193f</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/upload-artifact/issues/466\">#466</a> from actions/v4-beta</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/13131bb095770b4070a7477c3cd2d96e1c16d9f4\"><code>13131bb</code></a> licensed cache</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/4a6c273b9834f66a1d05c170dc3f80f9cdb9def1\"><code>4a6c273</code></a> Merge branch 'main' into v4-beta</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/f391bb91a3d3118aeca171c365bb319ece276b37\"><code>f391bb9</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/upload-artifact/issues/465\">#465</a> from actions/robherley/v4-documentation</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/9653d03c4b74c32144e02dae644fea70e079d4b3\"><code>9653d03</code></a> Apply suggestions from code review</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/875b63076402f25ef9d52c294c86ba4f97810575\"><code>875b630</code></a> add limitations section</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/ecb21463e93740a6be75c3116242169bfdbcb15a\"><code>ecb2146</code></a> add compression example</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/5e7604f84a055838f64ed68bb9904751523081ae\"><code>5e7604f</code></a> trim some repeated info</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/d6437d07581fe318a364512e6cf6b1dca6b4f92c\"><code>d6437d0</code></a> naming</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/1b561557037b4957d7d184e9aac02bec86c771eb\"><code>1b56155</code></a> s/v4-beta/v4/g</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/upload-artifact/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
  "closed_at":"2023-12-15T13:44:42Z",
  "comments":2,
  "created_at":"2023-12-14T17:08:50Z",
  "draft":false,
  "id":2042121012,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iBl_2",
  "number":2901,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore(deps): bump actions/upload-artifact from 3 to 4",
  "updated_at":"2023-12-15T13:44:51Z",
  "user":"MDM6Qm90NDk2OTkzMzM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":null,
  "closed_at":"2024-01-20T00:48:01Z",
  "comments":5,
  "created_at":"2023-12-14T17:37:28Z",
  "draft":false,
  "id":2042168023,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iBwXe",
  "number":2902,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":null
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: add clang-format to pre-commit configuration",
  "updated_at":"2024-01-20T00:48:01Z",
  "user":"MDQ6VXNlcjM1ODAzMjgw"
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This PR updates our various CI actions and reworks the packaging test workflow.",
  "closed_at":"2023-12-19T21:54:36Z",
  "comments":2,
  "created_at":"2023-12-15T13:44:17Z",
  "draft":false,
  "id":2043755077,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iHMHm",
  "number":2904,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-19T21:54:36Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"ci: update `actions/(upload|download)-artifact`",
  "updated_at":"2023-12-19T21:57:58Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\r\n\r\n2.5.1 / coffea 2023.12.0\r\n\r\n### Description and code to reproduce\r\n\r\nThe following code (you will need to pip install coffea):\r\n```python3\r\nfrom coffea.nanoevents import NanoEventsFactory, NanoAODSchema\r\nimport awkward as ak\r\n\r\nif __name__ == \"__main__\":\r\n    NanoAODSchema.error_missing_event_ids = False\r\n\r\n    events = NanoEventsFactory.from_root(\r\n        {\"tests/samples/nano_dy.root\": {\"object_path\": \"Events\", \"steps\": [[0,40]]}},\r\n        metadata={\"dataset\": \"nano_dy\"},\r\n        schemaclass=NanoAODSchema,\r\n    ).events()\r\n\r\n    events[\"leptons\"] = ak.concatenate(\r\n        [events.Electron, events.Muon],\r\n        axis=1,\r\n    )\r\n\r\n    pair = ak.argcombinations(events.leptons, 2, fields=[\"l1\", \"l2\"])\r\n\r\n    print((events.leptons[pair.l1] + events.leptons[pair.l2]).pt.compute())\r\n```\r\nfails with:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/highlevel.py:1511, in Array.__array_ufunc__(self, ufunc, method, *inputs, **kwargs)\r\n   1510 with ak._errors.OperationErrorContext(name, inputs, kwargs):\r\n-> 1511     return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_connect/numpy.py:458, in array_ufunc(ufunc, method, inputs, kwargs)\r\n    456     return None\r\n--> 458 out = ak._broadcasting.broadcast_and_apply(\r\n    459     inputs, action, allow_records=False, function_name=ufunc.__name__\r\n    460 )\r\n    462 if len(out) == 1:\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:1027, in broadcast_and_apply(inputs, action, depth_context, lateral_context, allow_records, left_broadcast, right_broadcast, numpy_to_regular, regular_to_jagged, function_name, broadcast_parameters_rule)\r\n   1026 isscalar = []\r\n-> 1027 out = apply_step(\r\n   1028     backend,\r\n   1029     broadcast_pack(inputs, isscalar),\r\n   1030     action,\r\n   1031     0,\r\n   1032     depth_context,\r\n   1033     lateral_context,\r\n   1034     {\r\n   1035         \"allow_records\": allow_records,\r\n   1036         \"left_broadcast\": left_broadcast,\r\n   1037         \"right_broadcast\": right_broadcast,\r\n   1038         \"numpy_to_regular\": numpy_to_regular,\r\n   1039         \"regular_to_jagged\": regular_to_jagged,\r\n   1040         \"function_name\": function_name,\r\n   1041         \"broadcast_parameters_rule\": broadcast_parameters_rule,\r\n   1042     },\r\n   1043 )\r\n   1044 assert isinstance(out, tuple)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:1005, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, options)\r\n   1004 elif result is None:\r\n-> 1005     return continuation()\r\n   1006 else:\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:974, in apply_step.<locals>.continuation()\r\n    973 elif any(x.is_list and not is_string_like(x) for x in contents):\r\n--> 974     return broadcast_any_list()\r\n    976 # Any RecordArrays?\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:630, in apply_step.<locals>.broadcast_any_list()\r\n    628         nextparameters.append(NO_PARAMETERS)\r\n--> 630 outcontent = apply_step(\r\n    631     backend,\r\n    632     nextinputs,\r\n    633     action,\r\n    634     depth + 1,\r\n    635     copy.copy(depth_context),\r\n    636     lateral_context,\r\n    637     options,\r\n    638 )\r\n    639 assert isinstance(outcontent, tuple)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:1005, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, options)\r\n   1004 elif result is None:\r\n-> 1005     return continuation()\r\n   1006 else:\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:974, in apply_step.<locals>.continuation()\r\n    973 elif any(x.is_list and not is_string_like(x) for x in contents):\r\n--> 974     return broadcast_any_list()\r\n    976 # Any RecordArrays?\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:694, in apply_step.<locals>.broadcast_any_list()\r\n    692         nextparameters.append(NO_PARAMETERS)\r\n--> 694 outcontent = apply_step(\r\n    695     backend,\r\n    696     nextinputs,\r\n    697     action,\r\n    698     depth + 1,\r\n    699     copy.copy(depth_context),\r\n    700     lateral_context,\r\n    701     options,\r\n    702 )\r\n    703 assert isinstance(outcontent, tuple)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:1005, in apply_step(backend, inputs, action, depth, depth_context, lateral_context, options)\r\n   1004 elif result is None:\r\n-> 1005     return continuation()\r\n   1006 else:\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:966, in apply_step.<locals>.continuation()\r\n    965 elif any(x.is_union for x in contents):\r\n--> 966     return broadcast_any_union()\r\n    968 # Any option-types?\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_broadcasting.py:867, in apply_step.<locals>.broadcast_any_union()\r\n    866 if isinstance(x, UnionArray):\r\n--> 867     nextinputs.append(x[mask].project(combo[i]))\r\n    868     i += 1\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/contents/unionarray.py:711, in UnionArray.project(self, index)\r\n    708 nextcarry = ak.index.Index64(\r\n    709     tmpcarry.data[: lenout[0]], nplike=self._backend.index_nplike\r\n    710 )\r\n--> 711 return self._contents[index]._carry(nextcarry, False)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/contents/recordarray.py:532, in RecordArray._carry(self, carry, allow_lazy)\r\n    531 else:\r\n--> 532     contents = [\r\n    533         self.content(i)._carry(carry, allow_lazy)\r\n    534         for i in range(len(self._contents))\r\n    535     ]\r\n    537     # if issubclass(carry.dtype.type, np.integer):\r\n    538     #     length = carry.length\r\n    539     # else:\r\n    540     #     length = self.length\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/contents/recordarray.py:533, in <listcomp>(.0)\r\n    531 else:\r\n    532     contents = [\r\n--> 533         self.content(i)._carry(carry, allow_lazy)\r\n    534         for i in range(len(self._contents))\r\n    535     ]\r\n    537     # if issubclass(carry.dtype.type, np.integer):\r\n    538     #     length = carry.length\r\n    539     # else:\r\n    540     #     length = self.length\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/contents/numpyarray.py:347, in NumpyArray._carry(self, carry, allow_lazy)\r\n    346 try:\r\n--> 347     nextdata = self._data[carry.data]\r\n    348 except IndexError as err:\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_nplikes/placeholder.py:97, in PlaceholderArray.__getitem__(self, index)\r\n     96 else:\r\n---> 97     raise TypeError(\r\n     98         f\"{type(self).__name__} supports only trivial slices, not {type(index).__name__}\"\r\n     99     )\r\n\r\nTypeError: PlaceholderArray supports only trivial slices, not ndarray\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[2], line 40\r\n     31 mt = np.sqrt(2 * l3.pt * events.MET.pt * (1 - np.cos(events.MET.delta_phi(l3))))\r\n     32 q8_hist = (\r\n     33     hda.Hist.new.Reg(\r\n     34         100, 0, 200, name=\"mt\", label=\"$\\ell$-MET transverse mass [GeV]\"\r\n   (...)\r\n     37     .fill(mt)\r\n     38 )\r\n---> 40 q8_hist.compute().plot1d()\r\n     41 dak.necessary_columns(q8_hist)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/dask/base.py:342, in DaskMethodsMixin.compute(self, **kwargs)\r\n    318 def compute(self, **kwargs):\r\n    319     \"\"\"Compute this dask collection\r\n    320 \r\n    321     This turns a lazy Dask collection into its in-memory equivalent.\r\n   (...)\r\n    340     dask.compute\r\n    341     \"\"\"\r\n--> 342     (result,) = compute(self, traverse=False, **kwargs)\r\n    343     return result\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/dask/base.py:628, in compute(traverse, optimize_graph, scheduler, get, *args, **kwargs)\r\n    625     postcomputes.append(x.__dask_postcompute__())\r\n    627 with shorten_traceback():\r\n--> 628     results = schedule(dsk, keys, **kwargs)\r\n    630 return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/dask_awkward/lib/core.py:1883, in ArgsKwargsPackedFunction.__call__(self, *args_deps_expanded)\r\n   1881     len_args += n_args\r\n   1882 kwargs = self.kwarg_repacker(args_deps_expanded[len_args:])[0]\r\n-> 1883 return self.fn(*args, **kwargs)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/highlevel.py:1510, in Array.__array_ufunc__(self, ufunc, method, *inputs, **kwargs)\r\n   1445 \"\"\"\r\n   1446 Intercepts attempts to pass this Array to a NumPy\r\n   1447 [universal functions](https://docs.scipy.org/doc/numpy/reference/ufuncs.html)\r\n   (...)\r\n   1507 See also #__array_function__.\r\n   1508 \"\"\"\r\n   1509 name = f\"{type(ufunc).__module__}.{ufunc.__name__}.{method!s}\"\r\n-> 1510 with ak._errors.OperationErrorContext(name, inputs, kwargs):\r\n   1511     return ak._connect.numpy.array_ufunc(ufunc, method, inputs, kwargs)\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_errors.py:85, in ErrorContext.__exit__(self, exception_type, exception_value, traceback)\r\n     78 try:\r\n     79     # Handle caught exception\r\n     80     if (\r\n     81         exception_type is not None\r\n     82         and issubclass(exception_type, Exception)\r\n     83         and self.primary() is self\r\n     84     ):\r\n---> 85         self.handle_exception(exception_type, exception_value)\r\n     86 finally:\r\n     87     # Step out of the way so that another ErrorContext can become primary.\r\n     88     if self.primary() is self:\r\n\r\nFile ~/miniforge3/envs/coffea_2023_check/lib/python3.10/site-packages/awkward/_errors.py:95, in ErrorContext.handle_exception(self, cls, exception)\r\n     93     self.decorate_exception(cls, exception)\r\n     94 else:\r\n---> 95     raise self.decorate_exception(cls, exception)\r\n\r\nTypeError: PlaceholderArray supports only trivial slices, not ndarray\r\n\r\nThis error occurred while calling\r\n\r\n    numpy.add.__call__(\r\n        repr-raised-TypeError\r\n        repr-raised-TypeError\r\n    )\r\n```\r\n\r\nSo we're hitting a placeholder array somewhere in the calculation, which shouldn't be there, it seems?\r\n\r\nIt appears to be something with the concatenate operation:\r\n```python3\r\nfrom coffea.nanoevents import NanoEventsFactory, NanoAODSchema\r\nimport awkward as ak\r\n\r\nif __name__ == \"__main__\":\r\n    NanoAODSchema.error_missing_event_ids = False\r\n\r\n    events = NanoEventsFactory.from_root(\r\n        {\"tests/samples/nano_dy.root\": {\"object_path\": \"Events\", \"steps\": [[0,40]]}},\r\n        metadata={\"dataset\": \"nano_dy\"},\r\n        schemaclass=NanoAODSchema,\r\n    ).events()\r\n\r\n    events[\"leptons\"] = events.Electron\r\n\r\n    pair = ak.argcombinations(events.leptons, 2, fields=[\"l1\", \"l2\"])\r\n\r\n    print((events.leptons[pair.l1] + events.leptons[pair.l2]).pt.compute())\r\n```\r\nExecutes successfully.\r\n\r\n@agoose77 @jpivarski reasonably high priority here since this sort of pattern is common in realistic analysis scenarios.",
  "closed_at":"2023-12-20T18:01:45Z",
  "comments":9,
  "created_at":"2023-12-15T15:50:36Z",
  "id":2043961574,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws551GDm",
  "number":2905,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"concatenation + combinations leaves placeholder arrays in data after form rehydration?",
  "updated_at":"2023-12-20T18:01:45Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Broadcasting of unions should also touch the contents! Fixes #2905 ",
  "closed_at":"2023-12-20T18:01:44Z",
  "comments":1,
  "created_at":"2023-12-16T19:33:49Z",
  "draft":false,
  "id":2044918654,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iLFWX",
  "number":2906,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-20T18:01:44Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: touching of unions",
  "updated_at":"2023-12-20T18:01:45Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.7 \u2192 v0.1.8](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.7...v0.1.8)\n<!--pre-commit.ci end-->",
  "closed_at":"2023-12-19T21:02:56Z",
  "comments":1,
  "created_at":"2023-12-18T19:47:28Z",
  "draft":false,
  "id":2047340552,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iTMfs",
  "number":2907,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-19T21:02:56Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2023-12-19T21:02:57Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":null,
  "closed_at":"2023-12-19T20:59:01Z",
  "comments":0,
  "created_at":"2023-12-19T20:58:54Z",
  "draft":false,
  "id":2049424555,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iaT9q",
  "number":2908,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-19T20:59:01Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"docs: fix indentation of docstring",
  "updated_at":"2023-12-19T20:59:02Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2897 by ensuring that our SDist includes the header-only files. This is necessary both because semantically the SDist should represent a snapshot of the repo (in our case a generated snapshot), and because it's possible to build wheels from SDists, which is not possible if files are missing.",
  "closed_at":"2023-12-20T17:46:04Z",
  "comments":1,
  "created_at":"2023-12-19T22:09:50Z",
  "draft":false,
  "id":2049513929,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ianYv",
  "number":2909,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-20T17:46:04Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: include header-only files in sdist",
  "updated_at":"2023-12-20T17:46:05Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\n2.5.1\n\n### Description and code to reproduce\n\n```python3\r\nimport json\r\nimport awkward as ak\r\n\r\nfromjson = {\r\n    \"class\": \"ListOffsetArray\",\r\n    \"offsets\": \"i64\",\r\n    \"content\": {\r\n        \"class\": \"ListOffsetArray\",\r\n        \"offsets\": \"i64\",\r\n        \"content\": {\r\n            \"class\": \"IndexedOptionArray\",\r\n            \"index\": \"i64\",\r\n            \"content\": {\r\n                \"class\": \"RecordArray\",\r\n                \"fields\": [\r\n                    \"pt\",\r\n                ],\r\n                \"contents\": [\r\n                    {\r\n                        \"class\": \"NumpyArray\",\r\n                        \"primitive\": \"float32\",\r\n                        \"inner_shape\": [],\r\n                        \"parameters\": {\"__doc__\": \"pt\"},\r\n                        \"form_key\": None,\r\n                    },\r\n                ],\r\n                \"parameters\": {\r\n                    \"__record__\": \"PFCand\",\r\n                    \"__doc__\": \"interesting particles from various jet collections\",\r\n                    \"collection_name\": \"PFCands\",\r\n                },\r\n                \"form_key\": None,\r\n            },\r\n            \"parameters\": {},\r\n            \"form_key\": None,\r\n        },\r\n        \"parameters\": {},\r\n        \"form_key\": None,\r\n    },\r\n    \"parameters\": {},\r\n    \"form_key\": None,\r\n}\r\n\r\nform = ak.forms.from_json(json.dumps(fromjson))\r\n\r\nttlayout, report = ak.typetracer.typetracer_with_report(form)\r\n\r\nttarray = ak.Array(ttlayout, behavior=ak.behavior)\r\n\r\nflattened = ak.flatten(ttarray, axis=2)\r\n\r\ncounts = ak.flatten(ak.num(ttarray, axis=2), axis=1)\r\n\r\nunflattened = ak.unflatten(flattened, counts, axis=1)\r\n```\r\nYields the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_dispatch.py\", line 62, in dispatch\r\n    next(gen_or_result)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_unflatten.py\", line 90, in unflatten\r\n    return _impl(array, counts, axis, highlevel, behavior, attrs)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/operations/ak_unflatten.py\", line 98, in _impl\r\n    ctx.unwrap(array, allow_record=False, primitive_policy=\"error\").to_packed(),\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/listoffsetarray.py\", line 2219, in to_packed\r\n    next_content = next._content[: next._offsets[-1]].to_packed()\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/contents/indexedoptionarray.py\", line 1725, in to_packed\r\n    len(original_index) - num_none\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_nplikes/typetracer.py\", line 320, in __len__\r\n    raise AssertionError(\r\nAssertionError: bug in Awkward Array: attempt to get length of a TypeTracerArray\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"form_madness16.py\", line 54, in <module>\r\n    unflattened = ak.unflatten(flattened, counts, axis=1)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_dispatch.py\", line 70, in dispatch\r\n    return gen_or_result\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 85, in __exit__\r\n    self.handle_exception(exception_type, exception_value)\r\n  File \"/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/awkward/_errors.py\", line 95, in handle_exception\r\n    raise self.decorate_exception(cls, exception)\r\nAssertionError: bug in Awkward Array: attempt to get length of a TypeTracerArray\r\n\r\nSee if this has been reported at https://github.com/scikit-hep/awkward/issues\r\n```",
  "closed_at":"2024-01-02T11:43:42Z",
  "comments":1,
  "created_at":"2023-12-21T01:08:46Z",
  "id":2051509917,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws56R46d",
  "number":2910,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"ak.unflatten on a nested IndexedOptionArray typetracer hits a bug trying to calculate lengths",
  "updated_at":"2024-01-02T11:43:42Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\nmaster\n\n### Description and code to reproduce\n\n```python3\r\nfrom coffea.nanoevents import NanoEventsFactory, NanoAODSchema\r\nimport awkward as ak\r\nimport dask_awkward as dak\r\n\r\nif __name__ == \"__main__\":\r\n    NanoAODSchema.error_missing_event_ids = False\r\n\r\n    events = NanoEventsFactory.from_root(\r\n        {\"tests/samples/nano_dy.root\": {\"object_path\": \"Events\", \"steps\": [[0,40]]}},\r\n        metadata={\"dataset\": \"nano_dy\"},\r\n        schemaclass=NanoAODSchema,\r\n    ).events()\r\n\r\n    events[\"leptons\"] = ak.concatenate(\r\n        [events.Electron, events.Muon],\r\n        axis=1,\r\n    )\r\n\r\n    sum_p4 = events.leptons + events.leptons\r\n\r\n    print(dak.necessary_columns(sum_p4.pt))\r\n\r\n    print(sum_p4.pt.compute())\r\n```\r\n\r\nWhile this does function now and does not yield incorrect data it reads a very large number of fields when it should need 10 (the counts of electrons, muons, and the four-momentum components of each). The current performance is rather suboptimal.\r\n\r\nThe code presently outputs:\r\n```\r\n(coffea-dev) lgray@Lindseys-MacBook-Pro coffea % python -i concat_issue_nano.py\r\n/Users/lgray/coffea-dev/coffea/src/coffea/nanoevents/schemas/nanoaod.py:243: RuntimeWarning: Missing cross-reference index for FatJet_genJetAK8Idx => GenJetAK8\r\n  warnings.warn(\r\n{'from-uproot-ad7806f24d5481e9a913897472bb24fa': frozenset({'Electron_cutBased', 'Muon_miniPFRelIso_chg', 'Electron_charge', 'Muon_highPtId', 'Electron_cutBased_HEEP', 'Muon_isGlobal', 'Muon_nStations', 'Muon_softMvaId', 'Electron_mvaFall17V1noIso_WP90', 'nGenPart', 'Electron_vidNestedWPBitmap', 'Muon_tkRelIso', 'Electron_pdgId', 'Electron_energyErr', 'Muon_pfIsoId', 'Electron_mvaFall17V1Iso_WPL', 'Muon_dxyErr', 'Electron_mvaFall17V1Iso_WP90', 'Muon_miniIsoId', 'Electron_r9', 'Electron_dr03TkSumPt', 'Electron_dr03HcalDepth1TowerSumEt', 'Electron_mvaFall17V2noIso', 'Electron_mvaFall17V2Iso_WP80', 'Electron_isPFcand', 'Electron_cutBased_Fall17_V1', 'Muon_dz', 'Muon_isTracker', 'Electron_hoe', 'Electron_mvaFall17V1noIso_WP80', 'nFsrPhoton', 'Electron_mvaTTH', 'Electron_photonIdx', 'Electron_dxy', 'Muon_nTrackerLayers', 'Muon_segmentComp', 'Muon_genPartFlav', 'Muon_tightCharge', 'Electron_dz', 'Muon_dzErr', 'Muon_tunepRelPt', 'Muon_dxy', 'Electron_genPartFlav', 'Muon_mediumId', 'Muon_looseId', 'Electron_mvaFall17V1Iso_WP80', 'Electron_jetRelIso', 'Electron_lostHits', 'Electron_dr03EcalRecHitSumEt', 'Electron_vidNestedWPBitmapHEEP', 'Muon_mvaLowPt', 'Muon_mediumPromptId', 'Muon_softMva', 'nPhoton', 'Electron_miniPFRelIso_chg', 'Muon_fsrPhotonIdx', 'Muon_mvaTTH', 'Muon_pfRelIso04_all', 'Muon_mvaId', 'Electron_mvaFall17V2Iso', 'Muon_ip3d', 'Electron_phi', 'Muon_inTimeMuon', 'Electron_eInvMinusPInv', 'Muon_mass', 'Muon_jetPtRelv2', 'Muon_sip3d', 'Muon_tightId', 'Electron_eCorr', 'Electron_dxyErr', 'Electron_dr03TkSumPtHEEP', 'Muon_jetIdx', 'Electron_pfRelIso03_chg', 'Electron_mvaFall17V1noIso_WPL', 'Electron_mvaFall17V2Iso_WP90', 'Muon_pfRelIso03_chg', 'Electron_pfRelIso03_all', 'Muon_pfRelIso03_all', 'Electron_eta', 'Electron_convVeto', 'Electron_mvaFall17V2Iso_WPL', 'Muon_pt', 'Electron_mvaFall17V1noIso', 'nElectron', 'Electron_sip3d', 'Electron_mvaFall17V1Iso', 'Muon_triggerIdLoose', 'Electron_pt', 'Electron_mvaFall17V2noIso_WPL', 'Muon_multiIsoId', 'Electron_tightCharge', 'Muon_phi', 'Muon_ptErr', 'Muon_eta', 'Electron_miniPFRelIso_all', 'nMuon', 'Electron_deltaEtaSC', 'Muon_jetRelIso', 'Muon_isPFcand', 'Electron_mvaFall17V2noIso_WP90', 'nJet', 'Electron_jetPtRelv2', 'Electron_sieie', 'Electron_cleanmask', 'Muon_tkIsoId', 'Muon_cleanmask', 'Electron_mass', 'Electron_ip3d', 'Muon_genPartIdx', 'Electron_genPartIdx', 'Electron_seedGain', 'Muon_miniPFRelIso_all', 'Muon_charge', 'Electron_dzErr', 'Electron_mvaFall17V2noIso_WP80', 'Muon_pdgId', 'Muon_softId', 'Electron_jetIdx'})}\r\n[[], [59.1], [120, 103], [21.3, 17.2], [154, ...], ..., [], [15.4], [], []]\r\n```\r\n\r\nApologies for the coffea reproducer.",
  "closed_at":"2023-12-27T15:53:11Z",
  "comments":3,
  "created_at":"2023-12-21T01:17:15Z",
  "id":2051515006,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws56R6J-",
  "number":2911,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"Broadcasting of unions overtouches data",
  "updated_at":"2023-12-27T15:53:11Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"Fixes #2910 (@lgray)\r\n\r\n- [ ] Add test",
  "closed_at":"2024-01-02T11:43:41Z",
  "comments":6,
  "created_at":"2023-12-21T03:17:39Z",
  "draft":false,
  "id":2051620390,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ih12S",
  "number":2912,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2024-01-02T11:43:41Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: support typetracer in `to_packed` for `IndexedOptionArray`",
  "updated_at":"2024-01-02T11:43:42Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"COLLABORATOR",
  "body":"This fixes #2911 by changing the projection policy of unions, as described in https://github.com/scikit-hep/awkward/issues/2911#issuecomment-1865440604\r\n\r\nping @lgray ",
  "closed_at":"2023-12-27T15:53:10Z",
  "comments":2,
  "created_at":"2023-12-21T04:00:35Z",
  "draft":false,
  "id":2051647578,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ih7p7",
  "number":2913,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-27T15:53:10Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"fix: lazily project union contents",
  "updated_at":"2023-12-27T15:53:11Z",
  "user":"MDQ6VXNlcjEyNDg0MTM="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"See https://github.com/scientific-python/cookie/pull/348.\n",
  "closed_at":"2023-12-27T15:53:29Z",
  "comments":1,
  "created_at":"2023-12-22T22:38:52Z",
  "draft":false,
  "id":2054555586,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5ir59p",
  "number":2914,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2023-12-27T15:53:29Z"
  },
  "reactions":{
   "+1":1,
   "total_count":1
  },
  "state":"closed",
  "state_reason":null,
  "title":"ci: group dependabot updates",
  "updated_at":"2023-12-27T15:53:30Z",
  "user":"MDQ6VXNlcjQ2MTY5MDY="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.1.8 \u2192 v0.1.11](https://github.com/astral-sh/ruff-pre-commit/compare/v0.1.8...v0.1.11)\n- [github.com/pre-commit/mirrors-mypy: v1.7.1 \u2192 v1.8.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.7.1...v1.8.0)\n<!--pre-commit.ci end-->",
  "closed_at":"2024-01-12T17:00:30Z",
  "comments":1,
  "created_at":"2023-12-25T19:32:31Z",
  "draft":false,
  "id":2055838658,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"PR_kwDODBCWws5iwAVP",
  "number":2915,
  "performed_via_github_app":null,
  "pull_request":{
   "merged_at":"2024-01-12T17:00:30Z"
  },
  "reactions":{},
  "state":"closed",
  "state_reason":null,
  "title":"chore: update pre-commit hooks",
  "updated_at":"2024-01-12T17:00:31Z",
  "user":"MDM6Qm90NjY4NTMxMTM="
 },
 {
  "active_lock_reason":null,
  "assignee":"MDQ6VXNlcjEyNDg0MTM=",
  "assignees":null,
  "author_association":"CONTRIBUTOR",
  "body":"### Version of Awkward Array\n\nmaster + #2912\n\n### Description and code to reproduce\n\n```python3\r\nfrom coffea.nanoevents import NanoEventsFactory, PFNanoAODSchema\r\nfrom distributed import Client\r\n#import dask                                                                                                                                                                                                                                       \r\nimport dask_awkward as dak\r\n\r\nimport awkward as ak\r\n\r\nimport pyinstrument\r\nimport time\r\n\r\nif __name__ == \"__main__\":\r\n    client = Client()\r\n\r\n    PFNanoAODSchema.warn_missing_crossrefs = False\r\n\r\n    events = NanoEventsFactory.from_root(\r\n        {\"./nano_mc2017_1.root\": {\"object_path\": \"Events\", \"steps\": [[0,40],[40, 80]]}},\r\n        schemaclass=PFNanoAODSchema,\r\n    ).events()\r\n\r\n    fatjet = events.FatJet\r\n    pf = ak.flatten(fatjet.constituents.pf, axis=2)\r\n\r\n    unflat_pf = ak.unflatten(pf, counts=ak.flatten(ak.num(fatjet.constituents.pf, axis=2)), axis=1)\r\n\r\n    print(dak.necessary_columns(unflat_pf.pt))\r\n\r\n    print(unflat_pf.pt.compute())\r\n```\r\n\r\nresults in:\r\n```\r\n(coffea-dev) lgray@Lindseys-MacBook-Pro coffea % python connor_repro.py\r\n/Users/lgray/miniforge3/envs/coffea-dev/lib/python3.8/site-packages/dask_awkward/lib/structure.py:895: UserWarning: Please ensure that dask.awkward<flatten, npartitions=2>\r\n        is partitionwise-compatible with dask.awkward<flatten, npartitions=2>\r\n        (e.g. counts comes from a dak.num(array, axis=1)),\r\n        otherwise this unflatten operation will fail when computed!\r\n  warnings.warn(\r\n{'from-uproot-f43b2959a838308afd95be4cbeebc4fb': frozenset({'PFCands_d0', 'PFCands_lostInnerHits', 'PFCands_pdgId', 'PFCands_trkChi2', 'nFatJet', 'PFCands_dz', 'PFCands_pt', 'PFCands_vtxChi2', 'FatJetPFCands_pFCandsIdx', 'PFCands_mass', 'PFCands_eta', 'nFatJetPFCands', 'nPFCands', 'PFCands_charge', 'PFCands_trkQuality', 'PFCands_d0Err', 'PFCands_dzErr', 'PFCands_puppiWeightNoLep', 'PFCands_puppiWeight', 'PFCands_phi', 'FatJet_nConstituents', 'PFCands_pvAssocQuality'})}\r\n[[[19.9, 4.32, 5.29, 6.13, 5.61, ..., 1.33, 0.67, 0.629, 0.668, 0.459]], ...]\r\n```\r\n\r\nwhere it should only require the following columns:\r\n```\r\nfrozenset({'nPFCands', 'FatJet_nConstituents', 'nFatJetPFCands', 'PFCands_pt', 'FatJetPFCands_pFCandsIdx', 'nFatJet'})\r\n```",
  "closed_at":"2024-01-12T16:07:39Z",
  "comments":2,
  "created_at":"2023-12-27T17:20:09Z",
  "id":2057611070,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws56pKc-",
  "number":2916,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"closed",
  "state_reason":"completed",
  "title":"flatten / unflatten operation touches whole records",
  "updated_at":"2024-01-12T16:07:39Z",
  "user":"MDQ6VXNlcjEwNjgwODk="
 },
 {
  "active_lock_reason":null,
  "assignee":null,
  "assignees":null,
  "author_association":"MEMBER",
  "body":"### Version of Awkward Array\n\nHEAD\n\n### Description and code to reproduce\n\nThis is more like a strange \"gotcha\" of NumPy, but `np.real` and `np.imag` are not ufuncs, unlike, for example, np.conjugate.\r\n\r\n```python\r\n>>> np.real\r\n<function real at 0x7e73131d8930>\r\n>>> np.imag\r\n<function imag at 0x7e73131d8b30>\r\n>>> np.conjugate\r\n<ufunc 'conjugate'>\r\n```\r\n\r\nTherefore, it would require some special handling to make it work in Awkward, but not much. Here's what happens now:\r\n\r\n```python\r\n>>> np.real(ak.Array([[1+0.1j, 2+0.2j, 3+0.3j], [], [4+0.4j, 5+0.5j]]))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/highlevel.py\", line 1527, in __array_function__\r\n    return ak._connect.numpy.array_function(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 109, in array_function\r\n    rectilinear_args = tuple(_to_rectilinear(x, backend) for x in args)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 109, in <genexpr>\r\n    rectilinear_args = tuple(_to_rectilinear(x, backend) for x in args)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_connect/numpy.py\", line 78, in _to_rectilinear\r\n    return layout.to_backend(backend).to_backend_array(allow_missing=True)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/contents/content.py\", line 1021, in to_backend_array\r\n    return self._to_backend_array(allow_missing, backend)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/contents/listoffsetarray.py\", line 2078, in _to_backend_array\r\n    return self.to_RegularArray()._to_backend_array(allow_missing, backend)\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/contents/listoffsetarray.py\", line 288, in to_RegularArray\r\n    self._backend.maybe_kernel_error(\r\n  File \"/home/jpivarski/irishep/awkward/src/awkward/_backends/backend.py\", line 67, in maybe_kernel_error\r\n    raise ValueError(self.format_kernel_error(error))\r\nValueError: cannot convert to RegularArray because subarray lengths are not regular (in compiled code: https://github.com/scikit-hep/awkward/blob/awkward-cpp-26/awkward-cpp/src/cpu-kernels/awkward_ListOffsetArray_toRegularArray.cpp#L22)\r\n```\r\n\r\nIt's trying to auto-convert the Awkward Array into a NumPy array to use the function, and it can't because this one is ragged.",
  "closed_at":null,
  "comments":10,
  "created_at":"2023-12-29T19:05:55Z",
  "id":2060336570,
  "labels":null,
  "locked":false,
  "milestone":null,
  "node_id":"I_kwDODBCWws56zj26",
  "number":2917,
  "performed_via_github_app":null,
  "reactions":{},
  "state":"open",
  "state_reason":null,
  "title":"np.real, np.imag, np.round, np.around can't take an Awkward Array as input",
  "updated_at":"2024-01-17T14:58:21Z",
  "user":"MDQ6VXNlcjE4NTI0NDc="
 }
]